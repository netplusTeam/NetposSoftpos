.class public Lcom/visa/vac/tc/emvconverter/CAL;
.super Ljava/lang/Object;
.source "SourceFile"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/visa/vac/tc/emvconverter/CAL$CALListener;,
        Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;,
        Lcom/visa/vac/tc/emvconverter/CAL$getInstance;
    }
.end annotation


# static fields
.field static ContactlessConfiguration:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "[B>;"
        }
    .end annotation
.end field

.field private static ContactlessResult:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static access$200:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;",
            ">;"
        }
    .end annotation
.end field

.field private static access$300:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static convertToArrayMap:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static getFinalOutcome:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static getKernelData:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static setData:I

.field private static setFinalOutcome:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private static setLastSW:I

.field private static transceive:I


# instance fields
.field private $$a:Ljava/lang/String;

.field private BuildConfig:Ljava/lang/String;

.field private ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

.field private NfcTransceiver:Ljava/util/Date;

.field public calTxnState:I

.field private clear:Z

.field public commandState:I

.field private getData:Z

.field private getError:Ljava/text/SimpleDateFormat;

.field private getInstance:I

.field private getInternalData:Ljava/text/SimpleDateFormat;

.field private getLastApdu:Ljava/text/SimpleDateFormat;

.field private getLastSW:Ljava/text/SimpleDateFormat;

.field private getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

.field private getTransactionType:Landroid/util/ArrayMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation
.end field

.field private performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

.field private setError:Ljava/text/SimpleDateFormat;

.field private setLastCommand:Ljava/security/SecureRandom;

.field private setTerminalData:Z

.field private setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;


# direct methods
.method private $$a(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 19

    .line 2598
    move-object/from16 v1, p0

    const-string v0, "\n\n\n"

    const-string v2, "\n\n\n\n "

    const-string v3, "LV.PSE_RR"

    .line 2573
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v5, 0x3b

    xor-int/lit8 v6, v4, 0x3b

    and-int/lit8 v7, v4, 0x3b

    or-int/2addr v6, v7

    const/4 v7, 0x1

    shl-int/2addr v6, v7

    and-int/lit8 v8, v4, -0x3c

    not-int v4, v4

    and-int/2addr v4, v5

    or-int/2addr v4, v8

    neg-int v4, v4

    or-int v5, v6, v4

    shl-int/2addr v5, v7

    xor-int/2addr v4, v6

    sub-int/2addr v5, v4

    rem-int/lit16 v4, v5, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v5, v6

    const/4 v8, 0x0

    if-eqz v5, :cond_0

    .line 2570
    move v5, v8

    goto :goto_0

    :cond_0
    move v5, v7

    :goto_0
    packed-switch v5, :pswitch_data_0

    .line 2538
    const/16 v5, -0x5b

    goto :goto_1

    :pswitch_0
    const/16 v5, 0x7a

    .line 2573
    :goto_1
    and-int/lit8 v10, v4, 0x19

    not-int v11, v10

    or-int/lit8 v4, v4, 0x19

    and-int/2addr v4, v11

    shl-int/2addr v10, v7

    not-int v10, v10

    sub-int/2addr v4, v10

    sub-int/2addr v4, v7

    rem-int/lit16 v10, v4, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v4, v6

    const/16 v10, 0x1c

    if-nez v4, :cond_1

    .line 2570
    move v4, v10

    goto :goto_2

    :cond_1
    const/16 v4, 0x22

    :goto_2
    packed-switch v4, :pswitch_data_1

    .line 2573
    goto :goto_3

    .line 2598
    :pswitch_1
    nop

    .line 2549
    :goto_3
    const/4 v12, -0x1

    :try_start_0
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->clone()Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v13

    .line 2550
    invoke-virtual {v1, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->getCardData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Ljava/lang/String;

    invoke-static {v14}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v14

    .line 2551
    and-int/lit8 v15, v14, 0x2

    or-int/2addr v14, v6

    add-int/2addr v15, v14

    xor-int/lit8 v14, v15, -0x1

    and-int/2addr v15, v12

    shl-int/2addr v15, v7

    add-int/2addr v14, v15

    .line 2552
    const-string v15, "0"

    invoke-static {v14}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v15, v14}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v1, v3, v14}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2554
    new-instance v14, Lcom/visa/vac/tc/emvconverter/ApduCommand;

    invoke-virtual {v1, v13}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v15

    invoke-direct {v14, v15}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 2555
    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v16

    invoke-static/range {v16 .. v16}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v15, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2556
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v14

    invoke-virtual {v4, v14}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v4

    .line 2557
    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v14}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2558
    invoke-virtual {v1, v4}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v14

    .line 2559
    invoke-virtual {v13}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v13
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 2560
    nop

    .line 2561
    nop

    .line 2562
    if-eqz v4, :cond_2

    .line 2570
    const/16 v16, 0x32

    goto :goto_4

    :cond_2
    const/16 v16, 0x50

    :goto_4
    const/16 v17, 0x0

    packed-switch v16, :pswitch_data_2

    goto :goto_5

    .line 2573
    :pswitch_2
    sget v16, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v18, v16, 0x29

    xor-int/lit8 v16, v16, 0x29

    or-int v9, v16, v18

    neg-int v9, v9

    neg-int v9, v9

    or-int v16, v18, v9

    shl-int/lit8 v16, v16, 0x1

    xor-int v9, v18, v9

    sub-int v9, v16, v9

    rem-int/lit16 v11, v9, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v9, v6

    if-nez v9, :cond_3

    .line 2562
    :cond_3
    :try_start_1
    array-length v9, v4

    if-le v9, v6, :cond_5

    .line 2563
    array-length v9, v4

    xor-int/lit8 v11, v9, -0x2

    and-int/lit8 v9, v9, -0x2

    or-int/2addr v9, v11

    shl-int/2addr v9, v7

    neg-int v11, v11

    xor-int v17, v9, v11

    and-int/2addr v9, v11

    shl-int/2addr v9, v7

    add-int v9, v17, v9

    invoke-static {v4, v9}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v4

    .line 2564
    new-instance v9, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v11, v4

    int-to-short v11, v11

    invoke-direct {v9, v4, v8, v11, v7}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSSZ)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 2570
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v8, v11, 0x4b

    not-int v15, v8

    or-int/lit8 v11, v11, 0x4b

    and-int/2addr v11, v15

    shl-int/2addr v8, v7

    add-int/2addr v11, v8

    rem-int/lit16 v8, v11, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v11, v6

    if-nez v11, :cond_4

    .line 2598
    :cond_4
    goto :goto_6

    .line 2568
    :cond_5
    :goto_5
    move-object/from16 v4, v17

    move-object v9, v4

    :goto_6
    const/16 v8, 0x61

    if-eqz v14, :cond_6

    .line 2570
    const/16 v11, 0x58

    goto :goto_7

    :cond_6
    move v11, v8

    :goto_7
    packed-switch v11, :pswitch_data_3

    :pswitch_3
    goto/16 :goto_1b

    .line 2538
    :pswitch_4
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v15, v11, 0x3

    or-int/lit8 v11, v11, 0x3

    add-int/2addr v15, v11

    rem-int/lit16 v11, v15, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v15, v6

    if-eqz v15, :cond_7

    .line 2568
    :cond_7
    :try_start_2
    invoke-static {v13}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v11

    invoke-interface {v11, v14}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v11
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    if-eqz v11, :cond_8

    .line 2570
    move v11, v7

    goto :goto_8

    :cond_8
    const/4 v11, 0x0

    :goto_8
    packed-switch v11, :pswitch_data_4

    .line 2598
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v11, 0x1e

    or-int/lit8 v15, v11, 0x1e

    add-int/2addr v13, v15

    xor-int/lit8 v15, v13, -0x1

    and-int/2addr v13, v12

    shl-int/2addr v13, v7

    add-int/2addr v15, v13

    rem-int/lit16 v13, v15, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v15, v6

    if-nez v15, :cond_9

    .line 2569
    :cond_9
    if-eqz v9, :cond_a

    .line 2570
    const/4 v13, 0x0

    goto :goto_9

    :cond_a
    move v13, v7

    :goto_9
    packed-switch v13, :pswitch_data_5

    .line 2538
    add-int/lit8 v11, v11, 0x4c

    sub-int/2addr v11, v7

    rem-int/lit16 v13, v11, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v11, v6

    if-nez v11, :cond_b

    .line 2570
    const/4 v11, 0x0

    goto :goto_a

    :cond_b
    move v11, v7

    :goto_a
    packed-switch v11, :pswitch_data_6

    :try_start_3
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v11

    goto :goto_c

    :pswitch_5
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v11

    const/16 v13, 0x70

    if-ne v11, v13, :cond_c

    const/16 v11, 0x21

    goto :goto_b

    :cond_c
    const/4 v11, 0x6

    :goto_b
    packed-switch v11, :pswitch_data_7

    goto :goto_e

    :goto_c
    const/16 v13, 0x3c

    if-ne v11, v13, :cond_d

    const/4 v11, 0x0

    goto :goto_d

    :cond_d
    move v11, v7

    :goto_d
    packed-switch v11, :pswitch_data_8

    goto/16 :goto_1a

    :goto_e
    :pswitch_6
    invoke-virtual {v9, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v11
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    if-eqz v11, :cond_e

    const/16 v11, 0x4e

    goto :goto_f

    :cond_e
    const/16 v11, 0x1f

    :goto_f
    packed-switch v11, :pswitch_data_9

    goto/16 :goto_1a

    .line 2598
    :pswitch_7
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v13, v11, 0x1c

    shl-int/2addr v13, v7

    xor-int/2addr v11, v10

    sub-int/2addr v13, v11

    or-int/lit8 v11, v13, -0x1

    shl-int/2addr v11, v7

    xor-int/2addr v13, v12

    sub-int/2addr v11, v13

    rem-int/lit16 v13, v11, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v11, v6

    if-eqz v11, :cond_f

    .line 2570
    move v11, v7

    goto :goto_10

    :cond_f
    const/4 v11, 0x0

    :goto_10
    packed-switch v11, :pswitch_data_a

    .line 2572
    :try_start_4
    invoke-virtual {v9, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v9

    goto :goto_12

    :pswitch_8
    const/16 v11, 0x47

    invoke-virtual {v9, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v9

    .line 2573
    const/16 v11, 0x24

    invoke-virtual {v9, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v11

    if-eqz v11, :cond_10

    .line 2570
    const/16 v11, 0x36

    goto :goto_11

    :cond_10
    const/16 v11, 0x43

    :goto_11
    packed-switch v11, :pswitch_data_b

    goto :goto_14

    .line 2573
    :goto_12
    const/16 v11, 0x4f

    invoke-virtual {v9, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v11

    if-eqz v11, :cond_11

    .line 2570
    const/16 v11, 0x40

    goto :goto_13

    :cond_11
    const/16 v11, 0x5a

    :goto_13
    packed-switch v11, :pswitch_data_c

    .line 2573
    :goto_14
    const/16 v11, 0x50

    invoke-virtual {v9, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v9
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    if-eqz v9, :cond_12

    .line 2570
    move v9, v7

    goto :goto_15

    :cond_12
    const/4 v9, 0x0

    :goto_15
    packed-switch v9, :pswitch_data_d

    goto :goto_18

    .line 2573
    :pswitch_9
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v9, v5, 0x51

    xor-int/lit8 v5, v5, 0x51

    or-int/2addr v5, v9

    neg-int v5, v5

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v9, v5

    sub-int/2addr v9, v7

    rem-int/lit16 v5, v9, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v6

    if-eqz v9, :cond_13

    .line 2575
    :cond_13
    :try_start_5
    invoke-virtual {v1, v4, v8, v14}, Lcom/visa/vac/tc/emvconverter/CAL;->doMatch([BSLjava/lang/String;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    .line 2576
    nop

    .line 2538
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x2d

    not-int v8, v5

    or-int/lit8 v4, v4, 0x2d

    and-int/2addr v4, v8

    shl-int/2addr v5, v7

    not-int v5, v5

    sub-int/2addr v4, v5

    sub-int/2addr v4, v7

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v6

    if-eqz v4, :cond_14

    .line 2570
    move v4, v7

    goto :goto_16

    :cond_14
    const/4 v4, 0x0

    :goto_16
    packed-switch v4, :pswitch_data_e

    .line 2598
    goto :goto_17

    .line 2538
    :pswitch_a
    nop

    .line 2549
    :goto_17
    const/16 v5, 0x5a

    const/4 v8, 0x0

    goto/16 :goto_3

    .line 2588
    :goto_18
    :pswitch_b
    nop

    .line 2570
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x6b

    xor-int/lit8 v0, v0, 0x6b

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v7

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v6

    if-nez v3, :cond_15

    const/16 v0, 0x2c

    goto :goto_19

    :cond_15
    const/16 v0, 0x2b

    :goto_19
    packed-switch v0, :pswitch_data_f

    .line 2598
    :pswitch_c
    move v9, v5

    goto :goto_1c

    .line 2582
    :goto_1a
    :pswitch_d
    nop

    .line 2573
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0xc

    or-int/lit8 v0, v0, 0xc

    add-int/2addr v2, v0

    xor-int/lit8 v0, v2, -0x1

    and-int/2addr v2, v12

    shl-int/2addr v2, v7

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v6

    if-eqz v0, :cond_16

    .line 2598
    :cond_16
    const/16 v9, 0x5a

    goto :goto_1c

    .line 2587
    :goto_1b
    nop

    .line 2588
    :try_start_6
    invoke-virtual/range {p0 .. p0}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration()V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 2573
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x70

    sub-int/2addr v0, v7

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v6

    if-nez v0, :cond_17

    .line 2598
    :cond_17
    const/16 v9, -0x5b

    goto :goto_1c

    .line 2595
    :catch_0
    move-exception v0

    .line 2596
    move v9, v12

    .line 2598
    :goto_1c
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x36

    const/16 v3, 0x36

    and-int/2addr v0, v3

    shl-int/2addr v0, v7

    add-int/2addr v2, v0

    sub-int/2addr v2, v7

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v6

    return v9

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x22
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x32
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x58
        :pswitch_4
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_d
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x6
        :pswitch_d
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x4e
        :pswitch_7
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x43
        :pswitch_b
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x5a
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x2c
        :pswitch_c
    .end packed-switch
.end method

.method private $$a([BLjava/lang/String;)B
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2534
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v1, v0, 0x18

    and-int/lit8 v2, v1, -0x1

    const/4 v3, -0x1

    or-int/2addr v1, v3

    add-int/2addr v2, v1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v1, 0x2

    rem-int/2addr v2, v1

    if-eqz v2, :cond_0

    .line 2519
    :cond_0
    if-eqz p1, :cond_1

    .line 2534
    const/16 v2, 0x24

    goto :goto_0

    :cond_1
    const/16 v2, 0x51

    :goto_0
    const/4 v4, 0x0

    const/4 v5, 0x1

    packed-switch v2, :pswitch_data_0

    and-int/lit8 v2, v0, 0x27

    or-int/lit8 v0, v0, 0x27

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v1

    if-eqz v2, :cond_2

    .line 2519
    :cond_2
    array-length v2, p1

    if-le v2, v1, :cond_3

    .line 2534
    move v2, v5

    goto :goto_1

    :cond_3
    move v2, v4

    :goto_1
    packed-switch v2, :pswitch_data_1

    and-int/lit8 v2, v0, 0x53

    or-int/lit8 v0, v0, 0x53

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v5

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v1

    if-nez v2, :cond_a

    goto/16 :goto_8

    .line 2525
    :pswitch_0
    if-eqz p1, :cond_4

    .line 2534
    move p2, v4

    goto :goto_2

    :cond_4
    move p2, v5

    :goto_2
    packed-switch p2, :pswitch_data_2

    :goto_3
    goto :goto_5

    :pswitch_1
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p2, 0x67

    and-int/lit8 p2, p2, 0x67

    shl-int/2addr p2, v5

    add-int/2addr v0, p2

    rem-int/lit16 p2, v0, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_5

    move p2, v5

    goto :goto_4

    :cond_5
    move p2, v4

    :goto_4
    packed-switch p2, :pswitch_data_3

    .line 2525
    array-length p2, p1

    if-eq p2, v1, :cond_6

    goto :goto_5

    .line 2534
    :pswitch_2
    array-length p2, p1

    const/4 v0, 0x4

    if-eq p2, v0, :cond_6

    goto :goto_3

    .line 2526
    :cond_6
    new-instance p2, Ljava/lang/StringBuilder;

    const-string v0, "main : sendSelectPPSE:: Error in select PPSE:"

    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2527
    const-string p1, "No candidate "

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2528
    const/16 v3, -0x5b

    .line 2534
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 p2, p1, 0x37

    and-int/lit8 v0, p1, 0x37

    or-int/2addr p2, v0

    shl-int/2addr p2, v5

    not-int v0, v0

    or-int/lit8 p1, p1, 0x37

    and-int/2addr p1, v0

    neg-int p1, p1

    or-int v0, p2, p1

    shl-int/2addr v0, v5

    xor-int/2addr p1, p2

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_b

    goto :goto_9

    .line 2525
    :goto_5
    nop

    .line 2534
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 p2, p1, 0x77

    not-int v0, p2

    or-int/lit8 p1, p1, 0x77

    and-int/2addr p1, v0

    shl-int/2addr p2, v5

    neg-int p2, p2

    neg-int p2, p2

    or-int v0, p1, p2

    shl-int/2addr v0, v5

    xor-int/2addr p1, p2

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_7

    const/16 p2, 0x43

    goto :goto_6

    :cond_7
    const/16 p2, 0x63

    :goto_6
    packed-switch p2, :pswitch_data_4

    :pswitch_3
    xor-int/lit8 p2, p1, 0x54

    and-int/lit8 p1, p1, 0x54

    shl-int/2addr p1, v5

    add-int/2addr p2, p1

    or-int/lit8 p1, p2, -0x1

    shl-int/2addr p1, v5

    xor-int/2addr p2, v3

    sub-int/2addr p1, p2

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr p1, v1

    if-nez p1, :cond_8

    .line 2530
    :cond_8
    const-string p1, "main : sendSelectPPSE:: Received Null from Select PPSE"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2531
    nop

    .line 2534
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x73

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v1

    if-eqz p1, :cond_9

    :goto_7
    goto :goto_9

    :cond_9
    move v4, v5

    goto :goto_9

    .line 2520
    :cond_a
    :goto_8
    array-length v0, p1

    invoke-static {p1, v0}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object p1

    .line 2521
    invoke-virtual {p0, p1, p2}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData([BLjava/lang/String;)V

    .line 2523
    iput v5, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2524
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result v3

    .line 2534
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 p2, 0x7b

    and-int/lit8 v0, p1, -0x7c

    not-int v2, p1

    and-int/2addr v2, p2

    or-int/2addr v0, v2

    and-int/2addr p1, p2

    shl-int/2addr p1, v5

    or-int p2, v0, p1

    shl-int/2addr p2, v5

    xor-int/2addr p1, v0

    sub-int/2addr p2, p1

    rem-int/lit16 p1, p2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p2, v1

    if-eqz p2, :cond_b

    goto :goto_7

    :cond_b
    :goto_9
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x34

    sub-int/2addr p1, v5

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr p1, v1

    return v3

    nop

    :pswitch_data_0
    .packed-switch 0x51
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x63
        :pswitch_3
    .end packed-switch
.end method

.method private static $$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V
    .locals 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/Object;",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 1450
    nop

    .line 1408
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x43

    not-int v2, v1

    or-int/lit8 v3, v0, 0x43

    and-int/2addr v2, v3

    const/4 v3, 0x1

    shl-int/2addr v1, v3

    not-int v1, v1

    sub-int/2addr v2, v1

    sub-int/2addr v2, v3

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v1, 0x2

    rem-int/2addr v2, v1

    if-eqz v2, :cond_0

    .line 1405
    :cond_0
    const/4 v2, 0x0

    if-eqz p2, :cond_1

    .line 1428
    move v4, v2

    goto :goto_0

    :cond_1
    move v4, v3

    :goto_0
    const/4 v5, 0x0

    packed-switch v4, :pswitch_data_0

    .line 1450
    and-int/lit8 v4, v0, 0x61

    xor-int/lit8 v6, v0, 0x61

    or-int/2addr v6, v4

    add-int/2addr v4, v6

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v1

    if-eqz v4, :cond_2

    .line 1406
    :cond_2
    instance-of v4, p2, Ljava/lang/String;

    if-eqz v4, :cond_3

    .line 1428
    move v4, v3

    goto :goto_1

    :cond_3
    move v4, v2

    :goto_1
    const-string v7, "Terminal"

    const/16 v8, 0x29

    const/16 v9, 0x63

    const/16 v10, 0x10

    const/4 v11, -0x1

    packed-switch v4, :pswitch_data_1

    .line 1443
    instance-of v0, p2, Lcom/google/gson/JsonArray;

    if-eqz v0, :cond_1f

    goto/16 :goto_1f

    .line 1410
    :pswitch_0
    xor-int/lit8 v4, v0, 0x29

    and-int/2addr v0, v8

    or-int/2addr v0, v4

    shl-int/2addr v0, v3

    neg-int v4, v4

    or-int v6, v0, v4

    shl-int/2addr v6, v3

    xor-int/2addr v0, v4

    sub-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v1

    if-eqz v6, :cond_4

    .line 1407
    :cond_4
    const-string v0, "Date"

    invoke-virtual {p0, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_5

    .line 1428
    move v0, v3

    goto :goto_2

    :cond_5
    move v0, v2

    :goto_2
    const-string v4, "00"

    packed-switch v0, :pswitch_data_2

    .line 1409
    const/16 v0, 0x9c

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_7

    goto :goto_5

    .line 1450
    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x3d

    xor-int/lit8 v0, v0, 0x3d

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v3

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v1

    if-nez v2, :cond_6

    .line 1428
    const/16 v0, 0x46

    goto :goto_3

    :cond_6
    const/16 v0, 0x54

    :goto_3
    packed-switch v0, :pswitch_data_3

    .line 1408
    check-cast p2, Ljava/lang/String;

    invoke-static {p2}, Lcom/visa/vac/tc/emvconverter/Utils;->BuildConfig(Ljava/lang/String;)[B

    move-result-object p0

    invoke-static {p1, p0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    goto :goto_4

    :pswitch_2
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->BuildConfig(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    goto/16 :goto_1a

    :goto_4
    :try_start_0
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1450
    :catchall_0
    move-exception p0

    throw p0

    .line 1428
    :goto_5
    move v0, v2

    goto :goto_6

    :cond_7
    move v0, v3

    :goto_6
    packed-switch v0, :pswitch_data_4

    .line 1408
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v6, v0, 0x2

    shl-int/2addr v6, v3

    xor-int/2addr v0, v1

    sub-int/2addr v6, v0

    sub-int/2addr v6, v2

    sub-int/2addr v6, v3

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v1

    if-eqz v6, :cond_12

    goto/16 :goto_10

    .line 1424
    :pswitch_3
    const/16 v0, -0x60bf

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_8

    .line 1428
    const/16 v0, 0x39

    goto :goto_7

    :cond_8
    const/16 v0, 0x50

    :goto_7
    packed-switch v0, :pswitch_data_5

    .line 1410
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x1b

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_10

    goto/16 :goto_e

    .line 1426
    :pswitch_4
    const-string v0, "KV.AUTH_RESPONSE_CODE"

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 1428
    const/16 v0, 0x2a

    goto :goto_8

    :cond_9
    const/16 v0, 0x2d

    :goto_8
    packed-switch v0, :pswitch_data_6

    .line 1429
    const/16 v0, -0x60fe

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/16 v4, 0xa

    if-eqz v0, :cond_c

    goto :goto_b

    .line 1410
    :pswitch_5
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x71

    or-int/lit8 v0, v0, 0x71

    or-int v4, v2, v0

    shl-int/2addr v4, v3

    xor-int/2addr v0, v2

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v4, v1

    if-nez v4, :cond_a

    .line 1428
    const/16 v0, 0x60

    goto :goto_9

    :cond_a
    const/16 v0, 0x40

    :goto_9
    packed-switch v0, :pswitch_data_7

    .line 1427
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->asciiToHex(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-static {p1, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1428
    const/16 v2, 0x2945

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v2

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->asciiToHex(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    goto :goto_a

    .line 1427
    :pswitch_6
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->asciiToHex(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-static {p1, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1428
    const/16 v2, 0x8a

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v2

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->asciiToHex(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    .line 1410
    :goto_a
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0xe

    and-int/lit8 v0, v0, 0xe

    shl-int/2addr v0, v3

    add-int/2addr v2, v0

    xor-int/lit8 v0, v2, -0x1

    and-int/2addr v2, v11

    shl-int/2addr v2, v3

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_1b

    goto/16 :goto_1a

    .line 1430
    :goto_b
    const/16 v0, 0x81

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v6

    new-instance v7, Ljava/math/BigInteger;

    move-object v8, p2

    check-cast v8, Ljava/lang/String;

    invoke-direct {v7, v8, v4}, Ljava/math/BigInteger;-><init>(Ljava/lang/String;I)V

    invoke-virtual {v7, v10}, Ljava/math/BigInteger;->toString(I)Ljava/lang/String;

    move-result-object v4

    invoke-static {v6, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/String;)V

    .line 1431
    sget-object v4, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-static {v0, p2, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1432
    invoke-static {v8}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    .line 1408
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x45

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_b

    .line 1428
    move v2, v3

    goto :goto_c

    :cond_b
    nop

    :goto_c
    packed-switch v2, :pswitch_data_8

    .line 1450
    goto/16 :goto_1a

    .line 1408
    :pswitch_7
    goto/16 :goto_1b

    .line 1433
    :cond_c
    const/16 v0, -0x60fd

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 1434
    const/16 v0, -0x60fc

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v2

    new-instance v6, Ljava/math/BigInteger;

    move-object v7, p2

    check-cast v7, Ljava/lang/String;

    invoke-direct {v6, v7, v4}, Ljava/math/BigInteger;-><init>(Ljava/lang/String;I)V

    invoke-virtual {v6, v10}, Ljava/math/BigInteger;->toString(I)Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/String;)V

    .line 1435
    sget-object v2, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-static {v0, p2, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1436
    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    .line 1450
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x5f

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_1b

    goto/16 :goto_1a

    .line 1437
    :cond_d
    sget-object v0, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {v0, v7}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 1428
    move v2, v3

    goto :goto_d

    :cond_e
    nop

    :goto_d
    packed-switch v2, :pswitch_data_9

    goto/16 :goto_1b

    .line 1410
    :pswitch_8
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x2f

    xor-int/lit8 v0, v0, 0x2f

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v3

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v1

    if-nez v2, :cond_f

    .line 1438
    :cond_f
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    .line 1450
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x3f

    xor-int/lit8 v0, v0, 0x3f

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    or-int v4, v2, v0

    shl-int/2addr v4, v3

    xor-int/2addr v0, v2

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v1

    if-eqz v4, :cond_1b

    goto/16 :goto_1a

    .line 1425
    :cond_10
    :goto_e
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(Ljava/lang/String;[B)V

    .line 1410
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x20

    sub-int/2addr v0, v3

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_11

    .line 1428
    move v2, v3

    goto :goto_f

    :cond_11
    nop

    :goto_f
    packed-switch v2, :pswitch_data_a

    .line 1410
    goto/16 :goto_1b

    .line 1428
    :goto_10
    const/16 v0, 0x4f

    goto :goto_11

    :cond_12
    const/16 v0, 0x1a

    :goto_11
    packed-switch v0, :pswitch_data_b

    .line 1410
    move-object v0, p2

    check-cast v0, Ljava/lang/String;

    invoke-virtual {v0}, Ljava/lang/Object;->hashCode()I

    move-result v6

    sparse-switch v6, :sswitch_data_0

    move v2, v11

    goto/16 :goto_18

    :pswitch_9
    check-cast p2, Ljava/lang/String;

    invoke-virtual {p2}, Ljava/lang/Object;->hashCode()I

    :try_start_1
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 1408
    :catchall_1
    move-exception p0

    throw p0

    .line 1410
    :sswitch_0
    const-string v6, "Payment"

    invoke-virtual {v0, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_13

    .line 1428
    const/16 v0, 0x53

    goto :goto_12

    :cond_13
    const/16 v0, 0x34

    :goto_12
    packed-switch v0, :pswitch_data_c

    goto :goto_14

    .line 1408
    :pswitch_a
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v6, v0, 0x37

    not-int v7, v6

    or-int/lit8 v0, v0, 0x37

    and-int/2addr v0, v7

    shl-int/2addr v6, v3

    and-int v7, v0, v6

    or-int/2addr v0, v6

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v1

    if-nez v7, :cond_14

    .line 1410
    :cond_14
    and-int/lit8 v6, v0, 0x59

    not-int v7, v6

    or-int/lit8 v0, v0, 0x59

    and-int/2addr v0, v7

    shl-int/2addr v6, v3

    and-int v7, v0, v6

    or-int/2addr v0, v6

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v1

    if-eqz v7, :cond_15

    .line 1450
    :cond_15
    goto :goto_18

    .line 1410
    :sswitch_1
    const-string v6, "Refund"

    invoke-virtual {v0, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 1428
    goto :goto_13

    :cond_16
    move v2, v3

    :goto_13
    packed-switch v2, :pswitch_data_d

    :goto_14
    move v2, v11

    goto :goto_18

    .line 1450
    :pswitch_b
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v0, 0x7c

    sub-int/2addr v2, v3

    rem-int/lit16 v6, v2, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v1

    if-eqz v2, :cond_17

    .line 1428
    const/16 v2, 0x3a

    goto :goto_15

    :cond_17
    move v2, v9

    :goto_15
    packed-switch v2, :pswitch_data_e

    .line 1450
    goto :goto_16

    .line 1410
    :pswitch_c
    nop

    .line 1450
    :goto_16
    xor-int/lit8 v2, v0, 0x5f

    and-int/lit8 v6, v0, 0x5f

    or-int/2addr v2, v6

    shl-int/2addr v2, v3

    and-int/lit8 v6, v0, -0x60

    not-int v0, v0

    and-int/lit8 v0, v0, 0x5f

    or-int/2addr v0, v6

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v1

    if-eqz v2, :cond_18

    .line 1428
    move v0, v1

    goto :goto_17

    :cond_18
    const/16 v0, 0x2e

    :goto_17
    packed-switch v0, :pswitch_data_f

    .line 1450
    :pswitch_d
    nop

    .line 1410
    move v2, v3

    :goto_18
    const-string v0, "20"

    packed-switch v2, :pswitch_data_10

    goto :goto_19

    .line 1416
    :pswitch_e
    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/String;)V

    .line 1417
    nop

    .line 1410
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, p2, 0x3d

    and-int/lit8 p2, p2, 0x3d

    or-int/2addr p2, v2

    shl-int/2addr p2, v3

    neg-int v2, v2

    xor-int v4, p2, v2

    and-int/2addr p2, v2

    shl-int/2addr p2, v3

    add-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v1

    if-eqz v4, :cond_19

    .line 1450
    :cond_19
    move-object p2, v0

    goto :goto_19

    .line 1412
    :pswitch_f
    invoke-static {p1, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/String;)V

    .line 1413
    nop

    .line 1410
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p2, 0x63

    not-int v2, v0

    or-int/2addr p2, v9

    and-int/2addr p2, v2

    shl-int/2addr v0, v3

    or-int v2, p2, v0

    shl-int/2addr v2, v3

    xor-int/2addr p2, v0

    sub-int/2addr v2, p2

    rem-int/lit16 p2, v2, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v1

    if-nez v2, :cond_1a

    .line 1450
    :cond_1a
    move-object p2, v4

    goto :goto_1b

    .line 1417
    :goto_19
    nop

    .line 1410
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x19

    and-int/lit8 v0, v0, 0x19

    shl-int/2addr v0, v3

    and-int v4, v2, v0

    or-int/2addr v0, v2

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v4, v1

    if-nez v4, :cond_1b

    .line 1450
    :cond_1b
    :goto_1a
    :pswitch_10
    nop

    .line 1440
    :goto_1b
    const-string v0, "KV."

    invoke-virtual {p1, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 1428
    const/16 v0, 0x5a

    goto :goto_1c

    :cond_1c
    const/16 v0, 0x4b

    :goto_1c
    packed-switch v0, :pswitch_data_11

    :goto_1d
    goto/16 :goto_28

    .line 1410
    :pswitch_11
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x75

    and-int/lit8 v4, v0, 0x75

    or-int/2addr v2, v4

    shl-int/2addr v2, v3

    not-int v4, v4

    or-int/lit8 v0, v0, 0x75

    and-int/2addr v0, v4

    neg-int v0, v0

    or-int v4, v2, v0

    shl-int/2addr v4, v3

    xor-int/2addr v0, v2

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v1

    if-eqz v4, :cond_1d

    .line 1441
    :cond_1d
    invoke-static {p1, p2, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1450
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v0, 0x57

    xor-int/lit8 v2, p1, 0x57

    and-int/lit8 v4, p1, 0x57

    or-int/2addr v2, v4

    shl-int/2addr v2, v3

    and-int/lit8 v4, p1, -0x58

    not-int p1, p1

    and-int/2addr p1, v0

    or-int/2addr p1, v4

    sub-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v1

    if-eqz v2, :cond_1e

    :cond_1e
    :goto_1e
    :pswitch_12
    goto/16 :goto_28

    .line 1428
    :goto_1f
    move v0, v3

    goto :goto_20

    :cond_1f
    move v0, v2

    :goto_20
    packed-switch v0, :pswitch_data_12

    .line 1450
    xor-int/lit8 v0, v6, 0x3

    and-int/lit8 v4, v6, 0x3

    shl-int/2addr v4, v3

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_20

    .line 1428
    move v0, v3

    goto :goto_21

    :cond_20
    move v0, v2

    :goto_21
    packed-switch v0, :pswitch_data_13

    .line 1450
    move-object v0, p2

    check-cast v0, Lcom/google/gson/JsonArray;

    invoke-virtual {v0}, Lcom/google/gson/JsonArray;->size()I

    move-result v0

    goto :goto_22

    .line 1443
    :pswitch_13
    move-object v0, p2

    check-cast v0, Lcom/google/gson/JsonArray;

    invoke-virtual {v0}, Lcom/google/gson/JsonArray;->size()I

    move-result v0

    if-lez v0, :cond_21

    goto :goto_23

    .line 1450
    :goto_22
    const/16 v4, 0x2f

    :try_start_2
    div-int/2addr v4, v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    if-lez v0, :cond_21

    .line 1444
    :goto_23
    new-instance v0, Lcom/google/gson/Gson;

    invoke-direct {v0}, Lcom/google/gson/Gson;-><init>()V

    invoke-virtual {v0, p2}, Lcom/google/gson/Gson;->toJson(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1410
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x17

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v1

    if-eqz p1, :cond_1e

    goto :goto_1e

    .line 1445
    :cond_21
    :pswitch_14
    instance-of v0, p2, Ljava/util/ArrayList;

    if-eqz v0, :cond_22

    .line 1428
    goto :goto_24

    :cond_22
    move v2, v3

    :goto_24
    packed-switch v2, :pswitch_data_14

    goto :goto_26

    .line 1450
    :pswitch_15
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x10

    shl-int/2addr v2, v3

    xor-int/2addr v0, v10

    sub-int/2addr v2, v0

    and-int/lit8 v0, v2, -0x1

    or-int/2addr v2, v11

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_23

    .line 1445
    :cond_23
    move-object v0, p2

    check-cast v0, Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/AbstractCollection;->size()I

    move-result v0

    if-lez v0, :cond_25

    .line 1446
    new-instance v0, Lcom/google/gson/Gson;

    invoke-direct {v0}, Lcom/google/gson/Gson;-><init>()V

    invoke-virtual {v0, p2}, Lcom/google/gson/Gson;->toJson(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1408
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x63

    xor-int/2addr p1, v9

    or-int/2addr p1, v0

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_24

    .line 1428
    const/16 p1, 0x56

    goto :goto_25

    :cond_24
    const/16 p1, 0x14

    :goto_25
    packed-switch p1, :pswitch_data_15

    .line 1408
    goto :goto_28

    .line 1447
    :cond_25
    :goto_26
    sget-object v0, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {v0, v7}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_26

    .line 1428
    const/16 v8, 0x33

    goto :goto_27

    :cond_26
    nop

    :goto_27
    packed-switch v8, :pswitch_data_16

    goto/16 :goto_1d

    .line 1450
    :pswitch_16
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v2, 0x77

    and-int/lit8 v4, v0, -0x78

    not-int v6, v0

    and-int/2addr v6, v2

    or-int/2addr v4, v6

    and-int/2addr v0, v2

    shl-int/2addr v0, v3

    or-int v2, v4, v0

    shl-int/2addr v2, v3

    xor-int/2addr v0, v4

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v1

    if-nez v2, :cond_27

    .line 1448
    :cond_27
    invoke-static {p1, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1408
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p1, 0x2f

    and-int/lit8 p1, p1, 0x2f

    or-int/2addr p1, v0

    shl-int/2addr p1, v3

    sub-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v1

    if-eqz p1, :cond_1e

    goto/16 :goto_1e

    .line 1450
    :goto_28
    invoke-static {p0, p2, p3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p0, p0, 0x9

    rem-int/lit16 p1, p0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr p0, v1

    if-nez p0, :cond_28

    :cond_28
    :pswitch_17
    nop

    .line 1410
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 p1, p0, -0xe

    not-int p2, p0

    and-int/lit8 p2, p2, 0xd

    or-int/2addr p1, p2

    and-int/lit8 p0, p0, 0xd

    shl-int/2addr p0, v3

    neg-int p0, p0

    neg-int p0, p0

    or-int p2, p1, p0

    shl-int/2addr p2, v3

    xor-int/2addr p0, p1

    sub-int/2addr p2, p0

    rem-int/lit16 p0, p2, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p2, v1

    if-eqz p2, :cond_29

    .line 1428
    const/16 v1, 0xc

    goto :goto_29

    :cond_29
    nop

    :goto_29
    packed-switch v1, :pswitch_data_17

    .line 1410
    goto :goto_2a

    .line 1450
    :pswitch_18
    return-void

    .line 1410
    :goto_2a
    :try_start_3
    throw v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    :catchall_2
    move-exception p0

    throw p0

    .line 1450
    :catchall_3
    move-exception p0

    throw p0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_17
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x54
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x50
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x2a
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x40
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x4f
        :pswitch_9
    .end packed-switch

    :sswitch_data_0
    .sparse-switch
        -0x6e533468 -> :sswitch_1
        0x3454c9e6 -> :sswitch_0
    .end sparse-switch

    :pswitch_data_c
    .packed-switch 0x53
        :pswitch_a
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x63
        :pswitch_c
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x2
        :pswitch_d
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_f
        :pswitch_e
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x5a
        :pswitch_11
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_14
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x0
        :pswitch_15
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x14
        :pswitch_12
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x33
        :pswitch_16
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x2
        :pswitch_18
    .end packed-switch
.end method

.method private $$a(Z)V
    .locals 8

    .line 192
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v1, 0x29

    xor-int/lit8 v2, v0, 0x29

    and-int/lit8 v3, v0, 0x29

    or-int/2addr v2, v3

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    and-int/lit8 v4, v0, -0x2a

    not-int v0, v0

    and-int/2addr v0, v1

    or-int/2addr v0, v4

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    .line 154
    :cond_0
    const/4 v0, 0x0

    if-nez p1, :cond_1

    .line 155
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    sput-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    .line 156
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    sput-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->getKernelData:Landroid/util/ArrayMap;

    .line 157
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    .line 158
    sput-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->convertToArrayMap:Landroid/util/ArrayMap;

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(Landroid/util/ArrayMap;)V

    .line 159
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    .line 160
    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    .line 192
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v1, v1, 0x43

    rem-int/lit16 v2, v1, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1

    .line 162
    :cond_1
    new-instance v1, Landroid/util/ArrayMap;

    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    sput-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->getFinalOutcome:Landroid/util/ArrayMap;

    .line 163
    iput v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 164
    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    .line 167
    const/4 v1, 0x3

    new-array v2, v1, [B

    .line 168
    new-array v1, v1, [B

    .line 170
    iget-object v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInternalData:Ljava/text/SimpleDateFormat;

    iget-object v5, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    invoke-virtual {v4, v5}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4, v2, v0}, Lcom/visa/vac/tc/emvconverter/Utils;->ContactlessConfiguration(Ljava/lang/String;[BS)S

    .line 171
    iget-object v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setError:Ljava/text/SimpleDateFormat;

    iget-object v5, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    invoke-virtual {v4, v5}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4, v1, v0}, Lcom/visa/vac/tc/emvconverter/Utils;->ContactlessConfiguration(Ljava/lang/String;[BS)S

    .line 173
    iget-object v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getLastApdu:Ljava/text/SimpleDateFormat;

    iget-object v5, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    invoke-virtual {v4, v5}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v4

    .line 174
    iget-object v5, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getError:Ljava/text/SimpleDateFormat;

    iget-object v6, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    invoke-virtual {v5, v6}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v5

    .line 175
    iget-object v6, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getLastSW:Ljava/text/SimpleDateFormat;

    iget-object v7, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    invoke-virtual {v6, v7}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v6

    .line 177
    const/16 v7, 0x9a

    invoke-static {v7, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(S[B)V

    .line 178
    const/16 v2, -0x60df

    invoke-static {v2, v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(S[B)V

    .line 179
    const/16 v1, -0x60fd

    const-string v2, "00 00 00 00 00 00"

    invoke-static {v1, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeTerminalValue(SLjava/lang/String;)V

    .line 180
    if-nez p1, :cond_2

    .line 192
    const/16 p1, 0x50

    goto :goto_0

    :cond_2
    const/16 p1, 0xe

    :goto_0
    packed-switch p1, :pswitch_data_0

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, p1, 0x21

    and-int/lit8 v2, p1, 0x21

    or-int/2addr v1, v2

    shl-int/2addr v1, v3

    not-int v2, v2

    or-int/lit8 p1, p1, 0x21

    and-int/2addr p1, v2

    neg-int p1, p1

    and-int v2, v1, p1

    or-int/2addr p1, v1

    add-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_3

    .line 181
    :cond_3
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->setFinalOutcome:Landroid/util/ArrayMap;

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Landroid/util/ArrayMap;)V

    .line 182
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Landroid/util/ArrayMap;)V

    .line 192
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x43

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_4

    move p1, v3

    goto :goto_1

    :cond_4
    move p1, v0

    .line 185
    :goto_1
    :pswitch_0
    const-string p1, "KV.PARTIAL_MATCH"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    if-nez v1, :cond_5

    .line 192
    goto :goto_2

    :cond_5
    move v0, v3

    :goto_2
    packed-switch v0, :pswitch_data_1

    :goto_3
    goto :goto_4

    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x60

    and-int/lit8 v0, v0, 0x60

    shl-int/2addr v0, v3

    add-int/2addr v1, v0

    and-int/lit8 v0, v1, -0x1

    or-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_6

    .line 186
    :cond_6
    const-string v0, "TRUE"

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 192
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x3d

    not-int v1, v0

    or-int/lit8 p1, p1, 0x3d

    and-int/2addr p1, v1

    shl-int/2addr v0, v3

    neg-int v0, v0

    neg-int v0, v0

    or-int v1, p1, v0

    shl-int/2addr v1, v3

    xor-int/2addr p1, v0

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_7

    const/16 p1, 0xc

    goto :goto_3

    :cond_7
    const/16 p1, 0x28

    goto :goto_3

    .line 188
    :goto_4
    const-string p1, "DtTm"

    invoke-static {p1, v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 189
    const-string p1, "emv.poi.Date"

    invoke-static {p1, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 190
    const-string p1, "emv.poi.Time"

    invoke-static {p1, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 192
    new-instance p1, Ljava/util/ArrayList;

    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    sput-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x39

    and-int/lit8 v1, p1, 0x39

    or-int/2addr v0, v1

    shl-int/2addr v0, v3

    not-int v1, v1

    or-int/lit8 p1, p1, 0x39

    and-int/2addr p1, v1

    neg-int p1, p1

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    shl-int/2addr p1, v3

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return-void

    nop

    :pswitch_data_0
    .packed-switch 0xe
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch
.end method

.method static constructor <clinit>()V
    .locals 5

    .line 131
    const/4 v0, 0x0

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v1, 0x1

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    const/4 v2, 0x1

    and-int/lit8 v2, v2, 0x25

    or-int/lit8 v3, v1, 0x25

    xor-int v4, v2, v3

    and-int/2addr v2, v3

    shl-int/2addr v2, v1

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_0

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    packed-switch v0, :pswitch_data_0

    return-void

    :pswitch_0
    const/4 v0, 0x0

    :try_start_0
    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    throw v0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method public constructor <init>(Lcom/visa/vac/tc/emvconverter/CAL$CALListener;)V
    .locals 3

    .line 140
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 132
    new-instance v0, Ljava/text/SimpleDateFormat;

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v2, "yyMMdd"

    invoke-direct {v0, v2, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInternalData:Ljava/text/SimpleDateFormat;

    .line 133
    new-instance v0, Ljava/text/SimpleDateFormat;

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v2, "HHmmss"

    invoke-direct {v0, v2, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setError:Ljava/text/SimpleDateFormat;

    .line 134
    new-instance v0, Ljava/text/SimpleDateFormat;

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v2, "yyyy-MM-dd"

    invoke-direct {v0, v2, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getError:Ljava/text/SimpleDateFormat;

    .line 135
    new-instance v0, Ljava/text/SimpleDateFormat;

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v2, "HH:mm:ss"

    invoke-direct {v0, v2, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getLastApdu:Ljava/text/SimpleDateFormat;

    .line 136
    new-instance v0, Ljava/text/SimpleDateFormat;

    sget-object v1, Ljava/util/Locale;->US:Ljava/util/Locale;

    const-string v2, "yyyy-MM-dd\'T\'HH:mm:ss"

    invoke-direct {v0, v2, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;Ljava/util/Locale;)V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getLastSW:Ljava/text/SimpleDateFormat;

    .line 141
    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    .line 142
    new-instance p1, Landroid/util/ArrayMap;

    invoke-direct {p1}, Landroid/util/ArrayMap;-><init>()V

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    .line 143
    new-instance p1, Landroid/util/ArrayMap;

    invoke-direct {p1}, Landroid/util/ArrayMap;-><init>()V

    sput-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    .line 144
    new-instance p1, Ljava/util/Date;

    invoke-direct {p1}, Ljava/util/Date;-><init>()V

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    .line 145
    new-instance p1, Ljava/security/SecureRandom;

    invoke-direct {p1}, Ljava/security/SecureRandom;-><init>()V

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastCommand:Ljava/security/SecureRandom;

    .line 146
    const/4 p1, 0x0

    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Z)V

    .line 147
    return-void
.end method

.method private static BuildConfig(Lcom/google/gson/JsonObject;Landroid/util/ArrayMap;)V
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/google/gson/JsonObject;",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 1311
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, -0x74

    not-int v2, v0

    const/16 v3, 0x73

    and-int/2addr v2, v3

    or-int/2addr v1, v2

    and-int/2addr v0, v3

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    not-int v0, v0

    sub-int/2addr v1, v0

    sub-int/2addr v1, v2

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 1280
    :cond_0
    invoke-virtual {p0}, Lcom/google/gson/JsonObject;->keySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 1311
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v4, v1, 0x4d

    shl-int/2addr v4, v2

    and-int/lit8 v5, v1, -0x4e

    not-int v1, v1

    const/16 v6, 0x4d

    and-int/2addr v1, v6

    or-int/2addr v1, v5

    neg-int v1, v1

    xor-int v5, v4, v1

    and-int/2addr v1, v4

    shl-int/2addr v1, v2

    add-int/2addr v5, v1

    rem-int/lit16 v1, v5, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_1

    :cond_1
    :goto_0
    :pswitch_0
    nop

    .line 1281
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    const/4 v4, 0x0

    if-eqz v1, :cond_2

    .line 1303
    move v1, v2

    goto :goto_1

    :cond_2
    move v1, v4

    :goto_1
    packed-switch v1, :pswitch_data_0

    .line 1311
    goto/16 :goto_1c

    :pswitch_1
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v5, v1, 0x75

    xor-int/lit8 v1, v1, 0x75

    or-int/2addr v1, v5

    neg-int v1, v1

    neg-int v1, v1

    and-int v7, v5, v1

    or-int/2addr v1, v5

    add-int/2addr v7, v1

    rem-int/lit16 v1, v7, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_3

    .line 1282
    :cond_3
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 1283
    invoke-virtual {p0, v1}, Lcom/google/gson/JsonObject;->get(Ljava/lang/String;)Lcom/google/gson/JsonElement;

    move-result-object v5

    .line 1284
    nop

    .line 1285
    const-string v7, "emv.tx.k"

    invoke-virtual {v1, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-nez v7, :cond_4

    .line 1303
    move v7, v4

    goto :goto_2

    :cond_4
    move v7, v2

    :goto_2
    const/16 v8, 0x58

    const/4 v9, 0x0

    packed-switch v7, :pswitch_data_1

    .line 1307
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v7, v7, 0x1b

    sub-int/2addr v7, v2

    xor-int/lit8 v10, v7, -0x1

    and-int/lit8 v7, v7, -0x1

    shl-int/2addr v7, v2

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_5

    .line 1303
    move v7, v2

    goto :goto_3

    :cond_5
    move v7, v4

    :goto_3
    const-string v10, "emv.ngk.k"

    packed-switch v7, :pswitch_data_2

    .line 1307
    invoke-virtual {v1, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    goto/16 :goto_1b

    .line 1285
    :pswitch_2
    invoke-virtual {v1, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-nez v7, :cond_6

    .line 1303
    move v7, v8

    goto :goto_4

    :cond_6
    const/16 v7, 0xf

    :goto_4
    packed-switch v7, :pswitch_data_3

    .line 1311
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v10, v7, 0x2f

    and-int/lit8 v7, v7, 0x2f

    or-int/2addr v7, v10

    shl-int/2addr v7, v2

    sub-int/2addr v7, v10

    rem-int/lit16 v10, v7, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_7

    .line 1285
    :cond_7
    const-string v7, "paymentsystem.tx.k"

    invoke-virtual {v1, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_8

    .line 1303
    move v7, v4

    goto :goto_5

    :cond_8
    move v7, v2

    :goto_5
    packed-switch v7, :pswitch_data_4

    goto :goto_6

    .line 1286
    :pswitch_3
    const-string v7, ".k"

    invoke-virtual {v1, v7}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v10

    and-int/lit8 v11, v10, 0x1

    xor-int/2addr v10, v2

    or-int/2addr v10, v11

    add-int/2addr v11, v10

    invoke-virtual {v1, v7}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v7

    const-string v10, "m."

    invoke-virtual {v1, v10, v7}, Ljava/lang/String;->indexOf(Ljava/lang/String;I)I

    move-result v7

    add-int/lit8 v7, v7, 0x2

    or-int/lit8 v10, v7, -0x1

    shl-int/2addr v10, v2

    xor-int/lit8 v7, v7, -0x1

    sub-int/2addr v10, v7

    invoke-virtual {v1, v11, v10}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v7

    .line 1287
    const-string v10, "$"

    invoke-virtual {v1, v7, v10}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v1

    .line 1311
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v10, v7, 0x51

    and-int/lit8 v7, v7, 0x51

    shl-int/2addr v7, v2

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_9

    .line 1289
    :cond_9
    :goto_6
    sget-object v7, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v7, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    if-eqz v7, :cond_a

    .line 1303
    move v7, v4

    goto :goto_7

    :cond_a
    move v7, v2

    :goto_7
    const/16 v10, 0x37

    packed-switch v7, :pswitch_data_5

    move-object v7, v9

    goto :goto_9

    :pswitch_4
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v11, v7, 0xb

    or-int/lit8 v7, v7, 0xb

    add-int/2addr v11, v7

    rem-int/lit16 v7, v11, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_b

    .line 1290
    :cond_b
    sget-object v7, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v7, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 1303
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v12, v11, 0x37

    xor-int/2addr v11, v10

    or-int/2addr v11, v12

    not-int v11, v11

    sub-int/2addr v12, v11

    sub-int/2addr v12, v2

    rem-int/lit16 v11, v12, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_c

    move v11, v4

    goto :goto_8

    :cond_c
    move v11, v2

    :goto_8
    packed-switch v11, :pswitch_data_6

    goto :goto_9

    .line 1311
    :pswitch_5
    nop

    .line 1292
    :goto_9
    instance-of v11, v5, Lcom/google/gson/JsonPrimitive;

    if-eqz v11, :cond_d

    .line 1303
    const/16 v11, 0x3c

    goto :goto_a

    :cond_d
    const/16 v11, 0x35

    :goto_a
    packed-switch v11, :pswitch_data_7

    .line 1301
    instance-of v11, v5, Lcom/google/gson/JsonObject;

    if-eqz v11, :cond_15

    goto/16 :goto_10

    .line 1311
    :pswitch_6
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v9, 0x61

    or-int/lit8 v9, v9, 0x61

    add-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_e

    .line 1293
    :cond_e
    move-object v9, v5

    check-cast v9, Lcom/google/gson/JsonPrimitive;

    invoke-virtual {v9}, Lcom/google/gson/JsonPrimitive;->isString()Z

    move-result v10

    if-eqz v10, :cond_f

    .line 1303
    const/16 v10, 0x5f

    goto :goto_b

    :cond_f
    const/16 v10, 0x41

    :goto_b
    packed-switch v10, :pswitch_data_8

    .line 1311
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v10, v5, 0x29

    xor-int/lit8 v5, v5, 0x29

    or-int/2addr v5, v10

    neg-int v5, v5

    neg-int v5, v5

    or-int v11, v10, v5

    shl-int/2addr v11, v2

    xor-int/2addr v5, v10

    sub-int/2addr v11, v5

    rem-int/lit16 v5, v11, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_13

    goto :goto_e

    .line 1298
    :pswitch_7
    invoke-virtual {v9}, Lcom/google/gson/JsonPrimitive;->isBoolean()Z

    move-result v10

    if-eqz v10, :cond_10

    .line 1303
    move v10, v2

    goto :goto_c

    :cond_10
    move v10, v4

    :goto_c
    packed-switch v10, :pswitch_data_9

    goto/16 :goto_13

    .line 1307
    :pswitch_8
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v10, 0x9

    and-int/lit8 v11, v5, -0xa

    not-int v12, v5

    and-int/2addr v12, v10

    or-int/2addr v11, v12

    and-int/2addr v5, v10

    shl-int/2addr v5, v2

    add-int/2addr v11, v5

    rem-int/lit16 v5, v11, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_11

    .line 1299
    :cond_11
    invoke-virtual {v9}, Lcom/google/gson/JsonPrimitive;->getAsBoolean()Z

    move-result v5

    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v5

    .line 1303
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v9, 0x63

    xor-int/lit8 v9, v9, 0x63

    or-int/2addr v9, v10

    neg-int v9, v9

    neg-int v9, v9

    xor-int v11, v10, v9

    and-int/2addr v9, v10

    shl-int/2addr v9, v2

    add-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_12

    const/16 v9, 0x36

    goto :goto_d

    :cond_12
    const/16 v9, 0x2d

    :goto_d
    packed-switch v9, :pswitch_data_a

    .line 1311
    goto :goto_f

    .line 1294
    :cond_13
    :goto_e
    invoke-virtual {v9}, Lcom/google/gson/JsonPrimitive;->getAsString()Ljava/lang/String;

    move-result-object v5

    .line 1307
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v10, 0x3

    and-int/lit8 v11, v9, -0x4

    not-int v12, v9

    and-int/2addr v12, v10

    or-int/2addr v11, v12

    and-int/2addr v9, v10

    shl-int/2addr v9, v2

    neg-int v9, v9

    neg-int v9, v9

    and-int v10, v11, v9

    or-int/2addr v9, v11

    add-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_14

    .line 1311
    :cond_14
    :goto_f
    goto :goto_13

    .line 1303
    :goto_10
    const/16 v11, 0x20

    goto :goto_11

    :cond_15
    const/16 v11, 0x3a

    :goto_11
    packed-switch v11, :pswitch_data_b

    .line 1307
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v11, v5, 0x4f

    and-int/lit8 v5, v5, 0x4f

    shl-int/2addr v5, v2

    xor-int v12, v11, v5

    and-int/2addr v5, v11

    shl-int/2addr v5, v2

    add-int/2addr v12, v5

    rem-int/lit16 v5, v12, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_16

    .line 1303
    goto :goto_12

    :cond_16
    move v10, v6

    :goto_12
    packed-switch v10, :pswitch_data_c

    const/16 v5, 0x38

    :try_start_0
    div-int/2addr v5, v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 1311
    :pswitch_9
    move-object v5, v9

    .line 1306
    :goto_13
    :pswitch_a
    if-eqz v7, :cond_17

    .line 1303
    move v9, v4

    goto :goto_14

    :cond_17
    move v9, v2

    :goto_14
    packed-switch v9, :pswitch_data_d

    :pswitch_b
    goto :goto_19

    .line 1311
    :pswitch_c
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v9, 0x73

    xor-int/2addr v9, v3

    or-int/2addr v9, v10

    neg-int v9, v9

    neg-int v9, v9

    xor-int v11, v10, v9

    and-int/2addr v9, v10

    shl-int/2addr v9, v2

    add-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_18

    .line 1306
    :cond_18
    sget-object v9, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {v9, v7}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_19

    .line 1303
    move v9, v2

    goto :goto_15

    :cond_19
    move v9, v4

    :goto_15
    packed-switch v9, :pswitch_data_e

    .line 1311
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v10, v9, 0x3d

    xor-int/lit8 v9, v9, 0x3d

    or-int/2addr v9, v10

    neg-int v9, v9

    neg-int v9, v9

    not-int v9, v9

    sub-int/2addr v10, v9

    sub-int/2addr v10, v2

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_1a

    .line 1303
    const/16 v8, 0x15

    goto :goto_16

    :cond_1a
    nop

    :goto_16
    packed-switch v8, :pswitch_data_f

    .line 1307
    invoke-static {v1, v7, v5, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    goto :goto_17

    :pswitch_d
    invoke-static {v1, v7, v5, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    goto :goto_18

    :goto_17
    const/16 v1, 0x23

    :try_start_1
    div-int/2addr v1, v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 1311
    :goto_18
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v1, 0x2c

    or-int/lit8 v1, v1, 0x2c

    add-int/2addr v4, v1

    and-int/lit8 v1, v4, -0x1

    or-int/lit8 v4, v4, -0x1

    add-int/2addr v1, v4

    rem-int/lit16 v4, v1, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_1

    goto/16 :goto_0

    :catchall_0
    move-exception p0

    throw p0

    :goto_19
    invoke-static {v1, v5, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v5, v1, 0x75

    and-int/lit8 v7, v1, 0x75

    or-int/2addr v5, v7

    shl-int/2addr v5, v2

    not-int v7, v7

    or-int/lit8 v1, v1, 0x75

    and-int/2addr v1, v7

    sub-int/2addr v5, v1

    rem-int/lit16 v1, v5, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_1b

    .line 1303
    move v4, v2

    goto :goto_1a

    :cond_1b
    nop

    :goto_1a
    packed-switch v4, :pswitch_data_10

    .line 1311
    goto/16 :goto_0

    .line 1307
    :catchall_1
    move-exception p0

    throw p0

    :goto_1b
    :try_start_2
    invoke-super {v9}, Ljava/lang/Object;->hashCode()I

    throw v9
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :catchall_2
    move-exception p0

    throw p0

    .line 1311
    :goto_1c
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 p1, p0, 0x7

    xor-int/lit8 p0, p0, 0x7

    or-int/2addr p0, p1

    xor-int v0, p1, p0

    and-int/2addr p0, p1

    shl-int/2addr p0, v2

    add-int/2addr v0, p0

    rem-int/lit16 p0, v0, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_1c

    .line 1303
    goto :goto_1d

    :cond_1c
    move v2, v4

    :goto_1d
    packed-switch v2, :pswitch_data_11

    .line 1311
    goto :goto_1e

    :pswitch_e
    return-void

    :goto_1e
    :try_start_3
    div-int/2addr v4, v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    return-void

    :catchall_3
    move-exception p0

    throw p0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0xf
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x3c
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x41
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x36
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x3a
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x4d
        :pswitch_9
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x0
        :pswitch_c
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x58
        :pswitch_d
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch
.end method

.method private ContactlessConfiguration(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 17

    .line 2743
    move-object/from16 v1, p0

    const-string v0, "\n\n\n"

    const-string v2, "\n\n\n\n "

    .line 2727
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v3, v3, 0x4a

    const/4 v4, 0x1

    sub-int/2addr v3, v4

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v5, 0x2

    rem-int/2addr v3, v5

    if-eqz v3, :cond_0

    .line 2685
    :cond_0
    nop

    .line 2687
    nop

    .line 2689
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getHasDependancy()Ljava/lang/Boolean;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v3

    const/16 v6, 0x49

    const/16 v7, 0x55

    if-eqz v3, :cond_1

    .line 2730
    move v3, v7

    goto :goto_0

    :cond_1
    move v3, v6

    :goto_0
    const/4 v8, 0x0

    packed-switch v3, :pswitch_data_0

    move-object/from16 v3, p1

    goto :goto_3

    .line 2743
    :pswitch_0
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v9, 0x47

    and-int/lit8 v10, v3, -0x48

    not-int v11, v3

    and-int/2addr v11, v9

    or-int/2addr v10, v11

    and-int/2addr v3, v9

    shl-int/2addr v3, v4

    neg-int v3, v3

    neg-int v3, v3

    or-int v9, v10, v3

    shl-int/2addr v9, v4

    xor-int/2addr v3, v10

    sub-int/2addr v9, v3

    rem-int/lit16 v3, v9, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v9, v5

    if-nez v9, :cond_2

    .line 2730
    const/16 v3, 0x29

    goto :goto_1

    :cond_2
    const/16 v3, 0x42

    :goto_1
    packed-switch v3, :pswitch_data_1

    .line 2690
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    goto :goto_2

    :pswitch_1
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v3

    .line 2743
    goto :goto_3

    .line 2690
    :goto_2
    :try_start_0
    throw v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2743
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 2692
    :goto_3
    new-instance v9, Lcom/visa/vac/tc/emvconverter/ApduCommand;

    invoke-direct {v9, v3}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 2694
    const/4 v10, -0x1

    :try_start_1
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v12

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2695
    iget-object v11, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v9

    invoke-virtual {v11, v9}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v9

    .line 2696
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 2698
    if-eqz v9, :cond_3

    .line 2730
    goto :goto_4

    :cond_3
    const/4 v6, 0x6

    :goto_4
    const/16 v2, 0x3f

    packed-switch v6, :pswitch_data_2

    .line 2727
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v11, 0x1f

    xor-int/lit8 v12, v6, 0x1f

    and-int/lit8 v13, v6, 0x1f

    or-int/2addr v12, v13

    shl-int/2addr v12, v4

    and-int/lit8 v13, v6, -0x20

    not-int v14, v6

    and-int/2addr v11, v14

    or-int/2addr v11, v13

    neg-int v11, v11

    xor-int v13, v12, v11

    and-int/2addr v11, v12

    shl-int/2addr v11, v4

    add-int/2addr v13, v11

    rem-int/lit16 v11, v13, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v13, v5

    const/4 v11, 0x0

    if-eqz v13, :cond_4

    .line 2730
    move v12, v4

    goto :goto_5

    :cond_4
    move v12, v11

    :goto_5
    const/4 v13, 0x3

    const/16 v14, 0x41

    packed-switch v12, :pswitch_data_3

    .line 2699
    :try_start_2
    array-length v12, v9

    goto :goto_7

    :pswitch_2
    array-length v12, v9
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    if-lt v12, v13, :cond_5

    .line 2730
    move v12, v11

    goto :goto_6

    :cond_5
    move v12, v4

    :goto_6
    packed-switch v12, :pswitch_data_4

    goto :goto_9

    .line 2699
    :goto_7
    if-lt v12, v5, :cond_6

    .line 2730
    const/16 v12, 0x8

    goto :goto_8

    :cond_6
    move v12, v7

    :goto_8
    packed-switch v12, :pswitch_data_5

    :goto_9
    goto :goto_b

    .line 2727
    :pswitch_3
    add-int/lit8 v6, v6, 0x13

    rem-int/lit16 v12, v6, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v5

    if-eqz v6, :cond_7

    .line 2700
    :cond_7
    :try_start_3
    invoke-virtual {v1, v9}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v6
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    .line 2730
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v15, v12, 0x41

    and-int/2addr v12, v14

    shl-int/2addr v12, v4

    neg-int v12, v12

    neg-int v12, v12

    and-int v16, v15, v12

    or-int/2addr v12, v15

    add-int v12, v16, v12

    rem-int/lit16 v15, v12, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v5

    if-nez v12, :cond_8

    move v12, v4

    goto :goto_a

    :cond_8
    move v12, v11

    :goto_a
    packed-switch v12, :pswitch_data_6

    goto :goto_c

    .line 2743
    :pswitch_4
    goto :goto_c

    .line 2702
    :goto_b
    move-object v6, v8

    :goto_c
    if-eqz v6, :cond_9

    .line 2730
    move v13, v2

    goto :goto_d

    :cond_9
    nop

    :goto_d
    packed-switch v13, :pswitch_data_7

    :pswitch_5
    goto/16 :goto_27

    .line 2726
    :pswitch_6
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v13, 0x37

    or-int/lit8 v15, v12, 0x37

    shl-int/2addr v15, v4

    and-int/lit8 v16, v12, -0x38

    not-int v12, v12

    and-int/2addr v12, v13

    or-int v12, v16, v12

    neg-int v12, v12

    and-int v13, v15, v12

    or-int/2addr v12, v15

    add-int/2addr v13, v12

    rem-int/lit16 v12, v13, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v13, v5

    if-nez v13, :cond_a

    .line 2730
    move v12, v4

    goto :goto_e

    :cond_a
    move v12, v11

    :goto_e
    packed-switch v12, :pswitch_data_8

    .line 2702
    :try_start_4
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v3

    goto :goto_f

    .line 2726
    :pswitch_7
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, v6}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    :try_start_5
    invoke-super {v8}, Ljava/lang/Object;->hashCode()I

    throw v8
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception v0

    throw v0

    .line 2702
    :goto_f
    :try_start_6
    invoke-static {v3}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v3

    invoke-interface {v3, v6}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_b

    .line 2730
    const/16 v3, 0x10

    goto :goto_10

    :cond_b
    move v3, v4

    :goto_10
    packed-switch v3, :pswitch_data_9

    .line 2703
    array-length v2, v9

    xor-int/lit8 v3, v2, -0x1

    and-int/2addr v2, v10

    shl-int/2addr v2, v4

    add-int/2addr v3, v2

    xor-int/lit8 v2, v3, -0x1

    and-int/2addr v3, v10

    shl-int/2addr v3, v4

    add-int/2addr v2, v3

    invoke-static {v9, v2}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v2

    .line 2704
    array-length v3, v2

    if-le v3, v5, :cond_1c

    .line 2707
    const-string v3, "LV.QUICK_CHIP_DONE"

    const-string v6, "False"

    invoke-static {v3, v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2710
    new-instance v3, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v6, v2

    int-to-short v6, v6

    invoke-direct {v3, v2, v11, v6}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSS)V

    .line 2713
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v6
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    const/16 v12, 0x80

    if-ne v6, v12, :cond_c

    .line 2730
    const/4 v6, 0x5

    goto :goto_11

    :cond_c
    const/16 v6, 0x26

    :goto_11
    const/16 v12, 0x94

    const/4 v13, 0x4

    const/16 v15, 0x82

    const-string v0, "emv.duplicate"

    packed-switch v6, :pswitch_data_a

    .line 2725
    :try_start_7
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v6
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    goto/16 :goto_14

    .line 2743
    :pswitch_8
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v6, v2, 0x5b

    xor-int/lit8 v2, v2, 0x5b

    or-int/2addr v2, v6

    neg-int v2, v2

    neg-int v2, v2

    or-int v7, v6, v2

    shl-int/2addr v7, v4

    xor-int/2addr v2, v6

    sub-int/2addr v7, v2

    rem-int/lit16 v2, v7, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v5

    if-eqz v7, :cond_d

    .line 2715
    :cond_d
    :try_start_8
    array-length v6, v9
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    const/16 v7, 0xa

    if-lt v6, v7, :cond_e

    .line 2730
    move v6, v11

    goto :goto_12

    :cond_e
    move v6, v4

    :goto_12
    packed-switch v6, :pswitch_data_b

    .line 2722
    goto :goto_13

    .line 2727
    :pswitch_9
    and-int/lit8 v6, v2, 0x4b

    or-int/lit8 v2, v2, 0x4b

    add-int/2addr v6, v2

    rem-int/lit16 v2, v6, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v5

    if-nez v6, :cond_f

    .line 2716
    :cond_f
    :try_start_9
    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-static {v0, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2717
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    .line 2718
    invoke-virtual {v0, v11, v13}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v2

    invoke-virtual {v1, v15, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V

    .line 2719
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    invoke-virtual {v0, v13, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-virtual {v1, v12, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    .line 2720
    nop

    .line 2730
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x69

    xor-int/lit8 v0, v0, 0x69

    or-int/2addr v0, v2

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v5

    if-nez v2, :cond_10

    .line 2743
    :cond_10
    const/16 v10, 0x5a

    goto/16 :goto_2c

    :goto_13
    and-int/lit8 v0, v2, 0x39

    xor-int/lit8 v2, v2, 0x39

    or-int/2addr v2, v0

    or-int v3, v0, v2

    shl-int/2addr v3, v4

    xor-int/2addr v0, v2

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v5

    return v10

    .line 2725
    :goto_14
    const/16 v9, 0x77

    if-ne v6, v9, :cond_11

    .line 2730
    move v6, v4

    goto :goto_15

    :cond_11
    const/16 v6, 0x1c

    :goto_15
    packed-switch v6, :pswitch_data_c

    .line 2690
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x41

    sub-int/2addr v6, v4

    or-int/lit8 v9, v6, -0x1

    shl-int/2addr v9, v4

    xor-int/2addr v6, v10

    sub-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v5

    if-eqz v9, :cond_12

    .line 2730
    const/16 v6, 0x5c

    goto :goto_16

    :cond_12
    const/16 v6, 0x28

    :goto_16
    packed-switch v6, :pswitch_data_d

    .line 2725
    nop

    .line 2726
    :try_start_a
    invoke-virtual {v3, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v6

    goto :goto_18

    .line 2690
    :pswitch_a
    const/16 v6, 0x32eb

    .line 2726
    invoke-virtual {v3, v6}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v6

    if-eqz v6, :cond_13

    .line 2730
    goto :goto_17

    :cond_13
    move v7, v14

    :goto_17
    packed-switch v7, :pswitch_data_e

    goto :goto_1a

    .line 2726
    :goto_18
    if-eqz v6, :cond_14

    .line 2730
    move v6, v11

    goto :goto_19

    :cond_14
    move v6, v4

    :goto_19
    packed-switch v6, :pswitch_data_f

    goto/16 :goto_24

    .line 2726
    :goto_1a
    :pswitch_b
    invoke-virtual {v3, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v6

    iget-short v6, v6, Lcom/visa/vac/tc/emvconverter/BERTLV;->$$a:S
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0

    if-ne v6, v5, :cond_15

    .line 2730
    move v6, v4

    goto :goto_1b

    :cond_15
    move v6, v11

    :goto_1b
    packed-switch v6, :pswitch_data_10

    goto/16 :goto_24

    .line 2726
    :pswitch_c
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v7, v6, 0x67

    and-int/lit8 v6, v6, 0x67

    or-int/2addr v6, v7

    shl-int/2addr v6, v4

    neg-int v7, v7

    not-int v7, v7

    sub-int/2addr v6, v7

    sub-int/2addr v6, v4

    rem-int/lit16 v7, v6, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v5

    if-nez v6, :cond_16

    .line 2730
    goto :goto_1c

    :cond_16
    const/16 v14, 0x50

    :goto_1c
    packed-switch v14, :pswitch_data_11

    .line 2726
    const/16 v6, 0x261f

    .line 2727
    :try_start_b
    invoke-virtual {v3, v6}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v6

    goto :goto_1e

    .line 2726
    :pswitch_d
    nop

    .line 2727
    invoke-virtual {v3, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v6

    if-eqz v6, :cond_17

    .line 2730
    const/4 v6, 0x7

    goto :goto_1d

    :cond_17
    const/16 v6, 0x58

    :goto_1d
    packed-switch v6, :pswitch_data_12

    goto :goto_20

    .line 2727
    :goto_1e
    if-eqz v6, :cond_18

    .line 2730
    const/16 v6, 0x4f

    goto :goto_1f

    :cond_18
    const/16 v6, 0x25

    :goto_1f
    packed-switch v6, :pswitch_data_13

    .line 2727
    :goto_20
    invoke-virtual {v3, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v6

    iget-short v6, v6, Lcom/visa/vac/tc/emvconverter/BERTLV;->$$a:S
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_0

    if-lt v6, v13, :cond_19

    .line 2730
    const/16 v6, 0x33

    goto :goto_21

    :cond_19
    const/16 v6, 0x4a

    :goto_21
    packed-switch v6, :pswitch_data_14

    goto :goto_24

    .line 2699
    :pswitch_e
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v6, v6, 0x6a

    xor-int/lit8 v7, v6, -0x1

    and-int/2addr v6, v10

    shl-int/2addr v6, v4

    add-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v5

    if-nez v7, :cond_1a

    .line 2730
    goto :goto_22

    :cond_1a
    move v11, v4

    :goto_22
    packed-switch v11, :pswitch_data_15

    .line 2728
    goto :goto_23

    :pswitch_f
    :try_start_c
    sget-object v6, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-static {v0, v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2729
    array-length v0, v2

    and-int/lit8 v2, v0, -0x2

    xor-int/lit8 v0, v0, -0x2

    or-int/2addr v0, v2

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v4

    int-to-short v0, v2

    invoke-virtual {v1, v3, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;

    .line 2730
    const/16 v10, 0x5a

    goto/16 :goto_2b

    .line 2728
    :goto_23
    sget-object v6, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-static {v0, v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2729
    array-length v0, v2

    xor-int/lit8 v2, v0, 0x2

    and-int/lit8 v6, v0, 0x2

    or-int/2addr v2, v6

    shl-int/2addr v2, v4

    not-int v6, v6

    or-int/2addr v0, v5

    and-int/2addr v0, v6

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v4

    int-to-short v0, v2

    invoke-virtual {v1, v3, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_0

    .line 2730
    const/16 v0, 0x38

    move v10, v0

    goto/16 :goto_2b

    .line 2732
    :goto_24
    :pswitch_10
    nop

    .line 2690
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x45

    or-int/lit8 v0, v0, 0x45

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v5

    if-eqz v2, :cond_1b

    .line 2730
    move v4, v11

    goto :goto_25

    :cond_1b
    nop

    :goto_25
    packed-switch v4, :pswitch_data_16

    .line 2690
    goto :goto_26

    .line 2743
    :pswitch_11
    return v10

    .line 2690
    :goto_26
    :try_start_d
    throw v8
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    .line 2732
    :cond_1c
    nop

    .line 2730
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v2, v0, 0x75

    shl-int/2addr v2, v4

    xor-int/lit8 v0, v0, 0x75

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v5

    if-eqz v2, :cond_1d

    move v11, v4

    :cond_1d
    packed-switch v11, :pswitch_data_17

    .line 2743
    goto :goto_2b

    .line 2732
    :goto_27
    :try_start_e
    const-string v0, "6985"

    invoke-virtual {v6, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_0

    if-eqz v0, :cond_1e

    .line 2730
    move v0, v4

    goto :goto_28

    :cond_1e
    move v0, v11

    :goto_28
    packed-switch v0, :pswitch_data_18

    goto :goto_2a

    :pswitch_12
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v0, 0x69

    xor-int/lit8 v0, v0, 0x69

    or-int/2addr v0, v3

    and-int v6, v3, v0

    or-int/2addr v0, v3

    add-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v5

    if-nez v6, :cond_1f

    .line 2736
    :cond_1f
    const/16 v10, -0x5b

    .line 2726
    const/16 v3, 0x27

    xor-int/lit8 v6, v0, 0x27

    and-int/lit8 v7, v0, 0x27

    or-int/2addr v6, v7

    shl-int/2addr v6, v4

    and-int/lit8 v7, v0, -0x28

    not-int v0, v0

    and-int/2addr v0, v3

    or-int/2addr v0, v7

    neg-int v0, v0

    xor-int v3, v6, v0

    and-int/2addr v0, v6

    shl-int/2addr v0, v4

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v5

    if-eqz v3, :cond_20

    .line 2730
    move v11, v4

    goto :goto_29

    :cond_20
    nop

    :goto_29
    packed-switch v11, :pswitch_data_19

    .line 2743
    goto :goto_2a

    .line 2726
    :pswitch_13
    nop

    .line 2736
    :goto_2a
    :pswitch_14
    nop

    .line 2726
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v5

    if-nez v0, :cond_21

    .line 2743
    :cond_21
    :goto_2b
    nop

    :goto_2c
    :pswitch_15
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x17

    xor-int/lit8 v0, v0, 0x17

    or-int/2addr v0, v2

    xor-int v3, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v4

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v5

    return v10

    .line 2739
    :catch_0
    move-exception v0

    .line 2740
    return v10

    :pswitch_data_0
    .packed-switch 0x55
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x42
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x6
        :pswitch_14
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x8
        :pswitch_3
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x3f
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x5
        :pswitch_8
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_9
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1c
        :pswitch_10
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x5c
        :pswitch_a
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x41
        :pswitch_10
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1
        :pswitch_c
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x50
        :pswitch_d
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x58
        :pswitch_10
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x25
        :pswitch_10
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x33
        :pswitch_e
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x1
        :pswitch_11
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x1
        :pswitch_12
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x1
        :pswitch_13
    .end packed-switch
.end method

.method private static ContactlessConfiguration(Ljava/lang/String;)B
    .locals 11

    .line 2869
    nop

    .line 2860
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x13

    xor-int/lit8 v2, v0, 0x13

    or-int/2addr v2, v1

    neg-int v2, v2

    neg-int v2, v2

    xor-int v3, v1, v2

    and-int/2addr v1, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    const/4 v1, 0x0

    if-nez v3, :cond_0

    .line 2856
    move v3, v2

    goto :goto_0

    :cond_0
    move v3, v1

    :goto_0
    const/16 v4, 0x25

    const/16 v5, -0x5b

    packed-switch v3, :pswitch_data_0

    .line 2855
    const/16 v3, 0x1f

    .line 2856
    if-eqz p0, :cond_2

    goto :goto_2

    .line 2855
    :pswitch_0
    nop

    .line 2856
    if-eqz p0, :cond_1

    move v3, v1

    goto :goto_1

    :cond_1
    move v3, v2

    :goto_1
    packed-switch v3, :pswitch_data_1

    move v3, v5

    goto :goto_4

    :goto_2
    const/16 v6, 0x18

    goto :goto_3

    :cond_2
    move v6, v4

    :goto_3
    packed-switch v6, :pswitch_data_2

    goto :goto_4

    :pswitch_1
    move v5, v3

    goto :goto_8

    .line 2860
    :goto_4
    add-int/lit8 v0, v0, 0x71

    sub-int/2addr v0, v2

    sub-int/2addr v0, v2

    rem-int/lit16 v6, v0, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_3

    .line 2857
    :cond_3
    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p0

    .line 2858
    array-length v0, p0

    .line 2869
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v6, 0x49

    not-int v8, v7

    or-int/lit8 v6, v6, 0x49

    and-int/2addr v6, v8

    shl-int/2addr v7, v2

    or-int v8, v6, v7

    shl-int/2addr v8, v2

    xor-int/2addr v6, v7

    sub-int/2addr v8, v6

    rem-int/lit16 v6, v8, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_4

    .line 2856
    move v6, v2

    goto :goto_5

    :cond_4
    move v6, v1

    :goto_5
    packed-switch v6, :pswitch_data_3

    .line 2869
    :pswitch_2
    nop

    .line 2858
    move v6, v1

    :goto_6
    if-ge v6, v0, :cond_5

    .line 2856
    const/16 v7, 0x33

    goto :goto_7

    :cond_5
    const/16 v7, 0x60

    :goto_7
    packed-switch v7, :pswitch_data_4

    .line 2869
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v3, 0x3b

    or-int/lit8 v3, v3, 0x3b

    add-int/2addr v7, v3

    rem-int/lit16 v3, v7, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_6

    goto :goto_9

    :goto_8
    :pswitch_3
    nop

    .line 2860
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v0, p0, 0x50

    shl-int/2addr v0, v2

    xor-int/lit8 p0, p0, 0x50

    sub-int/2addr v0, p0

    sub-int/2addr v0, v1

    sub-int/2addr v0, v2

    rem-int/lit16 p0, v0, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    .line 2869
    return v5

    .line 2856
    :goto_9
    move v3, v1

    goto :goto_a

    :cond_6
    move v3, v2

    :goto_a
    const/4 v7, 0x0

    packed-switch v3, :pswitch_data_5

    .line 2858
    aget-object v3, p0, v6

    .line 2859
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalValue(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    .line 2860
    if-eqz v8, :cond_7

    goto :goto_b

    .line 2869
    :pswitch_4
    aget-object p0, p0, v6

    .line 2859
    invoke-static {p0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalValue(Ljava/lang/String;)Ljava/lang/Object;

    .line 2860
    :try_start_0
    throw v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2869
    :catchall_0
    move-exception p0

    throw p0

    .line 2856
    :goto_b
    move v9, v2

    goto :goto_c

    :cond_7
    move v9, v1

    :goto_c
    packed-switch v9, :pswitch_data_6

    :pswitch_5
    goto :goto_11

    .line 2860
    :pswitch_6
    instance-of v9, v8, Lcom/google/gson/JsonArray;

    if-eqz v9, :cond_8

    .line 2856
    const/16 v9, 0x2e

    goto :goto_d

    :cond_8
    move v9, v4

    :goto_d
    packed-switch v9, :pswitch_data_7

    .line 2860
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v9, 0x5d

    or-int/lit8 v9, v9, 0x5d

    not-int v9, v9

    sub-int/2addr v10, v9

    sub-int/2addr v10, v2

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_9

    .line 2856
    move v9, v1

    goto :goto_e

    :cond_9
    move v9, v2

    :goto_e
    packed-switch v9, :pswitch_data_8

    .line 2860
    check-cast v8, Lcom/google/gson/JsonArray;

    invoke-virtual {v8}, Lcom/google/gson/JsonArray;->size()I

    goto :goto_10

    :pswitch_7
    move-object v9, v8

    check-cast v9, Lcom/google/gson/JsonArray;

    invoke-virtual {v9}, Lcom/google/gson/JsonArray;->size()I

    move-result v9

    if-gtz v9, :cond_a

    .line 2856
    move v9, v1

    goto :goto_f

    :cond_a
    move v9, v2

    :goto_f
    packed-switch v9, :pswitch_data_9

    goto :goto_15

    .line 2860
    :goto_10
    :try_start_1
    invoke-super {v7}, Ljava/lang/Object;->hashCode()I

    throw v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p0

    throw p0

    :goto_11
    if-eqz v8, :cond_b

    .line 2856
    move v9, v1

    goto :goto_12

    :cond_b
    move v9, v2

    :goto_12
    packed-switch v9, :pswitch_data_a

    .line 2860
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v10, v9, 0xb

    and-int/lit8 v9, v9, 0xb

    shl-int/2addr v9, v2

    add-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_c

    .line 2856
    move v9, v1

    goto :goto_13

    :cond_c
    move v9, v2

    :goto_13
    packed-switch v9, :pswitch_data_b

    .line 2860
    instance-of p0, v8, Lcom/google/gson/JsonArray;

    goto/16 :goto_1a

    :pswitch_8
    instance-of v8, v8, Lcom/google/gson/JsonArray;

    if-eqz v8, :cond_d

    .line 2856
    const/16 v8, 0x21

    goto :goto_14

    :cond_d
    const/16 v8, 0x1d

    :goto_14
    packed-switch v8, :pswitch_data_c

    :goto_15
    :pswitch_9
    goto :goto_19

    .line 2862
    :pswitch_a
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    if-eqz v8, :cond_e

    .line 2856
    const/16 v8, 0x8

    goto :goto_16

    :cond_e
    const/16 v8, 0x14

    :goto_16
    packed-switch v8, :pswitch_data_d

    .line 2860
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v8, v8, 0x48

    sub-int/2addr v8, v2

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_f

    .line 2862
    :cond_f
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    const-string v8, "False"

    invoke-virtual {v3, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_10

    .line 2856
    move v3, v2

    goto :goto_17

    :cond_10
    move v3, v1

    :goto_17
    packed-switch v3, :pswitch_data_e

    .line 2865
    :pswitch_b
    nop

    .line 2860
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p0, 0x13

    and-int/lit8 p0, p0, 0x13

    shl-int/2addr p0, v2

    neg-int p0, p0

    neg-int p0, p0

    xor-int v1, v0, p0

    and-int/2addr p0, v0

    shl-int/2addr p0, v2

    add-int/2addr v1, p0

    rem-int/lit16 p0, v1, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_11

    .line 2856
    const/16 p0, 0x57

    goto :goto_18

    :cond_11
    const/16 p0, 0x59

    :goto_18
    packed-switch p0, :pswitch_data_f

    .line 2869
    return v5

    .line 2860
    :pswitch_c
    :try_start_2
    invoke-super {v7}, Ljava/lang/Object;->hashCode()I

    throw v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :catchall_2
    move-exception p0

    throw p0

    .line 2863
    :goto_19
    const/16 v3, 0x5a

    .line 2860
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v8, v7, 0x3f

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_12

    .line 2869
    :cond_12
    nop

    .line 2860
    and-int/lit8 v8, v7, 0x3a

    or-int/lit8 v7, v7, 0x3a

    add-int/2addr v8, v7

    or-int/lit8 v7, v8, -0x1

    shl-int/2addr v7, v2

    xor-int/lit8 v8, v8, -0x1

    sub-int/2addr v7, v8

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_13

    .line 2858
    :cond_13
    xor-int/lit8 v7, v6, 0x1

    and-int/lit8 v6, v6, 0x1

    shl-int/2addr v6, v2

    neg-int v6, v6

    neg-int v6, v6

    xor-int v9, v7, v6

    and-int/2addr v6, v7

    shl-int/2addr v6, v2

    add-int/2addr v6, v9

    .line 2860
    and-int/lit8 v7, v8, 0x5

    xor-int/lit8 v8, v8, 0x5

    or-int/2addr v8, v7

    neg-int v8, v8

    neg-int v8, v8

    or-int v9, v7, v8

    shl-int/2addr v9, v2

    xor-int/2addr v7, v8

    sub-int/2addr v9, v7

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_14

    .line 2869
    :cond_14
    goto/16 :goto_6

    .line 2860
    :goto_1a
    :try_start_3
    throw v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    :catchall_3
    move-exception p0

    throw p0

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x25
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x60
        :pswitch_1
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x25
        :pswitch_5
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x21
        :pswitch_a
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x14
        :pswitch_b
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x57
        :pswitch_c
    .end packed-switch
.end method

.method private static ContactlessConfiguration(Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;)V
    .locals 6

    .line 660
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x2b

    xor-int/lit8 v0, v0, 0x2b

    or-int/2addr v0, v1

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v0, 0x0

    if-eqz v1, :cond_0

    .line 650
    move v1, v0

    goto :goto_0

    :cond_0
    const/16 v1, 0x3e

    :goto_0
    packed-switch v1, :pswitch_data_0

    .line 643
    :pswitch_0
    nop

    .line 644
    nop

    .line 660
    move v1, v0

    .line 646
    :goto_1
    sget-object v2, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/AbstractCollection;->size()I

    move-result v2

    if-ge v1, v2, :cond_1

    .line 650
    const/16 v2, 0x28

    goto :goto_2

    :cond_1
    const/16 v2, 0x3b

    :goto_2
    const/16 v3, 0xb

    const/4 v4, 0x1

    packed-switch v2, :pswitch_data_1

    move v1, v0

    goto/16 :goto_8

    .line 660
    :pswitch_1
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v2, 0x3

    xor-int/lit8 v2, v2, 0x3

    or-int/2addr v2, v5

    not-int v2, v2

    sub-int/2addr v5, v2

    sub-int/2addr v5, v4

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_2

    .line 650
    const/16 v2, 0x3c

    goto :goto_3

    :cond_2
    const/16 v2, 0x33

    :goto_3
    packed-switch v2, :pswitch_data_2

    .line 647
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;

    .line 650
    iget-byte p0, p0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->getInstance:B

    iget-byte p0, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->getInstance:B

    goto :goto_7

    .line 647
    :pswitch_2
    sget-object v2, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;

    .line 650
    iget-byte v5, p0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->getInstance:B

    iget-byte v2, v2, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->getInstance:B

    if-ge v5, v2, :cond_3

    const/16 v2, 0x9

    goto :goto_4

    :cond_3
    const/16 v2, 0x58

    :goto_4
    packed-switch v2, :pswitch_data_3

    goto :goto_5

    .line 660
    :pswitch_3
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x65

    rem-int/lit16 v5, v2, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_4

    .line 651
    :cond_4
    sget-object v2, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v2, v1, p0}, Ljava/util/AbstractList;->add(ILjava/lang/Object;)V

    .line 652
    nop

    .line 650
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v1, 0x49

    xor-int/lit8 v1, v1, 0x49

    or-int/2addr v1, v2

    add-int/2addr v2, v1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_5

    .line 660
    :cond_5
    move v1, v4

    goto :goto_8

    .line 655
    :goto_5
    add-int/lit8 v1, v1, 0x3

    sub-int/2addr v1, v4

    sub-int/2addr v1, v4

    .line 660
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_6

    .line 650
    goto :goto_6

    :cond_6
    move v4, v0

    :goto_6
    packed-switch v4, :pswitch_data_4

    .line 660
    :pswitch_4
    goto/16 :goto_1

    .line 650
    :goto_7
    const/4 p0, 0x0

    :try_start_0
    throw p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 660
    :catchall_0
    move-exception p0

    throw p0

    .line 658
    :goto_8
    if-nez v1, :cond_7

    .line 650
    move v1, v0

    goto :goto_9

    :cond_7
    move v1, v4

    :goto_9
    packed-switch v1, :pswitch_data_5

    goto :goto_c

    .line 644
    :pswitch_5
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v1, 0x47

    and-int/lit8 v1, v1, 0x47

    shl-int/2addr v1, v4

    or-int v5, v2, v1

    shl-int/2addr v5, v4

    xor-int/2addr v1, v2

    sub-int/2addr v5, v1

    rem-int/lit16 v1, v5, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_8

    .line 650
    move v1, v0

    goto :goto_a

    :cond_8
    const/16 v1, 0x24

    :goto_a
    packed-switch v1, :pswitch_data_6

    .line 660
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v1, p0}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    goto :goto_b

    :pswitch_6
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v1, p0}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    goto :goto_c

    :goto_b
    const/16 p0, 0x44

    :try_start_1
    div-int/2addr p0, v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_c

    .line 644
    :catchall_1
    move-exception p0

    throw p0

    .line 660
    :goto_c
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p0, p0, 0x3a

    sub-int/2addr p0, v4

    rem-int/lit16 v1, p0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p0, p0, 0x2

    if-eqz p0, :cond_9

    .line 650
    goto :goto_d

    :cond_9
    move v4, v0

    :goto_d
    packed-switch v4, :pswitch_data_7

    .line 660
    return-void

    :pswitch_7
    :try_start_2
    div-int/2addr v3, v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    return-void

    :catchall_2
    move-exception p0

    throw p0

    :pswitch_data_0
    .packed-switch 0x3e
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x28
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x33
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x9
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x24
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch
.end method

.method public static Logit(Ljava/lang/String;)V
    .locals 2

    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p0, 0x57

    and-int/lit8 p0, p0, 0x57

    or-int/2addr p0, v0

    const/4 v1, 0x1

    shl-int/2addr p0, v1

    sub-int/2addr p0, v0

    rem-int/lit16 v0, p0, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p0, p0, 0x2

    if-eqz p0, :cond_0

    const/4 v1, 0x0

    :cond_0
    packed-switch v1, :pswitch_data_0

    goto :goto_0

    :pswitch_0
    return-void

    :goto_0
    const/4 p0, 0x0

    :try_start_0
    throw p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p0

    throw p0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method private getInstance(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 20
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    move-object/from16 v1, p0

    .line 2679
    nop

    .line 2633
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x8

    and-int/lit8 v3, v0, 0x8

    const/4 v4, 0x1

    shl-int/2addr v3, v4

    add-int/2addr v2, v3

    sub-int/2addr v2, v4

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-nez v2, :cond_0

    .line 2610
    :cond_0
    nop

    .line 2636
    and-int/lit8 v2, v0, 0x59

    const/16 v5, 0x59

    xor-int/2addr v0, v5

    or-int/2addr v0, v2

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v4

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v3

    const/4 v6, 0x0

    if-nez v2, :cond_1

    .line 2635
    move v0, v4

    goto :goto_0

    :cond_1
    move v0, v6

    :goto_0
    packed-switch v0, :pswitch_data_0

    .line 2679
    goto :goto_1

    .line 2636
    :pswitch_0
    nop

    .line 2610
    :goto_1
    move v2, v6

    :goto_2
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v0

    if-ge v2, v0, :cond_25

    .line 2611
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->clone()Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v0

    .line 2612
    const-string v8, "LV.SELECT_P2"

    const-string v9, "00"

    invoke-virtual {v1, v8, v9}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2613
    sget-object v8, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v8, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, [B

    invoke-static {v8}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v8

    const-string v9, "KV.SVID_LIST"

    invoke-virtual {v1, v9, v8}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2615
    new-instance v8, Lcom/visa/vac/tc/emvconverter/ApduCommand;

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v9

    invoke-direct {v8, v9}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 2616
    new-instance v9, Ljava/lang/StringBuilder;

    const-string v10, "\n\n\n\n "

    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v11

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v11, "\n\n\n"

    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2617
    iget-object v9, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v12

    invoke-virtual {v9, v12}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v9

    .line 2618
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2619
    invoke-virtual {v1, v9}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v12

    .line 2620
    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v13

    .line 2622
    nop

    .line 2624
    if-eqz v9, :cond_2

    .line 2635
    const/16 v14, 0x48

    goto :goto_3

    :cond_2
    const/16 v14, 0x4e

    :goto_3
    const/4 v15, -0x2

    const/16 v16, 0x0

    packed-switch v14, :pswitch_data_1

    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v17, v14, 0x4b

    shl-int/lit8 v17, v17, 0x1

    xor-int/lit8 v14, v14, 0x4b

    sub-int v14, v17, v14

    rem-int/lit16 v5, v14, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v14, v3

    if-eqz v14, :cond_3

    .line 2624
    :cond_3
    :try_start_0
    array-length v5, v9

    if-le v5, v3, :cond_5

    .line 2625
    array-length v5, v9

    xor-int/lit8 v14, v5, -0x2

    and-int/lit8 v7, v5, -0x2

    or-int/2addr v14, v7

    shl-int/2addr v14, v4

    not-int v7, v7

    or-int/2addr v5, v15

    and-int/2addr v5, v7

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v14, v5

    sub-int/2addr v14, v4

    invoke-static {v9, v14}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v5

    .line 2626
    new-instance v7, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v14, v5

    int-to-short v14, v14

    invoke-direct {v7, v5, v6, v14, v6}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSSZ)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 2633
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v14, v5, -0x7a

    not-int v6, v5

    and-int/lit8 v6, v6, 0x79

    or-int/2addr v6, v14

    and-int/lit8 v5, v5, 0x79

    shl-int/2addr v5, v4

    neg-int v5, v5

    neg-int v5, v5

    and-int v14, v6, v5

    or-int/2addr v5, v6

    add-int/2addr v14, v5

    rem-int/lit16 v5, v14, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v3

    if-nez v14, :cond_4

    .line 2679
    :cond_4
    goto :goto_4

    .line 2631
    :cond_5
    :pswitch_1
    move-object/from16 v7, v16

    :goto_4
    if-eqz v12, :cond_6

    .line 2635
    move v5, v4

    goto :goto_5

    :cond_6
    const/4 v5, 0x0

    :goto_5
    packed-switch v5, :pswitch_data_2

    :pswitch_2
    goto/16 :goto_2a

    .line 2679
    :pswitch_3
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v6, 0x71

    and-int/lit8 v14, v5, -0x72

    not-int v15, v5

    and-int/2addr v15, v6

    or-int/2addr v14, v15

    and-int/2addr v5, v6

    shl-int/2addr v5, v4

    neg-int v5, v5

    neg-int v5, v5

    and-int v6, v14, v5

    or-int/2addr v5, v14

    add-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v3

    if-eqz v6, :cond_7

    .line 2631
    :cond_7
    :try_start_1
    invoke-static {v13}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v5

    invoke-interface {v5, v12}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v5
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    if-eqz v5, :cond_8

    .line 2635
    move v5, v4

    goto :goto_6

    :cond_8
    const/4 v5, 0x0

    :goto_6
    packed-switch v5, :pswitch_data_3

    .line 2648
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v5, 0x58

    and-int/lit8 v13, v5, 0x58

    shl-int/2addr v13, v4

    add-int/2addr v6, v13

    or-int/lit8 v13, v6, -0x1

    shl-int/2addr v13, v4

    xor-int/lit8 v6, v6, -0x1

    sub-int/2addr v13, v6

    rem-int/lit16 v6, v13, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v13, v3

    if-nez v13, :cond_9

    .line 2635
    const/16 v6, 0x1d

    goto :goto_7

    :cond_9
    const/16 v6, 0x50

    :goto_7
    const/16 v13, 0x84

    const/16 v14, 0x1f

    const/16 v15, 0x6f

    packed-switch v6, :pswitch_data_4

    .line 2632
    nop

    .line 2633
    if-eqz v7, :cond_b

    goto :goto_9

    .line 2632
    :pswitch_4
    nop

    .line 2633
    if-eqz v7, :cond_a

    .line 2635
    const/16 v6, 0x11

    goto :goto_8

    :cond_a
    const/16 v6, 0x23

    :goto_8
    packed-switch v6, :pswitch_data_5

    goto :goto_b

    :goto_9
    move v6, v4

    goto :goto_a

    :cond_b
    const/4 v6, 0x0

    :goto_a
    packed-switch v6, :pswitch_data_6

    :pswitch_5
    const/4 v5, 0x0

    goto/16 :goto_1a

    .line 2679
    :goto_b
    :pswitch_6
    and-int/lit8 v6, v5, 0x69

    or-int/lit8 v5, v5, 0x69

    add-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v3

    if-nez v6, :cond_c

    .line 2634
    :cond_c
    :try_start_2
    invoke-virtual {v7}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v5
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    if-ne v5, v15, :cond_d

    .line 2635
    move v5, v4

    goto :goto_c

    :cond_d
    const/4 v5, 0x0

    :goto_c
    packed-switch v5, :pswitch_data_7

    :goto_d
    :pswitch_7
    goto/16 :goto_19

    .line 2633
    :pswitch_8
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v6, v5, 0x37

    xor-int/lit8 v5, v5, 0x37

    or-int/2addr v5, v6

    xor-int v19, v6, v5

    and-int/2addr v5, v6

    shl-int/2addr v5, v4

    add-int v5, v19, v5

    rem-int/lit16 v6, v5, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v3

    if-nez v5, :cond_e

    .line 2635
    move v5, v14

    goto :goto_e

    :cond_e
    const/16 v5, 0x2b

    :goto_e
    packed-switch v5, :pswitch_data_8

    .line 2634
    nop

    .line 2635
    :try_start_3
    invoke-virtual {v7, v13}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v5

    goto :goto_11

    .line 2633
    :pswitch_9
    const/16 v5, 0x4708

    .line 2635
    invoke-virtual {v7, v5}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v5
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    if-eqz v5, :cond_f

    const/16 v5, 0x3f

    goto :goto_f

    :cond_f
    const/16 v5, 0x20

    :goto_f
    packed-switch v5, :pswitch_data_9

    :goto_10
    goto :goto_13

    :goto_11
    if-eqz v5, :cond_10

    const/4 v5, 0x0

    goto :goto_12

    :cond_10
    move v5, v4

    :goto_12
    packed-switch v5, :pswitch_data_a

    goto :goto_10

    .line 2679
    :goto_13
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v5, 0x7b

    and-int/lit8 v19, v5, 0x7b

    or-int v6, v6, v19

    shl-int/2addr v6, v4

    and-int/lit8 v19, v5, -0x7c

    not-int v5, v5

    and-int/lit8 v5, v5, 0x7b

    or-int v5, v19, v5

    sub-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v3

    if-nez v6, :cond_11

    .line 2635
    const/4 v5, 0x0

    goto :goto_14

    :cond_11
    move v5, v4

    :goto_14
    packed-switch v5, :pswitch_data_b

    .line 2679
    const/16 v5, 0x5683

    .line 2636
    :try_start_4
    invoke-virtual {v7, v5}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v5

    goto :goto_16

    .line 2635
    :pswitch_a
    const/16 v5, 0xa5

    .line 2636
    invoke-virtual {v7, v5}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v5

    if-eqz v5, :cond_12

    .line 2635
    move v5, v4

    goto :goto_15

    :cond_12
    const/4 v5, 0x0

    :goto_15
    packed-switch v5, :pswitch_data_c

    goto :goto_18

    .line 2636
    :goto_16
    if-eqz v5, :cond_13

    .line 2635
    const/4 v5, 0x0

    goto :goto_17

    :cond_13
    move v5, v4

    :goto_17
    packed-switch v5, :pswitch_data_d

    goto :goto_d

    .line 2637
    :goto_18
    :pswitch_b
    array-length v5, v9

    or-int/lit8 v6, v5, -0x2

    shl-int/2addr v6, v4

    and-int/lit8 v7, v5, 0x1

    not-int v5, v5

    const/16 v18, -0x2

    and-int v5, v18, v5

    or-int/2addr v5, v7

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v6, v5

    sub-int/2addr v6, v4

    invoke-static {v9, v6}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v5

    .line 2638
    invoke-virtual {v1, v5, v15, v12}, Lcom/visa/vac/tc/emvconverter/CAL;->doMatch([BSLjava/lang/String;)Z

    move-result v5
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 2679
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v6, -0xe

    not-int v9, v6

    and-int/lit8 v9, v9, 0xd

    or-int/2addr v7, v9

    and-int/lit8 v6, v6, 0xd

    shl-int/2addr v6, v4

    or-int v9, v7, v6

    shl-int/2addr v9, v4

    xor-int/2addr v6, v7

    sub-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v9, v3

    if-nez v9, :cond_20

    goto/16 :goto_29

    .line 2640
    :goto_19
    const/4 v5, 0x0

    :goto_1a
    if-eqz v5, :cond_21

    .line 2641
    nop

    .line 2642
    :try_start_5
    invoke-virtual {v8, v3}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->setP2(B)V

    .line 2643
    iget-object v5, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v5

    .line 2644
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2645
    invoke-virtual {v1, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v6

    .line 2646
    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v7
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    .line 2647
    if-eqz v6, :cond_14

    .line 2635
    const/16 v9, 0x5a

    goto :goto_1b

    :cond_14
    const/16 v9, 0x1c

    :goto_1b
    packed-switch v9, :pswitch_data_e

    :goto_1c
    :pswitch_c
    goto/16 :goto_27

    :pswitch_d
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v12, 0x43

    xor-int/lit8 v18, v9, 0x43

    and-int/lit8 v19, v9, 0x43

    or-int v18, v18, v19

    shl-int/lit8 v18, v18, 0x1

    and-int/lit8 v19, v9, -0x44

    not-int v9, v9

    and-int/2addr v9, v12

    or-int v9, v19, v9

    neg-int v9, v9

    not-int v9, v9

    sub-int v18, v18, v9

    add-int/lit8 v9, v18, -0x1

    rem-int/lit16 v12, v9, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v9, v3

    if-nez v9, :cond_15

    const/4 v9, 0x0

    goto :goto_1d

    :cond_15
    move v9, v4

    :goto_1d
    packed-switch v9, :pswitch_data_f

    .line 2647
    :try_start_6
    invoke-static {v7}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v7

    goto :goto_1e

    .line 2635
    :pswitch_e
    invoke-static {v7}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v0

    invoke-interface {v0, v6}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    :try_start_7
    invoke-super/range {v16 .. v16}, Ljava/lang/Object;->hashCode()I

    throw v16
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    :catchall_0
    move-exception v0

    throw v0

    .line 2647
    :goto_1e
    :try_start_8
    invoke-interface {v7, v6}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v7
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    if-eqz v7, :cond_16

    .line 2635
    move v7, v4

    goto :goto_1f

    :cond_16
    const/4 v7, 0x0

    :goto_1f
    packed-switch v7, :pswitch_data_10

    goto :goto_1c

    .line 2636
    :pswitch_f
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v7, v7, 0xb

    rem-int/lit16 v9, v7, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v3

    if-nez v7, :cond_17

    .line 2635
    move v7, v4

    goto :goto_20

    :cond_17
    const/4 v7, 0x0

    :goto_20
    const-string v9, "9000"

    packed-switch v7, :pswitch_data_11

    .line 2648
    goto/16 :goto_26

    :pswitch_10
    :try_start_9
    invoke-virtual {v6, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_18

    .line 2635
    const/4 v7, 0x3

    goto :goto_21

    :cond_18
    const/16 v7, 0x5a

    :goto_21
    packed-switch v7, :pswitch_data_12

    .line 2648
    const/4 v7, 0x0

    aget-byte v9, v5, v7

    if-ne v9, v15, :cond_1e

    .line 2649
    array-length v7, v5

    or-int/lit8 v9, v7, -0x1

    shl-int/2addr v9, v4

    xor-int/lit8 v7, v7, -0x1

    sub-int/2addr v9, v7

    xor-int/lit8 v7, v9, -0x1

    and-int/lit8 v9, v9, -0x1

    shl-int/2addr v9, v4

    add-int/2addr v7, v9

    invoke-static {v5, v7}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v5

    .line 2650
    new-instance v7, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v9, v5

    int-to-short v9, v9

    const/4 v12, 0x0

    invoke-direct {v7, v5, v12, v9, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSSZ)V

    .line 2652
    nop

    .line 2653
    invoke-virtual {v7}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v9
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    if-ne v9, v15, :cond_19

    .line 2635
    const/16 v9, 0x62

    goto :goto_22

    :cond_19
    const/16 v9, 0xe

    :goto_22
    packed-switch v9, :pswitch_data_13

    goto/16 :goto_1c

    .line 2636
    :pswitch_11
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v9, v9, 0x6f

    sub-int/2addr v9, v4

    xor-int/lit8 v12, v9, -0x1

    and-int/lit8 v9, v9, -0x1

    shl-int/2addr v9, v4

    add-int/2addr v12, v9

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v3

    if-nez v12, :cond_1a

    .line 2653
    :cond_1a
    :try_start_a
    invoke-virtual {v7, v13}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v7
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0

    if-eqz v7, :cond_1b

    .line 2635
    const/16 v7, 0x59

    goto :goto_23

    :cond_1b
    const/4 v7, 0x7

    :goto_23
    packed-switch v7, :pswitch_data_14

    .line 2636
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v9, v7, 0x1f

    shl-int/2addr v9, v4

    and-int/lit8 v12, v7, -0x20

    not-int v7, v7

    and-int/2addr v7, v14

    or-int/2addr v7, v12

    neg-int v7, v7

    xor-int v12, v9, v7

    and-int/2addr v7, v9

    shl-int/2addr v7, v4

    add-int/2addr v12, v7

    rem-int/lit16 v7, v12, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v3

    if-nez v12, :cond_1c

    .line 2654
    :cond_1c
    :try_start_b
    invoke-virtual {v1, v5, v15, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->doMatch([BSLjava/lang/String;)Z

    move-result v5
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_0

    .line 2635
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v6, v6, 0xa

    xor-int/lit8 v7, v6, -0x1

    and-int/lit8 v6, v6, -0x1

    shl-int/2addr v6, v4

    add-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v3

    if-nez v7, :cond_1d

    .line 2679
    :cond_1d
    goto :goto_28

    .line 2657
    :cond_1e
    :pswitch_12
    nop

    .line 2648
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v6, v5, 0x65

    or-int/lit8 v5, v5, 0x65

    add-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v3

    if-nez v6, :cond_1f

    .line 2635
    const/16 v5, 0x34

    goto :goto_24

    :cond_1f
    const/16 v5, 0x2b

    :goto_24
    packed-switch v5, :pswitch_data_15

    .line 2679
    goto :goto_25

    .line 2648
    :pswitch_13
    nop

    .line 2660
    :goto_25
    move v5, v4

    goto :goto_28

    .line 2648
    :goto_26
    :try_start_c
    invoke-virtual {v6, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_0

    :try_start_d
    invoke-super/range {v16 .. v16}, Ljava/lang/Object;->hashCode()I

    throw v16
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_0
    .catchall {:try_start_d .. :try_end_d} :catchall_1

    .line 2636
    :catchall_1
    move-exception v0

    throw v0

    .line 2660
    :goto_27
    const/4 v5, 0x0

    :goto_28
    nop

    .line 2635
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v7, 0x5b

    and-int/lit8 v9, v6, -0x5c

    not-int v12, v6

    and-int/2addr v12, v7

    or-int/2addr v9, v12

    and-int/2addr v6, v7

    shl-int/2addr v6, v4

    or-int v7, v9, v6

    shl-int/2addr v7, v4

    xor-int/2addr v6, v9

    sub-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v3

    if-eqz v7, :cond_20

    .line 2679
    :cond_20
    :goto_29
    goto/16 :goto_1a

    .line 2660
    :cond_21
    nop

    .line 2679
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v5, v0, 0x42

    and-int/lit8 v0, v0, 0x42

    shl-int/2addr v0, v4

    add-int/2addr v5, v0

    or-int/lit8 v0, v5, -0x1

    shl-int/2addr v0, v4

    xor-int/lit8 v5, v5, -0x1

    sub-int/2addr v0, v5

    rem-int/lit16 v5, v0, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v3

    if-nez v0, :cond_23

    goto :goto_2c

    .line 2660
    :goto_2a
    nop

    .line 2633
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v5, v0, 0x69

    and-int/lit8 v6, v0, 0x69

    or-int/2addr v5, v6

    shl-int/2addr v5, v4

    and-int/lit8 v6, v0, -0x6a

    not-int v0, v0

    const/16 v7, 0x69

    and-int/2addr v0, v7

    or-int/2addr v0, v6

    neg-int v0, v0

    or-int v6, v5, v0

    shl-int/2addr v6, v4

    xor-int/2addr v0, v5

    sub-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v3

    if-nez v6, :cond_22

    .line 2635
    move v0, v3

    goto :goto_2b

    :cond_22
    const/16 v0, 0x5c

    :goto_2b
    packed-switch v0, :pswitch_data_16

    .line 2679
    :cond_23
    :goto_2c
    goto :goto_2d

    .line 2633
    :pswitch_14
    goto :goto_2d

    .line 2668
    :catch_0
    move-exception v0

    .line 2670
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v5, " -- continue..."

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2610
    :goto_2d
    add-int/lit8 v2, v2, 0x1

    .line 2679
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v5, v0, 0x28

    and-int/lit8 v0, v0, 0x28

    shl-int/2addr v0, v4

    add-int/2addr v5, v0

    sub-int/2addr v5, v4

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v3

    if-nez v5, :cond_24

    .line 2635
    move v7, v4

    goto :goto_2e

    :cond_24
    const/4 v7, 0x0

    :goto_2e
    packed-switch v7, :pswitch_data_17

    .line 2679
    :pswitch_15
    nop

    .line 2610
    const/16 v5, 0x59

    const/4 v6, 0x0

    goto/16 :goto_2

    .line 2679
    :cond_25
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x3a

    or-int/lit8 v0, v0, 0x3a

    add-int/2addr v2, v0

    xor-int/lit8 v0, v2, -0x1

    and-int/lit8 v2, v2, -0x1

    shl-int/2addr v2, v4

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v3

    if-nez v0, :cond_26

    .line 2635
    const/16 v0, 0x5d

    goto :goto_2f

    :cond_26
    const/16 v0, 0x14

    :goto_2f
    packed-switch v0, :pswitch_data_18

    .line 2679
    const/16 v0, 0x5a

    goto :goto_30

    :pswitch_16
    const/16 v0, 0x5a

    return v0

    :goto_30
    const/4 v2, 0x6

    const/4 v3, 0x0

    :try_start_e
    div-int/2addr v2, v3
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_2

    return v0

    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x4e
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x50
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x23
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1f
        :pswitch_9
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x20
        :pswitch_7
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x5a
        :pswitch_d
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x5a
        :pswitch_12
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x62
        :pswitch_11
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x7
        :pswitch_c
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x34
        :pswitch_13
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x2
        :pswitch_14
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x14
        :pswitch_16
    .end packed-switch
.end method

.method private getInstance([BLjava/lang/String;)I
    .locals 19

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move-object/from16 v2, p2

    .line 866
    nop

    .line 843
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v3, v3, 0x30

    const/4 v4, 0x1

    sub-int/2addr v3, v4

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    const/4 v5, 0x0

    if-nez v3, :cond_0

    .line 829
    move v3, v4

    goto :goto_0

    :cond_0
    move v3, v5

    :goto_0
    packed-switch v3, :pswitch_data_0

    .line 819
    nop

    .line 820
    array-length v3, v0

    .line 821
    iput-boolean v5, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getData:Z

    .line 822
    move v6, v4

    goto :goto_1

    .line 819
    :pswitch_0
    nop

    .line 820
    array-length v3, v0

    .line 821
    iput-boolean v5, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getData:Z

    .line 822
    move v6, v5

    .line 866
    :goto_1
    move v7, v5

    .line 824
    :goto_2
    sget-object v8, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v8

    if-ge v7, v8, :cond_1

    .line 829
    move v8, v5

    goto :goto_3

    :cond_1
    move v8, v4

    :goto_3
    const/4 v11, 0x0

    packed-switch v8, :pswitch_data_1

    .line 866
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v12, v8, 0x61

    xor-int/lit8 v8, v8, 0x61

    or-int/2addr v8, v12

    neg-int v8, v8

    neg-int v8, v8

    not-int v8, v8

    sub-int/2addr v12, v8

    sub-int/2addr v12, v4

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_2

    goto :goto_4

    .line 829
    :pswitch_1
    const/16 v15, 0xf

    goto/16 :goto_2c

    .line 825
    :cond_2
    :goto_4
    sget-object v8, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v8, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    if-eqz v8, :cond_3

    .line 829
    move v8, v4

    goto :goto_5

    :cond_3
    move v8, v5

    :goto_5
    packed-switch v8, :pswitch_data_2

    :pswitch_2
    goto/16 :goto_33

    .line 835
    :pswitch_3
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v12, v8, 0x53

    and-int/lit8 v13, v8, 0x53

    or-int/2addr v12, v13

    shl-int/2addr v12, v4

    and-int/lit8 v13, v8, -0x54

    not-int v8, v8

    const/16 v14, 0x53

    and-int/2addr v8, v14

    or-int/2addr v8, v13

    sub-int/2addr v12, v8

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_4

    .line 829
    move v8, v4

    goto :goto_6

    :cond_4
    move v8, v5

    :goto_6
    const-string v12, "KV.SVID_LIST"

    packed-switch v8, :pswitch_data_3

    .line 826
    sget-object v8, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v8, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, [B

    array-length v8, v8

    .line 829
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v13

    const/16 v15, 0x39

    if-eqz v13, :cond_5

    goto :goto_7

    .line 826
    :pswitch_4
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, [B

    array-length v0, v0

    .line 829
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    :try_start_0
    throw v11
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 835
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 829
    :goto_7
    move v13, v15

    goto :goto_8

    :cond_5
    const/16 v13, 0x37

    :goto_8
    packed-switch v13, :pswitch_data_4

    goto :goto_a

    .line 839
    :pswitch_5
    sget-object v12, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v12, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, [B

    .line 829
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v14, v13, 0x59

    xor-int/lit8 v13, v13, 0x59

    or-int/2addr v13, v14

    neg-int v13, v13

    neg-int v13, v13

    and-int v16, v14, v13

    or-int/2addr v13, v14

    add-int v13, v16, v13

    rem-int/lit16 v14, v13, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v13, v13, 0x2

    if-nez v13, :cond_6

    move v13, v4

    goto :goto_9

    :cond_6
    move v13, v5

    :goto_9
    packed-switch v13, :pswitch_data_5

    goto :goto_c

    .line 866
    :pswitch_6
    goto :goto_c

    .line 822
    :goto_a
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v8, v6, 0x4d

    xor-int/lit8 v6, v6, 0x4d

    or-int/2addr v6, v8

    not-int v6, v6

    sub-int/2addr v8, v6

    sub-int/2addr v8, v4

    rem-int/lit16 v6, v8, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_7

    .line 831
    :cond_7
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v12

    .line 832
    array-length v8, v12

    .line 833
    nop

    .line 834
    sget-object v6, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v6, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, [B

    invoke-static {v12, v5, v6, v5, v8}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BII)Z

    move-result v6

    if-eq v6, v4, :cond_8

    .line 829
    move v6, v5

    goto :goto_b

    :cond_8
    move v6, v4

    :goto_b
    packed-switch v6, :pswitch_data_6

    .line 822
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v8, v6, 0x53

    not-int v9, v8

    or-int/2addr v6, v14

    and-int/2addr v6, v9

    shl-int/2addr v8, v4

    and-int v9, v6, v8

    or-int/2addr v6, v8

    add-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_20

    goto/16 :goto_2f

    .line 829
    :pswitch_7
    move v6, v4

    .line 841
    :goto_c
    const-string v13, "KV.PARTIAL_MATCH"

    invoke-static {v13}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/lang/String;

    invoke-virtual {v13}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v13

    const-string v14, "TRUE"

    invoke-virtual {v13, v14}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_9

    .line 829
    move v13, v4

    goto :goto_d

    :cond_9
    move v13, v5

    :goto_d
    const-string v14, "candidate supported: "

    const-string v10, "9000"

    packed-switch v13, :pswitch_data_7

    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v17, v13, 0x11

    const/16 v18, 0x11

    or-int/lit8 v13, v13, 0x11

    add-int v13, v17, v13

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_a

    const/16 v13, 0x25

    goto :goto_e

    :cond_a
    const/16 v13, 0x9

    :goto_e
    packed-switch v13, :pswitch_data_8

    .line 841
    if-lt v3, v8, :cond_c

    goto :goto_10

    .line 829
    :pswitch_8
    const/16 v13, 0x55

    :try_start_1
    div-int/2addr v13, v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-lt v3, v8, :cond_b

    const/16 v13, 0x4e

    goto :goto_f

    :cond_b
    const/16 v13, 0x4c

    :goto_f
    packed-switch v13, :pswitch_data_9

    goto :goto_12

    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    :goto_10
    move v13, v5

    goto :goto_11

    :cond_c
    move v13, v4

    :goto_11
    packed-switch v13, :pswitch_data_a

    .line 844
    :goto_12
    or-int/lit8 v13, v9, 0xc

    shl-int/2addr v13, v4

    xor-int/lit8 v9, v9, 0xc

    sub-int/2addr v13, v9

    sub-int/2addr v13, v4

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v13, v13, 0x2

    if-nez v13, :cond_d

    .line 829
    move v9, v4

    goto :goto_13

    :cond_d
    move v9, v5

    :goto_13
    packed-switch v9, :pswitch_data_b

    .line 844
    nop

    .line 843
    invoke-static {v12, v5, v0, v4, v8}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BII)Z

    move-result v9

    if-ne v9, v4, :cond_f

    goto :goto_16

    .line 841
    :pswitch_9
    nop

    .line 843
    invoke-static {v12, v5, v0, v5, v8}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BII)Z

    move-result v9

    if-ne v9, v4, :cond_e

    .line 829
    move v9, v5

    goto :goto_14

    :cond_e
    move v9, v4

    :goto_14
    packed-switch v9, :pswitch_data_c

    :goto_15
    goto/16 :goto_1f

    :goto_16
    move v9, v5

    goto :goto_17

    :cond_f
    move v9, v4

    :goto_17
    packed-switch v9, :pswitch_data_d

    goto :goto_15

    .line 853
    :pswitch_a
    if-eqz v2, :cond_10

    .line 829
    move v9, v5

    goto :goto_18

    :cond_10
    move v9, v4

    :goto_18
    packed-switch v9, :pswitch_data_e

    .line 822
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v9, 0xb

    or-int/lit8 v9, v9, 0xb

    neg-int v9, v9

    neg-int v9, v9

    and-int v18, v13, v9

    or-int/2addr v9, v13

    add-int v9, v18, v9

    rem-int/lit16 v13, v9, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_11

    goto :goto_1a

    .line 829
    :goto_19
    :pswitch_b
    const/16 v15, 0xf

    goto/16 :goto_2a

    .line 853
    :cond_11
    :goto_1a
    invoke-virtual {v2, v10}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_12

    .line 829
    move v9, v4

    goto :goto_1b

    :cond_12
    move v9, v5

    :goto_1b
    packed-switch v9, :pswitch_data_f

    goto :goto_19

    .line 866
    :pswitch_c
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v10, v9, 0x71

    or-int/lit8 v9, v9, 0x71

    add-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_13

    .line 829
    move v9, v5

    goto :goto_1c

    :cond_13
    move v9, v4

    :goto_1c
    packed-switch v9, :pswitch_data_10

    .line 866
    goto :goto_1e

    .line 853
    :pswitch_d
    if-ne v3, v8, :cond_14

    .line 829
    move v9, v4

    goto :goto_1d

    :cond_14
    move v9, v5

    :goto_1d
    packed-switch v9, :pswitch_data_11

    goto :goto_19

    .line 853
    :pswitch_e
    nop

    .line 854
    invoke-static {v12, v5, v0, v5, v8}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BII)Z

    move-result v8

    if-ne v8, v4, :cond_15

    .line 855
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 856
    nop

    .line 829
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x39

    xor-int/2addr v0, v15

    or-int/2addr v0, v2

    xor-int v3, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v4

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    .line 866
    return v7

    .line 854
    :cond_15
    const/16 v15, 0xf

    goto/16 :goto_2a

    .line 866
    :goto_1e
    :try_start_2
    invoke-super {v11}, Ljava/lang/Object;->hashCode()I

    throw v11
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :catchall_2
    move-exception v0

    throw v0

    :goto_1f
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v12, v9, -0x10

    not-int v13, v9

    const/16 v15, 0xf

    and-int/2addr v13, v15

    or-int/2addr v12, v13

    and-int/lit8 v13, v9, 0xf

    shl-int/2addr v13, v4

    add-int/2addr v12, v13

    rem-int/lit16 v13, v12, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_16

    .line 829
    move v12, v5

    goto :goto_20

    :cond_16
    move v12, v4

    :goto_20
    packed-switch v12, :pswitch_data_12

    .line 844
    if-le v3, v8, :cond_17

    goto :goto_21

    :pswitch_f
    :try_start_3
    invoke-super {v11}, Ljava/lang/Object;->hashCode()I

    throw v11
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 866
    :catchall_3
    move-exception v0

    throw v0

    .line 829
    :goto_21
    move v8, v4

    goto :goto_22

    :cond_17
    move v8, v5

    :goto_22
    packed-switch v8, :pswitch_data_13

    goto :goto_23

    .line 845
    :pswitch_10
    iput-boolean v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getData:Z

    .line 866
    const/16 v8, 0x3d

    or-int/lit8 v12, v9, 0x3d

    shl-int/2addr v12, v4

    and-int/lit8 v13, v9, -0x3e

    not-int v9, v9

    and-int/2addr v8, v9

    or-int/2addr v8, v13

    neg-int v8, v8

    xor-int v9, v12, v8

    and-int/2addr v8, v12

    shl-int/2addr v8, v4

    add-int/2addr v9, v8

    rem-int/lit16 v8, v9, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_18

    .line 848
    :cond_18
    :goto_23
    const/16 v8, 0x10

    if-gt v3, v8, :cond_19

    .line 829
    const/4 v8, 0x5

    goto :goto_24

    :cond_19
    const/16 v8, 0x13

    :goto_24
    packed-switch v8, :pswitch_data_14

    :goto_25
    goto :goto_2a

    .line 835
    :pswitch_11
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v8, v8, 0x6c

    sub-int/2addr v8, v4

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_1a

    .line 848
    :cond_1a
    if-eqz v2, :cond_1b

    .line 829
    const/16 v18, 0x27

    goto :goto_26

    :cond_1b
    nop

    :goto_26
    packed-switch v18, :pswitch_data_15

    goto :goto_25

    .line 835
    :pswitch_12
    and-int/lit8 v8, v9, 0x41

    or-int/lit8 v9, v9, 0x41

    add-int/2addr v8, v9

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_1c

    .line 829
    const/16 v8, 0xd

    goto :goto_27

    :cond_1c
    const/16 v8, 0x26

    :goto_27
    packed-switch v8, :pswitch_data_16

    .line 835
    invoke-virtual {v2, v10}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v8

    goto :goto_28

    .line 848
    :pswitch_13
    invoke-virtual {v2, v10}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1d

    goto :goto_29

    .line 835
    :goto_28
    const/16 v9, 0x28

    :try_start_4
    div-int/2addr v9, v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    if-eqz v8, :cond_1d

    .line 849
    :goto_29
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 850
    nop

    .line 835
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x18

    shl-int/2addr v2, v4

    xor-int/lit8 v0, v0, 0x18

    sub-int/2addr v2, v0

    xor-int/lit8 v0, v2, -0x1

    const/4 v3, -0x1

    and-int/2addr v2, v3

    shl-int/2addr v2, v4

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    .line 866
    return v7

    .line 835
    :catchall_4
    move-exception v0

    move-object v2, v0

    throw v2

    .line 859
    :cond_1d
    :goto_2a
    if-nez v6, :cond_1e

    .line 829
    const/16 v8, 0x50

    goto :goto_2b

    :cond_1e
    const/16 v8, 0x48

    :goto_2b
    packed-switch v8, :pswitch_data_17

    .line 866
    :goto_2c
    nop

    .line 843
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x2d

    xor-int/lit8 v0, v0, 0x2d

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v4

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_1f

    .line 829
    move v9, v15

    goto :goto_2d

    :cond_1f
    const/16 v9, 0x42

    :goto_2d
    packed-switch v9, :pswitch_data_18

    .line 843
    goto :goto_2e

    .line 866
    :pswitch_14
    const/4 v0, -0x1

    return v0

    .line 843
    :goto_2e
    :try_start_5
    invoke-super {v11}, Ljava/lang/Object;->hashCode()I

    throw v11
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    :catchall_5
    move-exception v0

    throw v0

    .line 829
    :goto_2f
    move v8, v5

    goto :goto_30

    :cond_20
    move v8, v4

    :goto_30
    packed-switch v8, :pswitch_data_19

    .line 835
    or-int/lit8 v8, v7, 0x3b

    shl-int/2addr v8, v4

    and-int/lit8 v9, v7, -0x3c

    not-int v7, v7

    and-int/lit8 v7, v7, 0x3b

    or-int/2addr v7, v9

    neg-int v7, v7

    or-int v9, v8, v7

    shl-int/2addr v9, v4

    xor-int/2addr v7, v8

    sub-int/2addr v9, v7

    move v7, v9

    goto :goto_31

    :pswitch_15
    and-int/lit8 v8, v7, 0x2

    or-int/lit8 v7, v7, 0x2

    add-int/2addr v8, v7

    xor-int/lit8 v7, v8, -0x1

    const/4 v9, -0x1

    and-int/2addr v8, v9

    shl-int/2addr v8, v4

    add-int/2addr v7, v8

    .line 866
    :goto_31
    and-int/lit8 v8, v6, 0x59

    or-int/lit8 v6, v6, 0x59

    add-int/2addr v8, v6

    rem-int/lit16 v6, v8, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_21

    .line 829
    const/16 v6, 0x57

    goto :goto_32

    :cond_21
    const/4 v6, 0x4

    :goto_32
    packed-switch v6, :pswitch_data_1a

    .line 866
    :pswitch_16
    nop

    .line 824
    move v6, v4

    goto/16 :goto_2

    .line 863
    :goto_33
    xor-int/lit8 v8, v7, 0x60

    and-int/lit8 v7, v7, 0x60

    shl-int/2addr v7, v4

    add-int/2addr v8, v7

    and-int/lit8 v7, v8, -0x1

    const/4 v9, -0x1

    or-int/2addr v8, v9

    add-int/2addr v7, v8

    and-int/lit8 v8, v7, -0x5e

    or-int/lit8 v7, v7, -0x5e

    add-int/2addr v7, v8

    .line 829
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v9, v8, -0x64

    not-int v10, v8

    and-int/lit8 v10, v10, 0x63

    or-int/2addr v9, v10

    and-int/lit8 v8, v8, 0x63

    shl-int/2addr v8, v4

    xor-int v10, v9, v8

    and-int/2addr v8, v9

    shl-int/2addr v8, v4

    add-int/2addr v10, v8

    rem-int/lit16 v8, v10, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_22

    move v8, v5

    goto :goto_34

    :cond_22
    move v8, v4

    :goto_34
    packed-switch v8, :pswitch_data_1b

    goto/16 :goto_2

    .line 866
    :pswitch_17
    goto/16 :goto_2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x37
        :pswitch_5
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x0
        :pswitch_a
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x25
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x4c
        :pswitch_a
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_9
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x1
        :pswitch_c
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1
        :pswitch_d
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_e
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_f
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x1
        :pswitch_10
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x5
        :pswitch_11
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x27
        :pswitch_12
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x26
        :pswitch_13
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x50
        :pswitch_2
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x42
        :pswitch_14
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x57
        :pswitch_16
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x1
        :pswitch_17
    .end packed-switch
.end method

.method private getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 1636
    nop

    .line 1615
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x2

    const/4 v2, 0x2

    or-int/2addr v0, v2

    add-int/2addr v1, v0

    xor-int/lit8 v0, v1, -0x1

    const/4 v3, -0x1

    and-int/2addr v1, v3

    const/4 v4, 0x1

    shl-int/2addr v1, v4

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v2

    if-nez v0, :cond_0

    .line 1595
    :cond_0
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 1596
    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    .line 1597
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getHasDependancy()Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    if-eqz v0, :cond_1

    .line 1615
    const/16 v0, 0x21

    goto :goto_0

    :cond_1
    const/16 v0, 0x12

    :goto_0
    packed-switch v0, :pswitch_data_0

    goto :goto_1

    .line 1636
    :pswitch_0
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x6f

    or-int/lit8 v0, v0, 0x6f

    and-int v5, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v5, v0

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v2

    if-nez v5, :cond_2

    .line 1598
    :cond_2
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object p1

    .line 1615
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x1b

    shl-int/lit8 v5, v1, 0x1

    and-int/lit8 v0, v0, 0x1b

    not-int v0, v0

    and-int/2addr v0, v1

    sub-int/2addr v5, v0

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v2

    if-eqz v5, :cond_3

    .line 1636
    :cond_3
    nop

    .line 1600
    :goto_1
    new-instance v0, Lcom/visa/vac/tc/emvconverter/ApduCommand;

    invoke-direct {v0, p1}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 1601
    new-instance v1, Ljava/lang/StringBuilder;

    const-string v5, "\n\n\n\n "

    invoke-direct {v1, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v6

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v6, "\n\n\n"

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1602
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v0

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v0

    .line 1603
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1605
    const/4 v1, 0x0

    if-eqz v0, :cond_4

    .line 1615
    move v5, v4

    goto :goto_2

    :cond_4
    move v5, v1

    :goto_2
    const/16 v6, -0x5b

    packed-switch v5, :pswitch_data_1

    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v5, 0x6e

    or-int/lit8 v8, v5, 0x6e

    add-int/2addr v7, v8

    xor-int/lit8 v8, v7, -0x1

    and-int/2addr v3, v7

    shl-int/2addr v3, v4

    add-int/2addr v8, v3

    rem-int/lit16 v3, v8, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v8, v2

    if-nez v8, :cond_6

    goto :goto_4

    .line 1634
    :pswitch_1
    nop

    .line 1615
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x15

    or-int/lit8 p1, p1, 0x15

    neg-int p1, p1

    neg-int p1, p1

    or-int v1, v0, p1

    shl-int/2addr v1, v4

    xor-int/2addr p1, v0

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v1, v2

    if-eqz v1, :cond_5

    .line 1636
    :cond_5
    :goto_3
    goto/16 :goto_11

    .line 1606
    :cond_6
    :goto_4
    array-length v3, v0

    if-lt v3, v2, :cond_7

    .line 1615
    move v3, v4

    goto :goto_5

    :cond_7
    move v3, v1

    :goto_5
    packed-switch v3, :pswitch_data_2

    add-int/lit8 v5, v5, 0x6

    sub-int/2addr v5, v4

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v2

    if-nez v5, :cond_8

    .line 1607
    :cond_8
    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v3

    iput-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    .line 1615
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v5, v3, 0x41

    xor-int/lit8 v3, v3, 0x41

    or-int/2addr v3, v5

    add-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v2

    if-nez v5, :cond_9

    .line 1636
    :cond_9
    nop

    .line 1609
    :pswitch_2
    iget-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    if-eqz v3, :cond_a

    .line 1615
    move v3, v4

    goto :goto_6

    :cond_a
    move v3, v1

    :goto_6
    packed-switch v3, :pswitch_data_3

    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v5, v3, 0x79

    shl-int/lit8 v7, v5, 0x1

    and-int/lit8 v3, v3, 0x79

    not-int v3, v3

    and-int/2addr v3, v5

    neg-int v3, v3

    or-int v5, v7, v3

    shl-int/2addr v5, v4

    xor-int/2addr v3, v7

    sub-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v2

    if-eqz v5, :cond_b

    .line 1609
    :cond_b
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object p1

    iget-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    invoke-interface {p1, v3}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_c

    .line 1615
    move p1, v4

    goto :goto_7

    :cond_c
    move p1, v1

    :goto_7
    packed-switch p1, :pswitch_data_4

    goto/16 :goto_e

    :pswitch_3
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, p1, 0x57

    not-int v5, v3

    or-int/lit8 p1, p1, 0x57

    and-int/2addr p1, v5

    shl-int/2addr v3, v4

    xor-int v5, p1, v3

    and-int/2addr p1, v3

    shl-int/2addr p1, v4

    add-int/2addr v5, p1

    rem-int/lit16 p1, v5, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v2

    if-nez v5, :cond_d

    .line 1610
    :cond_d
    array-length p1, v0

    and-int/lit8 v3, p1, -0x2

    not-int v5, v3

    or-int/lit8 p1, p1, -0x2

    and-int/2addr p1, v5

    shl-int/2addr v3, v4

    or-int v5, p1, v3

    shl-int/2addr v5, v4

    xor-int/2addr p1, v3

    sub-int/2addr v5, p1

    invoke-static {v0, v5}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object p1

    .line 1613
    nop

    .line 1614
    :try_start_0
    iget v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    if-ge v0, v2, :cond_e

    .line 1615
    const/16 v0, 0x3a

    goto :goto_8

    :cond_e
    const/16 v0, 0x17

    :goto_8
    packed-switch v0, :pswitch_data_5

    .line 1636
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v0, 0x2b

    and-int/lit8 v0, v0, 0x2b

    shl-int/2addr v0, v4

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v2

    if-eqz v3, :cond_f

    goto :goto_9

    .line 1615
    :pswitch_4
    move v0, v1

    goto :goto_b

    :goto_9
    const/16 v0, 0x1e

    goto :goto_a

    :cond_f
    const/16 v0, 0x30

    :goto_a
    packed-switch v0, :pswitch_data_6

    .line 1636
    :pswitch_5
    move v0, v4

    .line 1618
    :goto_b
    :try_start_1
    new-instance v3, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v5, p1

    int-to-short v5, v5

    invoke-direct {v3, p1, v1, v5, v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSSZ)V

    iput-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 1621
    array-length p1, p1

    and-int/lit8 v0, p1, -0x2

    xor-int/lit8 p1, p1, -0x2

    or-int/2addr p1, v0

    or-int v1, v0, p1

    shl-int/2addr v1, v4

    xor-int/2addr p1, v0

    sub-int/2addr v1, p1

    int-to-short p1, v1

    invoke-virtual {p0, v3, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 1622
    const/16 v3, 0x5a

    .line 1615
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p1, 0x6b

    and-int/lit8 p1, p1, 0x6b

    shl-int/2addr p1, v4

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v2

    if-eqz v0, :cond_10

    const/16 p1, 0x2f

    goto :goto_c

    :cond_10
    const/16 p1, 0xb

    :goto_c
    packed-switch p1, :pswitch_data_7

    .line 1636
    goto/16 :goto_3

    .line 1623
    :catch_0
    move-exception p1

    .line 1624
    iget v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    if-ge v0, v2, :cond_12

    .line 1625
    nop

    .line 1615
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x51

    and-int/lit8 p1, p1, 0x51

    shl-int/2addr p1, v4

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v2

    if-nez v0, :cond_11

    .line 1636
    :cond_11
    :goto_d
    goto :goto_10

    .line 1627
    :cond_12
    new-instance v0, Ljava/lang/Exception;

    invoke-virtual {p1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1631
    :goto_e
    :pswitch_6
    nop

    .line 1615
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x4d

    and-int/lit8 p1, p1, 0x4d

    or-int/2addr p1, v0

    shl-int/2addr p1, v4

    neg-int v0, v0

    xor-int v3, p1, v0

    and-int/2addr p1, v0

    shl-int/2addr p1, v4

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v2

    if-nez v3, :cond_13

    goto :goto_f

    :cond_13
    move v1, v4

    :goto_f
    packed-switch v1, :pswitch_data_8

    .line 1636
    goto :goto_d

    :goto_10
    :pswitch_7
    move v3, v6

    :goto_11
    :pswitch_8
    nop

    .line 1615
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v0, 0xf

    xor-int/lit8 v1, p1, 0xf

    and-int/lit8 v5, p1, 0xf

    or-int/2addr v1, v5

    shl-int/2addr v1, v4

    and-int/lit8 v4, p1, -0x10

    not-int p1, p1

    and-int/2addr p1, v0

    or-int/2addr p1, v4

    neg-int p1, p1

    and-int v0, v1, p1

    or-int/2addr p1, v1

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v2

    .line 1636
    return v3

    :pswitch_data_0
    .packed-switch 0x21
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x17
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x30
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x2f
        :pswitch_8
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch
.end method

.method private static getTerminalData(Ljava/lang/Object;)Ljava/util/ArrayList;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Object;",
            ")",
            "Ljava/util/ArrayList<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 2878
    nop

    .line 2873
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 2874
    check-cast p0, Ljava/util/ArrayList;

    .line 2875
    nop

    .line 2878
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v1, 0x35

    xor-int/lit8 v1, v1, 0x35

    or-int/2addr v1, v2

    or-int v3, v2, v1

    const/4 v4, 0x1

    shl-int/2addr v3, v4

    xor-int/2addr v1, v2

    sub-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_0

    :cond_0
    const/4 v1, 0x0

    move v2, v1

    .line 2875
    :cond_1
    :goto_0
    invoke-virtual {p0}, Ljava/util/AbstractCollection;->size()I

    move-result v3

    if-ge v2, v3, :cond_2

    .line 2878
    move v3, v4

    goto :goto_1

    :cond_2
    move v3, v1

    :goto_1
    packed-switch v3, :pswitch_data_0

    goto :goto_2

    :pswitch_0
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v3, 0x68

    or-int/lit8 v3, v3, 0x68

    add-int/2addr v5, v3

    and-int/lit8 v3, v5, -0x1

    or-int/lit8 v5, v5, -0x1

    add-int/2addr v3, v5

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_3

    .line 2876
    :cond_3
    invoke-virtual {p0, v2}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 2875
    add-int/lit8 v2, v2, 0x2

    or-int/lit8 v3, v2, -0x1

    shl-int/2addr v3, v4

    xor-int/lit8 v2, v2, -0x1

    sub-int v2, v3, v2

    .line 2878
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v3, 0x42

    or-int/lit8 v3, v3, 0x42

    add-int/2addr v5, v3

    and-int/lit8 v3, v5, -0x1

    or-int/lit8 v5, v5, -0x1

    add-int/2addr v3, v5

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_1

    goto :goto_0

    :goto_2
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v1, 0xb

    xor-int/lit8 v2, p0, 0xb

    and-int/lit8 v3, p0, 0xb

    or-int/2addr v2, v3

    shl-int/2addr v2, v4

    and-int/lit8 v3, p0, -0xc

    not-int p0, p0

    and-int/2addr p0, v1

    or-int/2addr p0, v3

    neg-int p0, p0

    or-int v1, v2, p0

    shl-int/2addr v1, v4

    xor-int/2addr p0, v2

    sub-int/2addr v1, p0

    rem-int/lit16 p0, v1, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_4

    const/4 p0, 0x4

    goto :goto_3

    :cond_4
    const/16 p0, 0x5c

    :goto_3
    packed-switch p0, :pswitch_data_1

    goto :goto_4

    :pswitch_1
    return-object v0

    :goto_4
    const/4 p0, 0x0

    :try_start_0
    invoke-super {p0}, Ljava/lang/Object;->hashCode()I

    throw p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p0

    throw p0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x5c
        :pswitch_1
    .end packed-switch
.end method

.method private getTerminalData(S[BSS)S
    .locals 23

    move/from16 v0, p1

    move-object/from16 v1, p2

    move/from16 v2, p3

    move/from16 v3, p4

    .line 385
    nop

    .line 373
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v5, v4, 0x3

    const/4 v6, 0x1

    shl-int/2addr v5, v6

    xor-int/lit8 v4, v4, 0x3

    sub-int/2addr v5, v4

    rem-int/lit16 v4, v5, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_0

    .line 291
    :cond_0
    nop

    .line 295
    nop

    .line 300
    sget-object v4, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-static/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 301
    const/4 v5, 0x0

    if-eqz v4, :cond_1

    .line 328
    move v7, v6

    goto :goto_0

    :cond_1
    move v7, v5

    :goto_0
    const-string v12, "DATE"

    const/16 v14, 0x41

    const/4 v15, -0x1

    const/4 v8, 0x0

    packed-switch v7, :pswitch_data_0

    .line 373
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v7, v7, 0x4e

    or-int/lit8 v17, v7, -0x1

    shl-int/lit8 v17, v17, 0x1

    xor-int/2addr v7, v15

    sub-int v7, v17, v7

    rem-int/lit16 v10, v7, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_2

    .line 328
    const/16 v7, 0x24

    goto :goto_1

    :cond_2
    const/16 v7, 0x50

    :goto_1
    const-string v10, ","

    packed-switch v7, :pswitch_data_1

    .line 303
    invoke-virtual {v4, v10}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v7

    array-length v10, v7

    move/from16 v18, v5

    goto :goto_2

    :pswitch_0
    invoke-virtual {v4, v10}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v7

    array-length v10, v7

    move/from16 v18, v6

    .line 309
    :goto_2
    sget v19, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v20, 0x7b

    and-int/lit8 v21, v19, 0x7b

    or-int/lit8 v19, v19, 0x7b

    add-int v13, v21, v19

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_3

    .line 328
    move v9, v6

    goto :goto_3

    :cond_3
    move v9, v5

    :goto_3
    packed-switch v9, :pswitch_data_2

    .line 309
    goto :goto_4

    .line 385
    :pswitch_1
    nop

    .line 303
    :goto_4
    move/from16 v9, v18

    :goto_5
    if-ge v9, v10, :cond_4

    .line 328
    move v13, v6

    goto :goto_6

    :cond_4
    move v13, v5

    :goto_6
    packed-switch v13, :pswitch_data_3

    .line 331
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v18, 0x4f

    xor-int/lit8 v21, v13, 0x4f

    and-int/lit8 v22, v13, 0x4f

    or-int v21, v21, v22

    shl-int/lit8 v21, v21, 0x1

    and-int/lit8 v22, v13, -0x50

    not-int v13, v13

    and-int v13, v18, v13

    or-int v13, v22, v13

    sub-int v13, v21, v13

    rem-int/lit16 v11, v13, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_5

    goto :goto_7

    .line 342
    :pswitch_2
    move-object v4, v8

    goto/16 :goto_2f

    .line 303
    :cond_5
    :goto_7
    aget-object v11, v7, v9

    .line 304
    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v11

    .line 305
    const/16 v13, 0x22

    if-eqz v11, :cond_6

    .line 328
    const/16 v21, 0x55

    goto :goto_8

    :cond_6
    move/from16 v21, v13

    :goto_8
    packed-switch v21, :pswitch_data_4

    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v9, v7, 0x31

    and-int/lit8 v7, v7, 0x31

    shl-int/2addr v7, v6

    neg-int v7, v7

    neg-int v7, v7

    xor-int v10, v9, v7

    and-int/2addr v7, v9

    shl-int/2addr v7, v6

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_8

    goto :goto_a

    .line 303
    :pswitch_3
    and-int/lit8 v11, v9, -0x40

    xor-int/lit8 v9, v9, -0x40

    or-int/2addr v9, v11

    neg-int v9, v9

    neg-int v9, v9

    and-int v13, v11, v9

    or-int/2addr v9, v11

    add-int/2addr v13, v9

    and-int/lit8 v9, v13, 0x41

    xor-int/lit8 v11, v13, 0x41

    or-int/2addr v11, v9

    neg-int v11, v11

    neg-int v11, v11

    xor-int v13, v9, v11

    and-int/2addr v9, v11

    shl-int/2addr v9, v6

    add-int/2addr v9, v13

    .line 358
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v13, v11, 0x15

    and-int/lit8 v11, v11, 0x15

    or-int/2addr v11, v13

    shl-int/2addr v11, v6

    neg-int v13, v13

    xor-int v21, v11, v13

    and-int/2addr v11, v13

    shl-int/2addr v11, v6

    add-int v11, v21, v11

    rem-int/lit16 v13, v11, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_7

    .line 328
    const/16 v11, 0x2f

    goto :goto_9

    :cond_7
    const/16 v11, 0x47

    :goto_9
    packed-switch v11, :pswitch_data_5

    .line 385
    goto/16 :goto_5

    .line 358
    :pswitch_4
    goto/16 :goto_5

    .line 307
    :cond_8
    :goto_a
    sget-object v7, Lcom/visa/vac/tc/emvconverter/TagDataList;->performTransaction:Landroid/util/ArrayMap;

    invoke-virtual {v7, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 308
    if-eqz v4, :cond_9

    .line 328
    move v7, v6

    goto :goto_b

    :cond_9
    move v7, v5

    :goto_b
    packed-switch v7, :pswitch_data_6

    :goto_c
    goto/16 :goto_13

    .line 331
    :pswitch_5
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v7, 0x1

    and-int/lit8 v10, v7, 0x1

    or-int/2addr v9, v10

    shl-int/2addr v9, v6

    not-int v10, v10

    or-int/2addr v7, v6

    and-int/2addr v7, v10

    neg-int v7, v7

    or-int v10, v9, v7

    shl-int/2addr v10, v6

    xor-int/2addr v7, v9

    sub-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_a

    .line 308
    :cond_a
    invoke-virtual {v4, v12}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_b

    .line 328
    const/16 v10, 0x50

    goto :goto_d

    :cond_b
    const/16 v10, 0xd

    :goto_d
    packed-switch v10, :pswitch_data_7

    goto :goto_c

    .line 331
    :pswitch_6
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v4, v4, 0x1d

    rem-int/lit16 v7, v4, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_c

    .line 328
    goto :goto_e

    :cond_c
    const/16 v13, 0x18

    :goto_e
    packed-switch v13, :pswitch_data_8

    .line 309
    check-cast v11, Ljava/lang/String;

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->BuildConfig(Ljava/lang/String;)[B

    goto :goto_12

    :pswitch_7
    check-cast v11, Ljava/lang/String;

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->BuildConfig(Ljava/lang/String;)[B

    move-result-object v4

    .line 331
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v9, v7, 0x6b

    and-int/lit8 v10, v7, 0x6b

    or-int/2addr v9, v10

    shl-int/2addr v9, v6

    and-int/lit8 v10, v7, -0x6c

    not-int v7, v7

    and-int/lit8 v7, v7, 0x6b

    or-int/2addr v7, v10

    neg-int v7, v7

    and-int v10, v9, v7

    or-int/2addr v7, v9

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_d

    .line 328
    const/4 v7, 0x6

    goto :goto_f

    :cond_d
    const/16 v7, 0x16

    :goto_f
    packed-switch v7, :pswitch_data_9

    .line 331
    :goto_10
    goto/16 :goto_2f

    .line 385
    :goto_11
    :pswitch_8
    goto/16 :goto_2f

    .line 309
    :goto_12
    :try_start_0
    throw v8
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 331
    :catchall_0
    move-exception v0

    move-object v1, v0

    throw v1

    .line 311
    :goto_13
    if-eqz v4, :cond_e

    .line 328
    move v7, v6

    goto :goto_14

    :cond_e
    move v7, v5

    :goto_14
    packed-switch v7, :pswitch_data_a

    .line 373
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v7, v7, 0xd

    sub-int/2addr v7, v6

    or-int/lit8 v9, v7, -0x1

    shl-int/2addr v9, v6

    xor-int/2addr v7, v15

    sub-int/2addr v9, v7

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_f

    .line 312
    :cond_f
    const-string v7, "AN"

    invoke-virtual {v4, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-eqz v7, :cond_10

    .line 328
    move v7, v5

    goto :goto_15

    :cond_10
    move v7, v6

    :goto_15
    packed-switch v7, :pswitch_data_b

    .line 331
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v7, 0x13

    and-int/lit8 v9, v4, -0x14

    not-int v10, v4

    and-int/2addr v10, v7

    or-int/2addr v9, v10

    and-int/2addr v4, v7

    shl-int/2addr v4, v6

    neg-int v4, v4

    neg-int v4, v4

    xor-int v7, v9, v4

    and-int/2addr v4, v9

    shl-int/2addr v4, v6

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_19

    goto/16 :goto_1e

    .line 315
    :pswitch_9
    const-string v7, "HEX"

    invoke-virtual {v4, v7}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_11

    .line 328
    const/4 v4, 0x5

    goto :goto_16

    :cond_11
    const/16 v4, 0x10

    :goto_16
    packed-switch v4, :pswitch_data_c

    .line 318
    instance-of v4, v11, Ljava/lang/Integer;

    if-eqz v4, :cond_16

    goto/16 :goto_1b

    .line 373
    :pswitch_a
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v4, 0x13

    xor-int/lit8 v4, v4, 0x13

    or-int/2addr v4, v7

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_12

    .line 316
    :cond_12
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance(S)[B

    move-result-object v4

    .line 317
    if-eqz v4, :cond_13

    .line 328
    move v7, v6

    goto :goto_17

    :cond_13
    move v7, v5

    :goto_17
    packed-switch v7, :pswitch_data_d

    goto :goto_1a

    .line 303
    :pswitch_b
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v9, v7, 0x43

    and-int/lit8 v7, v7, 0x43

    shl-int/2addr v7, v6

    neg-int v7, v7

    neg-int v7, v7

    and-int v10, v9, v7

    or-int/2addr v7, v9

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_14

    .line 328
    const/16 v7, 0x29

    goto :goto_18

    :cond_14
    const/16 v7, 0x4c

    :goto_18
    packed-switch v7, :pswitch_data_e

    .line 318
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData([B)Ljava/lang/String;

    move-result-object v4

    goto :goto_19

    :pswitch_c
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData([B)Ljava/lang/String;

    :try_start_1
    throw v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 303
    :catchall_1
    move-exception v0

    move-object v1, v0

    throw v1

    .line 358
    :goto_19
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v9, v7, 0x63

    not-int v10, v9

    or-int/lit8 v7, v7, 0x63

    and-int/2addr v7, v10

    shl-int/2addr v9, v6

    add-int/2addr v7, v9

    rem-int/lit16 v9, v7, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_15

    .line 385
    :cond_15
    move-object v11, v4

    .line 318
    :goto_1a
    nop

    .line 309
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v4, 0x27

    xor-int/lit8 v4, v4, 0x27

    or-int/2addr v4, v7

    neg-int v4, v4

    neg-int v4, v4

    or-int v9, v7, v4

    shl-int/2addr v9, v6

    xor-int/2addr v4, v7

    sub-int/2addr v9, v4

    rem-int/lit16 v4, v9, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_1a

    goto :goto_1f

    .line 328
    :goto_1b
    move v4, v5

    goto :goto_1c

    :cond_16
    move v4, v6

    :goto_1c
    packed-switch v4, :pswitch_data_f

    .line 331
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v4, 0xf

    xor-int/lit8 v4, v4, 0xf

    or-int/2addr v4, v7

    neg-int v4, v4

    neg-int v4, v4

    and-int v9, v7, v4

    or-int/2addr v4, v7

    add-int/2addr v9, v4

    rem-int/lit16 v4, v9, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_17

    .line 321
    :cond_17
    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    .line 309
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v4, -0x7c

    not-int v9, v4

    and-int v9, v20, v9

    or-int/2addr v7, v9

    and-int/lit8 v4, v4, 0x7b

    shl-int/2addr v4, v6

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_18

    .line 328
    const/16 v4, 0x1f

    goto :goto_1d

    :cond_18
    const/16 v4, 0x4b

    :goto_1d
    packed-switch v4, :pswitch_data_10

    .line 385
    goto :goto_1f

    .line 309
    :pswitch_d
    goto :goto_20

    .line 314
    :cond_19
    :goto_1e
    check-cast v11, Ljava/lang/String;

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->asciiToHex(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v11

    .line 373
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v7, v4, 0x5f

    shl-int/2addr v7, v6

    xor-int/lit8 v4, v4, 0x5f

    sub-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_1a

    .line 385
    :cond_1a
    :goto_1f
    nop

    .line 326
    :goto_20
    :pswitch_e
    shr-int/lit8 v4, v0, 0x8

    and-int/lit16 v4, v4, 0xff

    int-to-short v4, v4

    .line 327
    if-nez v4, :cond_1b

    .line 328
    move v7, v6

    goto :goto_21

    :cond_1b
    move v7, v5

    :goto_21
    packed-switch v7, :pswitch_data_11

    goto :goto_25

    .line 318
    :pswitch_f
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v7, v4, 0x5b

    shl-int/2addr v7, v6

    xor-int/lit8 v4, v4, 0x5b

    sub-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_1c

    .line 328
    move v7, v6

    goto :goto_22

    :cond_1c
    move v7, v5

    :goto_22
    packed-switch v7, :pswitch_data_12

    :goto_23
    goto :goto_24

    :pswitch_10
    const/16 v7, 0x40

    :try_start_2
    div-int/2addr v7, v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    goto :goto_23

    .line 318
    :catchall_2
    move-exception v0

    move-object v1, v0

    throw v1

    .line 331
    :goto_24
    and-int/lit8 v7, v4, 0x65

    not-int v9, v7

    or-int/lit8 v4, v4, 0x65

    and-int/2addr v4, v9

    shl-int/2addr v7, v6

    add-int/2addr v4, v7

    rem-int/lit16 v7, v4, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_1d

    .line 385
    :cond_1d
    move v4, v0

    .line 330
    :goto_25
    and-int/lit8 v4, v4, 0x20

    if-nez v4, :cond_1e

    .line 328
    move v4, v5

    goto :goto_26

    :cond_1e
    move v4, v6

    :goto_26
    packed-switch v4, :pswitch_data_13

    .line 358
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v4, 0x41

    xor-int/2addr v4, v14

    or-int/2addr v4, v7

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_1f

    goto :goto_27

    .line 328
    :pswitch_11
    move-object v4, v8

    goto :goto_2b

    :goto_27
    move v4, v5

    goto :goto_28

    :cond_1f
    move v4, v6

    :goto_28
    packed-switch v4, :pswitch_data_14

    .line 331
    instance-of v4, v11, Ljava/lang/String;

    if-eqz v4, :cond_20

    goto :goto_29

    :pswitch_12
    instance-of v0, v11, Ljava/lang/String;

    :try_start_3
    invoke-super {v8}, Ljava/lang/Object;->hashCode()I

    throw v8
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 358
    :catchall_3
    move-exception v0

    throw v0

    .line 328
    :goto_29
    move v4, v6

    goto :goto_2a

    :cond_20
    move v4, v5

    :goto_2a
    packed-switch v4, :pswitch_data_15

    goto :goto_2d

    .line 334
    :pswitch_13
    check-cast v11, [B

    move-object v4, v11

    :goto_2b
    nop

    .line 373
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v7, 0x51

    and-int/lit8 v7, v7, 0x51

    shl-int/2addr v7, v6

    add-int/2addr v9, v7

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_21

    .line 328
    const/16 v7, 0x57

    goto :goto_2c

    :cond_21
    const/16 v7, 0x61

    :goto_2c
    packed-switch v7, :pswitch_data_16

    .line 385
    goto/16 :goto_11

    .line 373
    :pswitch_14
    goto :goto_2f

    .line 332
    :goto_2d
    check-cast v11, Ljava/lang/String;

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v4

    .line 331
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v9, 0x2b

    and-int/lit8 v10, v7, -0x2c

    not-int v11, v7

    and-int/2addr v11, v9

    or-int/2addr v10, v11

    and-int/2addr v7, v9

    shl-int/2addr v7, v6

    add-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v10, v10, 0x2

    if-nez v10, :cond_22

    .line 328
    move v7, v5

    goto :goto_2e

    :cond_22
    move v7, v6

    :goto_2e
    packed-switch v7, :pswitch_data_17

    .line 331
    goto/16 :goto_10

    .line 342
    :goto_2f
    if-nez v4, :cond_23

    .line 328
    move v7, v5

    goto :goto_30

    :cond_23
    move v7, v6

    :goto_30
    packed-switch v7, :pswitch_data_18

    .line 331
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v7, v4, 0x65

    shl-int/2addr v7, v6

    xor-int/lit8 v4, v4, 0x65

    sub-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_24

    .line 343
    :cond_24
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance(S)[B

    move-result-object v4

    check-cast v4, [B

    .line 358
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v9, v7, 0x73

    xor-int/lit8 v7, v7, 0x73

    or-int/2addr v7, v9

    neg-int v7, v7

    neg-int v7, v7

    not-int v7, v7

    sub-int/2addr v9, v7

    sub-int/2addr v9, v6

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_25

    .line 385
    :cond_25
    nop

    .line 345
    :pswitch_15
    const/16 v7, 0x5d

    if-eqz v4, :cond_26

    .line 328
    move v9, v7

    goto :goto_31

    :cond_26
    const/16 v9, 0x9

    :goto_31
    const/16 v10, 0x44

    packed-switch v9, :pswitch_data_19

    .line 382
    move v0, v5

    goto/16 :goto_52

    .line 373
    :pswitch_16
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v11, v9, 0x5

    shl-int/lit8 v13, v11, 0x1

    const/4 v14, 0x5

    and-int/2addr v9, v14

    not-int v9, v9

    and-int/2addr v9, v11

    neg-int v9, v9

    and-int v11, v13, v9

    or-int/2addr v9, v13

    add-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_27

    .line 346
    :cond_27
    nop

    .line 347
    nop

    .line 351
    invoke-static {v0, v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig(SLjava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 352
    if-eqz v0, :cond_28

    .line 328
    const/16 v9, 0xa

    goto :goto_32

    :cond_28
    const/16 v9, 0x54

    :goto_32
    const/16 v11, 0x25

    packed-switch v9, :pswitch_data_1a

    :goto_33
    goto/16 :goto_3d

    .line 331
    :pswitch_17
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v9, 0xb

    or-int/lit8 v9, v9, 0xb

    add-int/2addr v13, v9

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v13, v13, 0x2

    if-nez v13, :cond_29

    .line 352
    :cond_29
    nop

    .line 353
    const-string v9, "NUM"

    invoke-virtual {v0, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_2a

    .line 328
    move v9, v5

    goto :goto_34

    :cond_2a
    move v9, v6

    :goto_34
    packed-switch v9, :pswitch_data_1b

    .line 309
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v9, 0x25

    xor-int/2addr v9, v11

    or-int/2addr v9, v13

    not-int v9, v9

    sub-int/2addr v13, v9

    sub-int/2addr v13, v6

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v13, v13, 0x2

    if-nez v13, :cond_2b

    .line 353
    :cond_2b
    nop

    .line 354
    const-string v9, "ISO"

    invoke-virtual {v0, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_2c

    .line 328
    const/16 v17, 0x55

    goto :goto_35

    :cond_2c
    const/16 v17, 0x10

    :goto_35
    packed-switch v17, :pswitch_data_1c

    goto :goto_3a

    .line 385
    :pswitch_18
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v9, v9, 0x60

    sub-int/2addr v9, v6

    rem-int/lit16 v13, v9, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_2d

    .line 328
    move v9, v6

    goto :goto_36

    :cond_2d
    move v9, v5

    :goto_36
    packed-switch v9, :pswitch_data_1d

    .line 385
    nop

    .line 355
    invoke-virtual {v0, v12}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    goto :goto_39

    .line 354
    :pswitch_19
    nop

    .line 355
    invoke-virtual {v0, v12}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_2e

    .line 328
    const/16 v9, 0xf

    goto :goto_37

    :cond_2e
    const/16 v9, 0x2c

    :goto_37
    packed-switch v9, :pswitch_data_1e

    .line 355
    nop

    .line 356
    const-string v9, "BIN"

    invoke-virtual {v0, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_2f

    .line 328
    const/16 v13, 0x4a

    goto :goto_38

    :cond_2f
    const/16 v13, 0x10

    :goto_38
    packed-switch v13, :pswitch_data_1f

    goto :goto_33

    .line 355
    :goto_39
    :try_start_4
    invoke-super {v8}, Ljava/lang/Object;->hashCode()I

    throw v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    .line 385
    :catchall_4
    move-exception v0

    throw v0

    .line 356
    :goto_3a
    :pswitch_1a
    nop

    .line 373
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v12, v9, 0x39

    or-int/lit8 v9, v9, 0x39

    add-int/2addr v12, v9

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_30

    .line 328
    move v9, v6

    goto :goto_3b

    :cond_30
    move v9, v5

    :goto_3b
    packed-switch v9, :pswitch_data_20

    .line 385
    goto :goto_3c

    .line 373
    :pswitch_1b
    nop

    .line 357
    :goto_3c
    move v9, v6

    goto :goto_3e

    .line 356
    :goto_3d
    nop

    .line 373
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v12, v9, 0x73

    and-int/lit8 v13, v9, 0x73

    or-int/2addr v12, v13

    shl-int/2addr v12, v6

    not-int v13, v13

    or-int/lit8 v9, v9, 0x73

    and-int/2addr v9, v13

    sub-int/2addr v12, v9

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_31

    .line 385
    :cond_31
    move v9, v5

    .line 357
    :goto_3e
    array-length v12, v4

    if-ge v3, v12, :cond_32

    .line 328
    move v12, v5

    goto :goto_3f

    :cond_32
    move v12, v6

    :goto_3f
    packed-switch v12, :pswitch_data_21

    :pswitch_1c
    goto :goto_43

    .line 355
    :pswitch_1d
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v13, v12, 0x23

    or-int/lit8 v12, v12, 0x23

    add-int/2addr v13, v12

    rem-int/lit16 v12, v13, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_33

    .line 328
    goto :goto_40

    :cond_33
    const/16 v7, 0x14

    :goto_40
    packed-switch v7, :pswitch_data_22

    .line 358
    if-eqz v9, :cond_34

    goto :goto_41

    :pswitch_1e
    :try_start_5
    throw v8
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    .line 355
    :catchall_5
    move-exception v0

    move-object v1, v0

    throw v1

    .line 328
    :goto_41
    move v7, v5

    goto :goto_42

    :cond_34
    move v7, v6

    :goto_42
    packed-switch v7, :pswitch_data_23

    .line 359
    array-length v7, v4

    neg-int v8, v3

    not-int v8, v8

    sub-int/2addr v7, v8

    sub-int/2addr v7, v6

    goto :goto_44

    .line 362
    :goto_43
    move v7, v5

    :goto_44
    array-length v8, v4

    if-ge v8, v3, :cond_35

    .line 328
    move v8, v6

    goto :goto_45

    :cond_35
    move v8, v5

    :goto_45
    packed-switch v8, :pswitch_data_24

    .line 331
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v12, v8, 0x3a

    or-int/lit8 v13, v8, 0x3a

    add-int/2addr v12, v13

    sub-int/2addr v12, v5

    sub-int/2addr v12, v6

    rem-int/lit16 v13, v12, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_36

    goto :goto_46

    .line 328
    :pswitch_1f
    move v0, v3

    move v12, v0

    goto/16 :goto_50

    .line 363
    :cond_36
    :goto_46
    array-length v12, v4

    .line 364
    if-eqz v9, :cond_37

    .line 328
    const/16 v16, 0x18

    goto :goto_47

    :cond_37
    const/16 v9, 0x3a

    move/from16 v16, v9

    :goto_47
    packed-switch v16, :pswitch_data_25

    .line 309
    and-int/lit8 v0, v13, 0x69

    xor-int/lit8 v5, v13, 0x69

    or-int/2addr v5, v0

    neg-int v5, v5

    neg-int v5, v5

    or-int v8, v0, v5

    shl-int/2addr v8, v6

    xor-int/2addr v0, v5

    sub-int/2addr v8, v0

    rem-int/lit16 v0, v8, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_3e

    goto/16 :goto_4f

    .line 366
    :pswitch_20
    if-eqz v0, :cond_38

    .line 328
    move v9, v6

    goto :goto_48

    :cond_38
    move v9, v5

    :goto_48
    packed-switch v9, :pswitch_data_26

    .line 373
    and-int/lit8 v9, v8, 0x43

    not-int v13, v9

    or-int/lit8 v8, v8, 0x43

    and-int/2addr v8, v13

    shl-int/2addr v9, v6

    add-int/2addr v8, v9

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_39

    .line 366
    :cond_39
    const-string v8, "CN"

    invoke-virtual {v0, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3a

    .line 328
    const/16 v0, 0x8

    goto :goto_49

    :cond_3a
    move v0, v10

    :goto_49
    packed-switch v0, :pswitch_data_27

    .line 309
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x63

    sub-int/2addr v0, v6

    xor-int/lit8 v8, v0, -0x1

    and-int/2addr v0, v15

    shl-int/2addr v0, v6

    add-int/2addr v8, v0

    rem-int/lit16 v0, v8, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_3c

    goto :goto_4a

    .line 375
    :pswitch_21
    array-length v0, v4

    array-length v5, v4

    neg-int v5, v5

    xor-int v8, v3, v5

    and-int v9, v3, v5

    or-int/2addr v8, v9

    shl-int/2addr v8, v6

    not-int v9, v5

    and-int/2addr v9, v3

    not-int v3, v3

    and-int/2addr v3, v5

    or-int/2addr v3, v9

    neg-int v3, v3

    not-int v3, v3

    sub-int/2addr v8, v3

    sub-int/2addr v8, v6

    neg-int v3, v8

    neg-int v3, v3

    not-int v3, v3

    neg-int v3, v3

    and-int v5, v0, v3

    or-int/2addr v0, v3

    add-int/2addr v5, v0

    sub-int/2addr v5, v6

    int-to-short v0, v5

    .line 373
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v5, 0x2f

    add-int/2addr v3, v5

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_3b

    .line 385
    :cond_3b
    goto/16 :goto_50

    .line 328
    :goto_4a
    move v0, v6

    goto :goto_4b

    :cond_3c
    move v0, v5

    :goto_4b
    packed-switch v0, :pswitch_data_28

    .line 369
    array-length v0, v4

    array-length v8, v4

    shr-int/2addr v3, v8

    neg-int v3, v3

    and-int v8, v0, v3

    not-int v9, v8

    or-int/2addr v0, v3

    and-int/2addr v0, v9

    shl-int/lit8 v3, v8, 0x1

    neg-int v3, v3

    neg-int v3, v3

    not-int v3, v3

    sub-int/2addr v0, v3

    sub-int/2addr v0, v6

    int-to-short v0, v0

    .line 370
    new-array v3, v0, [B

    .line 371
    invoke-static {v3, v6, v0, v15}, Ljava/util/Arrays;->fill([BIIB)V

    .line 372
    array-length v8, v4

    invoke-static {v4, v7, v3, v5, v8}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_4c

    .line 369
    :pswitch_22
    array-length v0, v4

    array-length v8, v4

    neg-int v8, v8

    or-int v9, v3, v8

    shl-int/2addr v9, v6

    xor-int/2addr v3, v8

    sub-int/2addr v9, v3

    or-int v3, v0, v9

    shl-int/2addr v3, v6

    xor-int/2addr v0, v9

    sub-int/2addr v3, v0

    int-to-short v0, v3

    .line 370
    new-array v3, v0, [B

    .line 371
    invoke-static {v3, v5, v0, v15}, Ljava/util/Arrays;->fill([BIIB)V

    .line 372
    array-length v8, v4

    invoke-static {v4, v7, v3, v5, v8}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 373
    :goto_4c
    move-object v4, v3

    .line 331
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v8, v3, 0x45

    shl-int/lit8 v9, v8, 0x1

    and-int/lit8 v3, v3, 0x45

    not-int v3, v3

    and-int/2addr v3, v8

    sub-int/2addr v9, v3

    rem-int/lit16 v3, v9, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_3d

    .line 328
    goto :goto_4d

    :cond_3d
    move v5, v6

    :goto_4d
    packed-switch v5, :pswitch_data_29

    .line 331
    goto :goto_4e

    .line 385
    :pswitch_23
    nop

    .line 379
    :goto_4e
    move v12, v0

    goto :goto_50

    .line 365
    :cond_3e
    :goto_4f
    array-length v0, v4

    neg-int v0, v0

    and-int/lit8 v5, v0, 0x0

    not-int v0, v0

    and-int/2addr v0, v15

    or-int/2addr v0, v5

    sub-int v0, v3, v0

    or-int/lit8 v5, v0, -0x1

    shl-int/2addr v5, v6

    xor-int/2addr v0, v15

    sub-int/2addr v5, v0

    neg-int v0, v5

    neg-int v0, v0

    not-int v5, v0

    and-int/2addr v5, v2

    not-int v8, v2

    and-int/2addr v8, v0

    or-int/2addr v5, v8

    and-int/2addr v0, v2

    shl-int/2addr v0, v6

    add-int/2addr v5, v0

    int-to-short v0, v5

    .line 309
    xor-int/lit8 v2, v13, 0x61

    and-int/lit8 v5, v13, 0x61

    shl-int/2addr v5, v6

    neg-int v5, v5

    neg-int v5, v5

    and-int v8, v2, v5

    or-int/2addr v2, v5

    add-int/2addr v8, v2

    rem-int/lit16 v2, v8, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_3f

    .line 385
    :cond_3f
    move v2, v0

    move v0, v3

    .line 379
    :goto_50
    invoke-static {v4, v7, v1, v2, v12}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 373
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v1, 0x25

    and-int/lit8 v3, v1, 0x25

    or-int/2addr v2, v3

    shl-int/2addr v2, v6

    and-int/lit8 v3, v1, -0x26

    not-int v1, v1

    and-int/2addr v1, v11

    or-int/2addr v1, v3

    neg-int v1, v1

    and-int v3, v2, v1

    or-int/2addr v1, v2

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_40

    .line 328
    const/16 v1, 0x30

    goto :goto_51

    :cond_40
    const/16 v1, 0x3e

    :goto_51
    packed-switch v1, :pswitch_data_2a

    .line 373
    goto :goto_54

    .line 385
    :pswitch_24
    goto :goto_54

    .line 382
    :goto_52
    if-ge v0, v3, :cond_41

    .line 328
    const/16 v4, 0x49

    goto :goto_53

    :cond_41
    move v4, v14

    :goto_53
    packed-switch v4, :pswitch_data_2b

    .line 373
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v7, v4, 0x71

    shl-int/2addr v7, v6

    xor-int/lit8 v8, v4, 0x71

    sub-int/2addr v7, v8

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_42

    goto :goto_55

    .line 328
    :pswitch_25
    move v0, v3

    .line 385
    :goto_54
    nop

    .line 309
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v1, 0x44

    and-int/2addr v1, v10

    shl-int/2addr v1, v6

    add-int/2addr v2, v1

    xor-int/lit8 v1, v2, -0x1

    and-int/2addr v2, v15

    shl-int/2addr v2, v6

    add-int/2addr v1, v2

    rem-int/lit16 v2, v1, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    .line 385
    return v0

    .line 383
    :cond_42
    :goto_55
    and-int/lit8 v7, v2, -0x2

    not-int v8, v2

    and-int/2addr v8, v6

    or-int/2addr v7, v8

    and-int/lit8 v8, v2, 0x1

    shl-int/2addr v8, v6

    not-int v8, v8

    sub-int/2addr v7, v8

    sub-int/2addr v7, v6

    int-to-short v7, v7

    aput-byte v5, v1, v2

    .line 382
    add-int/lit8 v0, v0, 0x1

    .line 331
    and-int/lit8 v2, v4, 0x59

    or-int/lit8 v4, v4, 0x59

    xor-int v8, v2, v4

    and-int/2addr v2, v4

    shl-int/2addr v2, v6

    add-int/2addr v8, v2

    rem-int/lit16 v2, v8, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_43

    .line 385
    :cond_43
    move v2, v7

    goto :goto_52

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x24
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x22
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x2f
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x50
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x18
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x16
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x5
        :pswitch_a
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x29
        :pswitch_c
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x1
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1f
        :pswitch_d
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x1
        :pswitch_10
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x1
        :pswitch_11
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x0
        :pswitch_12
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x57
        :pswitch_14
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x5d
        :pswitch_16
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0xa
        :pswitch_17
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x1
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x55
        :pswitch_18
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x0
        :pswitch_19
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x2c
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x4a
        :pswitch_1a
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x1
        :pswitch_1b
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x0
        :pswitch_1d
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0x5d
        :pswitch_1e
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x1
        :pswitch_1c
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x0
        :pswitch_1f
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x3a
        :pswitch_20
    .end packed-switch

    :pswitch_data_26
    .packed-switch 0x0
        :pswitch_21
    .end packed-switch

    :pswitch_data_27
    .packed-switch 0x44
        :pswitch_21
    .end packed-switch

    :pswitch_data_28
    .packed-switch 0x0
        :pswitch_22
    .end packed-switch

    :pswitch_data_29
    .packed-switch 0x1
        :pswitch_23
    .end packed-switch

    :pswitch_data_2a
    .packed-switch 0x3e
        :pswitch_24
    .end packed-switch

    :pswitch_data_2b
    .packed-switch 0x41
        :pswitch_25
    .end packed-switch
.end method

.method private static getTerminalData(Landroid/util/ArrayMap;)V
    .locals 7
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 1389
    nop

    .line 1380
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x23

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    or-int/lit8 v2, v0, -0x1

    shl-int/2addr v2, v1

    xor-int/lit8 v0, v0, -0x1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_0

    .line 1379
    :cond_0
    if-eqz p0, :cond_1

    .line 1380
    const/16 v2, 0xa

    goto :goto_0

    :cond_1
    const/16 v2, 0xf

    :goto_0
    packed-switch v2, :pswitch_data_0

    :goto_1
    goto/16 :goto_f

    .line 1383
    :pswitch_0
    add-int/lit8 v0, v0, 0x11

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    const/4 v2, 0x0

    if-eqz v0, :cond_2

    .line 1380
    move v0, v2

    goto :goto_2

    :cond_2
    move v0, v1

    :goto_2
    const/4 v3, 0x0

    invoke-virtual {p0}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object p0

    packed-switch v0, :pswitch_data_1

    invoke-interface {p0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p0

    goto :goto_3

    :pswitch_1
    invoke-interface {p0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    :try_start_0
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1383
    :catchall_0
    move-exception p0

    throw p0

    .line 5401
    :goto_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x58

    and-int/lit8 v0, v0, 0x58

    shl-int/2addr v0, v1

    add-int/2addr v4, v0

    xor-int/lit8 v0, v4, -0x1

    and-int/lit8 v4, v4, -0x1

    shl-int/2addr v4, v1

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_3

    .line 1389
    :cond_3
    :goto_4
    :pswitch_2
    nop

    .line 1380
    :goto_5
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_4

    move v0, v1

    goto :goto_6

    :cond_4
    move v0, v2

    :goto_6
    packed-switch v0, :pswitch_data_2

    goto :goto_1

    .line 5401
    :pswitch_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v4, v0, 0x34

    shl-int/2addr v4, v1

    xor-int/lit8 v0, v0, 0x34

    sub-int/2addr v4, v0

    and-int/lit8 v0, v4, -0x1

    or-int/lit8 v4, v4, -0x1

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_5

    .line 1380
    const/16 v0, 0x1b

    goto :goto_7

    :cond_5
    const/16 v0, 0x23

    :goto_7
    packed-switch v0, :pswitch_data_3

    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/Map$Entry;

    .line 1381
    invoke-interface {v0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 1382
    invoke-interface {v0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 1383
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_6

    goto :goto_8

    .line 5401
    :pswitch_4
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Ljava/util/Map$Entry;

    .line 1381
    invoke-interface {p0}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 1382
    invoke-interface {p0}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Ljava/lang/String;

    .line 1383
    sget-object p0, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {p0, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    :try_start_1
    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5401
    :catchall_1
    move-exception p0

    throw p0

    .line 1380
    :goto_8
    const/16 v5, 0x16

    goto :goto_9

    :cond_6
    const/16 v5, 0x3e

    :goto_9
    packed-switch v5, :pswitch_data_4

    goto :goto_a

    .line 1384
    :pswitch_5
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 4401
    sget-object v6, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v5, v4, v0, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1383
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x2

    sub-int/2addr v0, v2

    sub-int/2addr v0, v1

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_3

    goto/16 :goto_4

    .line 1386
    :goto_a
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_7

    .line 1380
    move v5, v2

    goto :goto_b

    :cond_7
    move v5, v1

    :goto_b
    packed-switch v5, :pswitch_data_5

    .line 1389
    invoke-static {v4, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_d

    :pswitch_6
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v6, v5, 0x52

    or-int/lit8 v5, v5, 0x52

    add-int/2addr v6, v5

    or-int/lit8 v5, v6, -0x1

    shl-int/2addr v5, v1

    xor-int/lit8 v6, v6, -0x1

    sub-int/2addr v5, v6

    rem-int/lit16 v6, v5, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_8

    .line 1380
    move v5, v2

    goto :goto_c

    :cond_8
    move v5, v1

    :goto_c
    packed-switch v5, :pswitch_data_6

    .line 1387
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    .line 5401
    sget-object v6, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v4, v5, v0, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    goto/16 :goto_4

    .line 1387
    :pswitch_7
    sget-object p0, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {p0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p0

    check-cast p0, Ljava/lang/String;

    .line 5401
    sget-object v1, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v4, p0, v0, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    :try_start_2
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 1389
    :catchall_2
    move-exception p0

    throw p0

    .line 5401
    :goto_d
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v4, v0, 0x28

    shl-int/2addr v4, v1

    xor-int/lit8 v0, v0, 0x28

    sub-int/2addr v4, v0

    xor-int/lit8 v0, v4, -0x1

    and-int/lit8 v4, v4, -0x1

    shl-int/2addr v4, v1

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_9

    .line 1380
    const/16 v0, 0x56

    goto :goto_e

    :cond_9
    const/16 v0, 0x3f

    :goto_e
    packed-switch v0, :pswitch_data_7

    .line 5401
    goto/16 :goto_5

    .line 1389
    :goto_f
    sget p0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v0, p0, 0x6e

    shl-int/2addr v0, v1

    xor-int/lit8 p0, p0, 0x6e

    sub-int/2addr v0, p0

    sub-int/2addr v0, v1

    rem-int/lit16 p0, v0, 0x80

    sput p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    return-void

    :pswitch_data_0
    .packed-switch 0xa
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1b
        :pswitch_4
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x16
        :pswitch_5
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x3f
        :pswitch_2
    .end packed-switch
.end method

.method private operationAPPLY_SCRIPT(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 26
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    move-object/from16 v1, p0

    .line 1718
    nop

    .line 1649
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v0

    .line 1650
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 1651
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalValue(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    .line 1652
    nop

    .line 1653
    nop

    .line 1654
    if-nez v3, :cond_0

    .line 1714
    const/16 v5, 0x39

    goto :goto_0

    :cond_0
    const/16 v5, 0xa

    :goto_0
    const/4 v6, 0x2

    const/4 v7, 0x1

    packed-switch v5, :pswitch_data_0

    .line 1705
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v5, v3, 0x15

    xor-int/lit8 v3, v3, 0x15

    or-int/2addr v3, v5

    or-int v8, v5, v3

    shl-int/2addr v8, v7

    xor-int/2addr v3, v5

    sub-int/2addr v8, v3

    rem-int/lit16 v3, v8, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v8, v6

    if-nez v8, :cond_1

    .line 1655
    :cond_1
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    .line 1674
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v8, v5, 0x7b

    shl-int/2addr v8, v7

    xor-int/lit8 v5, v5, 0x7b

    sub-int/2addr v8, v5

    rem-int/lit16 v5, v8, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v8, v6

    if-nez v8, :cond_2

    .line 1714
    const/16 v5, 0x19

    goto :goto_1

    :cond_2
    const/16 v5, 0x3e

    :goto_1
    packed-switch v5, :pswitch_data_1

    .line 1718
    goto :goto_2

    .line 1674
    :pswitch_0
    nop

    .line 1658
    :goto_2
    :pswitch_1
    instance-of v5, v3, Ljava/lang/String;

    const/4 v8, 0x0

    if-eqz v5, :cond_3

    .line 1714
    move v5, v7

    goto :goto_3

    :cond_3
    move v5, v8

    :goto_3
    const/4 v9, 0x0

    packed-switch v5, :pswitch_data_2

    .line 1674
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v5, v5, 0x3f

    sub-int/2addr v5, v7

    xor-int/lit8 v10, v5, -0x1

    and-int/lit8 v5, v5, -0x1

    shl-int/2addr v5, v7

    add-int/2addr v10, v5

    rem-int/lit16 v5, v10, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v10, v6

    if-nez v10, :cond_4

    .line 1714
    move v5, v8

    goto :goto_4

    :cond_4
    move v5, v7

    :goto_4
    const-string v10, "["

    packed-switch v5, :pswitch_data_3

    .line 1658
    move-object v5, v3

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v5, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_6

    goto :goto_5

    .line 1674
    :pswitch_2
    check-cast v3, Ljava/lang/String;

    invoke-virtual {v3, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    :try_start_0
    throw v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1660
    :goto_5
    new-instance v2, Lcom/google/gson/Gson;

    invoke-direct {v2}, Lcom/google/gson/Gson;-><init>()V

    check-cast v3, Ljava/lang/String;

    const-class v5, Ljava/util/ArrayList;

    invoke-virtual {v2, v3, v5}, Lcom/google/gson/Gson;->fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    .line 1661
    move-object v2, v3

    check-cast v2, Ljava/util/ArrayList;

    invoke-virtual {v2, v8}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v5

    .line 1662
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Ljava/lang/Object;)Ljava/util/ArrayList;

    move-result-object v5

    .line 1663
    invoke-virtual {v2}, Ljava/util/AbstractCollection;->size()I

    move-result v2

    .line 1664
    nop

    .line 1674
    sget v10, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v11, v10, 0x65

    shl-int/2addr v11, v7

    xor-int/lit8 v10, v10, 0x65

    sub-int/2addr v11, v10

    rem-int/lit16 v10, v11, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v11, v6

    if-eqz v11, :cond_5

    .line 1714
    move v10, v7

    goto :goto_6

    :cond_5
    move v10, v8

    :goto_6
    packed-switch v10, :pswitch_data_4

    .line 1674
    goto :goto_7

    .line 1718
    :pswitch_3
    nop

    .line 1669
    :goto_7
    move v10, v8

    move-object/from16 v25, v3

    move v3, v2

    move-object v2, v5

    move-object/from16 v5, v25

    goto :goto_8

    .line 1666
    :cond_6
    :pswitch_4
    move-object v5, v3

    check-cast v5, Ljava/lang/String;

    invoke-virtual {v2, v5}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 1674
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v5, 0x25

    not-int v11, v10

    or-int/lit8 v5, v5, 0x25

    and-int/2addr v5, v11

    shl-int/2addr v10, v7

    not-int v10, v10

    sub-int/2addr v5, v10

    sub-int/2addr v5, v7

    rem-int/lit16 v10, v5, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v6

    if-eqz v5, :cond_7

    .line 1718
    :cond_7
    move-object v5, v3

    move v3, v7

    move v10, v3

    .line 1669
    :goto_8
    new-instance v11, Ljava/util/ArrayList;

    invoke-direct {v11}, Ljava/util/ArrayList;-><init>()V

    .line 1670
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 1671
    nop

    .line 1672
    nop

    .line 1714
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v13, 0x7

    xor-int/lit8 v13, v13, 0x7

    or-int/2addr v13, v14

    neg-int v13, v13

    neg-int v13, v13

    or-int v15, v14, v13

    shl-int/2addr v15, v7

    xor-int/2addr v13, v14

    sub-int/2addr v15, v13

    rem-int/lit16 v13, v15, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v15, v6

    if-eqz v15, :cond_8

    .line 1718
    :cond_8
    move v13, v8

    move v14, v13

    .line 1672
    :goto_9
    const/16 v15, 0x62

    const/16 v16, 0x10

    if-ge v13, v3, :cond_9

    .line 1714
    move/from16 v17, v16

    goto :goto_a

    :cond_9
    move/from16 v17, v15

    :goto_a
    const/16 v18, 0x23

    const/16 v19, 0x9

    const/16 v20, 0x40

    const/16 v21, 0x59

    const/16 v22, 0x2f

    const-string v4, "[]"

    packed-switch v17, :pswitch_data_5

    .line 1698
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    const-string v3, "0082"

    invoke-virtual {v5, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_21

    goto/16 :goto_25

    .line 1718
    :pswitch_5
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v15, v15, 0x59

    rem-int/lit16 v8, v15, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v15, v6

    if-eqz v15, :cond_a

    .line 1673
    :cond_a
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v8

    .line 1674
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v21, v15, 0x14

    shl-int/lit8 v21, v21, 0x1

    xor-int/lit8 v15, v15, 0x14

    sub-int v21, v21, v15

    add-int/lit8 v15, v21, -0x1

    rem-int/lit16 v7, v15, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v15, v6

    if-nez v15, :cond_b

    .line 1714
    const/4 v7, 0x0

    goto :goto_b

    :cond_b
    const/4 v7, 0x1

    :goto_b
    packed-switch v7, :pswitch_data_6

    .line 1718
    goto :goto_c

    .line 1674
    :pswitch_6
    nop

    .line 1673
    :goto_c
    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_c

    .line 1714
    const/4 v7, 0x0

    goto :goto_d

    :cond_c
    const/4 v7, 0x1

    :goto_d
    packed-switch v7, :pswitch_data_7

    goto/16 :goto_24

    .line 1701
    :pswitch_7
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v15, v7, 0x2b

    or-int/lit8 v7, v7, 0x2b

    add-int/2addr v15, v7

    rem-int/lit16 v7, v15, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v15, v6

    if-eqz v15, :cond_d

    .line 1714
    const/16 v7, 0x60

    goto :goto_e

    :cond_d
    const/16 v7, 0x1d

    :goto_e
    packed-switch v7, :pswitch_data_8

    .line 1673
    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 1674
    invoke-virtual {v7, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v15

    if-nez v15, :cond_e

    goto :goto_f

    .line 1701
    :pswitch_8
    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    .line 1674
    invoke-virtual {v0, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    :try_start_1
    invoke-super {v9}, Ljava/lang/Object;->hashCode()I

    throw v9
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 1701
    :catchall_1
    move-exception v0

    throw v0

    .line 1714
    :goto_f
    const/16 v15, 0x2c

    goto :goto_10

    :cond_e
    const/16 v15, 0x11

    :goto_10
    packed-switch v15, :pswitch_data_9

    move-object/from16 v21, v8

    goto/16 :goto_21

    .line 1675
    :pswitch_9
    iget-object v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v7

    invoke-virtual {v15, v7}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v7

    .line 1676
    if-eqz v7, :cond_f

    .line 1714
    const/4 v15, 0x1

    goto :goto_11

    :cond_f
    const/4 v15, 0x0

    :goto_11
    packed-switch v15, :pswitch_data_a

    :pswitch_a
    goto/16 :goto_20

    .line 1705
    :pswitch_b
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v21, v15, 0x1f

    const/16 v23, 0x1

    shl-int/lit8 v21, v21, 0x1

    xor-int/lit8 v24, v15, 0x1f

    sub-int v9, v21, v24

    move-object/from16 v21, v8

    rem-int/lit16 v8, v9, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v6

    if-eqz v9, :cond_10

    .line 1676
    :cond_10
    array-length v8, v7

    if-lt v8, v6, :cond_11

    .line 1714
    const/4 v8, 0x0

    goto :goto_12

    :cond_11
    const/4 v8, 0x1

    :goto_12
    packed-switch v8, :pswitch_data_b

    .line 1674
    const/16 v8, 0xb

    and-int/lit8 v9, v15, -0xc

    not-int v6, v15

    and-int/2addr v6, v8

    or-int/2addr v6, v9

    and-int/lit8 v8, v15, 0xb

    const/4 v9, 0x1

    shl-int/2addr v8, v9

    add-int/2addr v6, v8

    rem-int/lit16 v8, v6, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v8, 0x2

    rem-int/2addr v6, v8

    if-eqz v6, :cond_12

    .line 1677
    :cond_12
    invoke-virtual {v1, v7}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v6

    .line 1678
    const-string v7, "9000"

    invoke-virtual {v6, v7}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_13

    .line 1714
    const/4 v7, 0x1

    goto :goto_13

    :cond_13
    const/4 v7, 0x0

    :goto_13
    packed-switch v7, :pswitch_data_c

    :goto_14
    :pswitch_c
    goto/16 :goto_1e

    .line 1674
    :pswitch_d
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v8, v7, 0x78

    const/4 v9, 0x1

    shl-int/2addr v8, v9

    xor-int/lit8 v15, v7, 0x78

    sub-int/2addr v8, v15

    sub-int/2addr v8, v9

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v9, 0x2

    rem-int/2addr v8, v9

    if-eqz v8, :cond_14

    .line 1714
    const/4 v8, 0x5

    goto :goto_15

    :cond_14
    move/from16 v8, v18

    :goto_15
    packed-switch v8, :pswitch_data_d

    .line 1678
    if-nez v10, :cond_15

    goto :goto_16

    .line 1674
    :pswitch_e
    const/4 v0, 0x0

    :try_start_2
    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1714
    :goto_16
    const/16 v8, 0x37

    goto :goto_17

    :cond_15
    const/16 v8, 0x57

    :goto_17
    packed-switch v8, :pswitch_data_e

    .line 1718
    and-int/lit8 v8, v7, 0x57

    or-int/lit8 v7, v7, 0x57

    add-int/2addr v8, v7

    rem-int/lit16 v7, v8, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v7, 0x2

    rem-int/2addr v8, v7

    if-eqz v8, :cond_16

    .line 1678
    :cond_16
    const-string v7, "62"

    invoke-virtual {v6, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v7

    if-nez v7, :cond_17

    .line 1714
    const/16 v7, 0x43

    goto :goto_18

    :cond_17
    const/16 v7, 0x46

    :goto_18
    packed-switch v7, :pswitch_data_f

    goto :goto_14

    .line 1674
    :pswitch_f
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v8, 0x13

    and-int/lit8 v9, v7, -0x14

    not-int v15, v7

    and-int/2addr v15, v8

    or-int/2addr v9, v15

    and-int/2addr v7, v8

    const/4 v8, 0x1

    shl-int/2addr v7, v8

    not-int v7, v7

    sub-int/2addr v9, v7

    sub-int/2addr v9, v8

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v7, 0x2

    rem-int/2addr v9, v7

    if-eqz v9, :cond_18

    .line 1714
    const/4 v7, 0x1

    goto :goto_19

    :cond_18
    const/4 v7, 0x0

    :goto_19
    packed-switch v7, :pswitch_data_10

    .line 1678
    const-string v7, "63"

    invoke-virtual {v6, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v6

    if-eqz v6, :cond_19

    goto :goto_1a

    .line 1674
    :pswitch_10
    const-string v0, "63"

    invoke-virtual {v6, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    const/4 v0, 0x0

    :try_start_3
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    :catchall_3
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1714
    :goto_1a
    const/4 v6, 0x1

    goto :goto_1b

    :cond_19
    const/4 v6, 0x0

    :goto_1b
    packed-switch v6, :pswitch_data_11

    .line 1681
    :pswitch_11
    sget-object v4, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v12, v4}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 1682
    nop

    .line 1705
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v6, v4, 0x31

    and-int/lit8 v7, v4, 0x31

    or-int/2addr v6, v7

    const/4 v7, 0x1

    shl-int/2addr v6, v7

    and-int/lit8 v8, v4, -0x32

    not-int v4, v4

    and-int/lit8 v4, v4, 0x31

    or-int/2addr v4, v8

    neg-int v4, v4

    or-int v8, v6, v4

    shl-int/2addr v8, v7

    xor-int/2addr v4, v6

    sub-int/2addr v8, v4

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v4, 0x2

    rem-int/2addr v8, v4

    if-eqz v8, :cond_1a

    .line 1714
    const/4 v4, 0x0

    goto :goto_1c

    :cond_1a
    const/4 v4, 0x1

    :goto_1c
    packed-switch v4, :pswitch_data_12

    .line 1718
    goto :goto_1d

    .line 1705
    :pswitch_12
    nop

    .line 1692
    :goto_1d
    const/4 v14, 0x1

    goto :goto_24

    .line 1679
    :goto_1e
    sget-object v6, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    invoke-virtual {v12, v6}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 1674
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v6, 0x2d

    not-int v8, v7

    or-int/lit8 v6, v6, 0x2d

    and-int/2addr v6, v8

    const/4 v8, 0x1

    shl-int/2addr v7, v8

    or-int v9, v6, v7

    shl-int/2addr v9, v8

    xor-int/2addr v6, v7

    sub-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v9, v6

    if-eqz v9, :cond_1b

    .line 1714
    const/4 v6, 0x0

    goto :goto_1f

    :cond_1b
    const/4 v6, 0x1

    :goto_1f
    packed-switch v6, :pswitch_data_13

    .line 1718
    goto :goto_23

    .line 1674
    :pswitch_13
    move-object/from16 v8, v21

    const/4 v6, 0x2

    const/4 v9, 0x0

    goto/16 :goto_c

    .line 1686
    :goto_20
    sget-object v4, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v12, v4}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 1687
    nop

    .line 1705
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v6, v4, 0x65

    not-int v7, v6

    or-int/lit8 v4, v4, 0x65

    and-int/2addr v4, v7

    const/4 v7, 0x1

    shl-int/2addr v6, v7

    add-int/2addr v4, v6

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v4, v6

    if-eqz v4, :cond_1c

    .line 1718
    :cond_1c
    const/4 v14, 0x1

    goto :goto_24

    .line 1687
    :goto_21
    nop

    .line 1718
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x48

    const/4 v7, 0x1

    sub-int/2addr v6, v7

    rem-int/lit16 v7, v6, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v7, 0x2

    rem-int/2addr v6, v7

    if-eqz v6, :cond_1d

    .line 1714
    move/from16 v6, v16

    goto :goto_22

    :cond_1d
    move/from16 v6, v20

    :goto_22
    packed-switch v6, :pswitch_data_14

    .line 1718
    :goto_23
    :pswitch_14
    move-object/from16 v8, v21

    const/4 v6, 0x2

    const/4 v9, 0x0

    goto/16 :goto_c

    .line 1692
    :goto_24
    invoke-virtual {v11, v12}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    .line 1693
    and-int/lit8 v4, v13, 0x1

    not-int v6, v4

    or-int/lit8 v7, v13, 0x1

    and-int/2addr v6, v7

    shl-int/lit8 v7, v4, 0x1

    neg-int v7, v7

    neg-int v7, v7

    not-int v7, v7

    sub-int v7, v6, v7

    const/4 v8, 0x1

    sub-int/2addr v7, v8

    if-ge v7, v3, :cond_1f

    .line 1694
    move-object v2, v5

    check-cast v2, Ljava/util/ArrayList;

    xor-int/lit8 v7, v13, 0x1

    or-int/2addr v4, v7

    shl-int/2addr v4, v8

    neg-int v6, v6

    not-int v6, v6

    sub-int/2addr v4, v6

    sub-int/2addr v4, v8

    invoke-virtual {v2, v4}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Ljava/lang/Object;)Ljava/util/ArrayList;

    move-result-object v2

    .line 1695
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 1718
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v7, v6, 0x2f

    and-int/lit8 v6, v6, 0x2f

    const/4 v8, 0x1

    shl-int/2addr v6, v8

    add-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v7, v6

    if-eqz v7, :cond_1e

    :cond_1e
    move-object v12, v4

    .line 1672
    :cond_1f
    or-int/lit8 v4, v13, 0x1

    const/4 v6, 0x1

    shl-int/2addr v4, v6

    xor-int/lit8 v6, v13, 0x1

    sub-int v13, v4, v6

    .line 1718
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v4, 0x9

    and-int/lit8 v7, v4, 0x9

    or-int/2addr v6, v7

    const/4 v8, 0x1

    shl-int/2addr v6, v8

    not-int v7, v7

    or-int/lit8 v4, v4, 0x9

    and-int/2addr v4, v7

    neg-int v4, v4

    not-int v4, v4

    sub-int/2addr v6, v4

    sub-int/2addr v6, v8

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v4, 0x2

    rem-int/2addr v6, v4

    if-nez v6, :cond_20

    :cond_20
    const/4 v6, 0x2

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x0

    goto/16 :goto_9

    .line 1714
    :goto_25
    const/4 v3, 0x0

    goto :goto_26

    :cond_21
    const/4 v3, 0x1

    :goto_26
    packed-switch v3, :pswitch_data_15

    .line 1700
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    invoke-virtual {v2, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_24

    goto :goto_28

    .line 1674
    :pswitch_15
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x79

    xor-int/lit8 v2, v2, 0x79

    or-int/2addr v2, v3

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v3, v2

    if-nez v3, :cond_22

    .line 1699
    :cond_22
    const/4 v2, 0x0

    invoke-virtual {v12, v2}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v3

    const-string v2, "emv.card.IssuerAuthResult"

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1718
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x66

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-eqz v2, :cond_23

    .line 1714
    const/4 v2, 0x1

    goto :goto_27

    :cond_23
    const/4 v2, 0x0

    :goto_27
    packed-switch v2, :pswitch_data_16

    .line 1718
    :pswitch_16
    const/4 v3, 0x0

    goto/16 :goto_37

    .line 1714
    :goto_28
    move v2, v3

    goto :goto_29

    :cond_24
    const/4 v2, 0x1

    :goto_29
    packed-switch v2, :pswitch_data_17

    goto/16 :goto_37

    .line 1705
    :pswitch_17
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x70

    const/4 v4, 0x1

    sub-int/2addr v2, v4

    rem-int/lit16 v4, v2, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v4, 0x2

    rem-int/2addr v2, v4

    if-eqz v2, :cond_25

    .line 1714
    const/16 v15, 0x52

    goto :goto_2a

    :cond_25
    nop

    :goto_2a
    const-string v2, "emv.card.IssuerScriptResponseList"

    packed-switch v15, :pswitch_data_18

    .line 1701
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    if-eqz v4, :cond_26

    goto :goto_2b

    :pswitch_18
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    const/4 v0, 0x0

    :try_start_4
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    .line 1705
    :catchall_4
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1714
    :goto_2b
    goto :goto_2c

    :cond_26
    const/16 v20, 0x42

    :goto_2c
    packed-switch v20, :pswitch_data_19

    goto :goto_2e

    .line 1709
    :pswitch_19
    invoke-static {v2, v11}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1705
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v2, 0x4f

    xor-int/lit8 v2, v2, 0x4f

    or-int/2addr v2, v4

    and-int v5, v4, v2

    or-int/2addr v2, v4

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v5, v2

    if-nez v5, :cond_27

    .line 1718
    :cond_27
    :goto_2d
    goto/16 :goto_37

    .line 1703
    :goto_2e
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/ArrayList;

    .line 1704
    invoke-virtual {v11}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v5

    .line 1705
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x7a

    const/4 v7, 0x1

    sub-int/2addr v6, v7

    rem-int/lit16 v7, v6, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v7, 0x2

    rem-int/2addr v6, v7

    if-eqz v6, :cond_28

    .line 1714
    const/4 v6, 0x1

    goto :goto_2f

    :cond_28
    move v6, v3

    :goto_2f
    packed-switch v6, :pswitch_data_1a

    .line 1705
    goto :goto_31

    .line 1718
    :goto_30
    :pswitch_1a
    nop

    .line 1704
    :goto_31
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_29

    .line 1714
    const/16 v6, 0x48

    goto :goto_32

    :cond_29
    move/from16 v6, v21

    :goto_32
    packed-switch v6, :pswitch_data_1b

    .line 1707
    invoke-static {v2, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_35

    .line 1718
    :pswitch_1b
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v6, 0x41

    or-int/lit8 v6, v6, 0x41

    add-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v7, v6

    if-eqz v7, :cond_2a

    .line 1714
    const/4 v6, 0x1

    goto :goto_33

    :cond_2a
    move v6, v3

    :goto_33
    packed-switch v6, :pswitch_data_1c

    .line 1718
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .line 1705
    invoke-virtual {v4, v0}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    goto :goto_34

    .line 1704
    :pswitch_1c
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/util/ArrayList;

    .line 1705
    invoke-virtual {v4, v6}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    goto :goto_30

    :goto_34
    const/4 v0, 0x0

    :try_start_5
    invoke-super {v0}, Ljava/lang/Object;->hashCode()I

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    .line 1718
    :catchall_5
    move-exception v0

    throw v0

    .line 1674
    :goto_35
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v2, 0x2f

    and-int/lit8 v5, v2, 0x2f

    or-int/2addr v4, v5

    const/4 v5, 0x1

    shl-int/2addr v4, v5

    and-int/lit8 v6, v2, -0x30

    not-int v2, v2

    and-int/lit8 v2, v2, 0x2f

    or-int/2addr v2, v6

    neg-int v2, v2

    xor-int v6, v4, v2

    and-int/2addr v2, v4

    shl-int/2addr v2, v5

    add-int/2addr v6, v2

    rem-int/lit16 v2, v6, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v6, v2

    if-nez v6, :cond_2b

    .line 1714
    const/16 v4, 0x21

    goto :goto_36

    :cond_2b
    const/16 v4, 0xa

    :goto_36
    packed-switch v4, :pswitch_data_1d

    .line 1718
    goto/16 :goto_2d

    .line 1674
    :pswitch_1d
    nop

    .line 1712
    :goto_37
    if-eqz v14, :cond_2c

    .line 1714
    const/4 v2, 0x1

    goto :goto_38

    :cond_2c
    move v2, v3

    :goto_38
    packed-switch v2, :pswitch_data_1e

    .line 1718
    const/16 v0, 0x5a

    goto/16 :goto_3f

    .line 1705
    :pswitch_1e
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v2, -0x6e

    not-int v5, v2

    and-int/lit8 v5, v5, 0x6d

    or-int/2addr v4, v5

    and-int/lit8 v2, v2, 0x6d

    const/4 v5, 0x1

    shl-int/2addr v2, v5

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v2, 0x2

    rem-int/2addr v4, v2

    if-eqz v4, :cond_2d

    .line 1713
    :cond_2d
    const-string v2, "KV.ISSUER_SCRIPT_AFTER"

    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2e

    .line 1714
    goto :goto_39

    :cond_2e
    const/16 v16, 0x4b

    :goto_39
    packed-switch v16, :pswitch_data_1f

    goto :goto_3c

    .line 1674
    :pswitch_1f
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x1e

    const/4 v2, 0x1

    sub-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v0, v2

    if-nez v0, :cond_2f

    .line 1714
    move/from16 v18, v19

    goto :goto_3a

    :cond_2f
    nop

    :goto_3a
    const-string v0, "True"

    const-string v2, "LV.SCRIPT_APPLIED_ERROR"

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    packed-switch v18, :pswitch_data_20

    goto :goto_3b

    :pswitch_20
    const/4 v0, 0x0

    :try_start_6
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    .line 1674
    :catchall_6
    move-exception v0

    move-object v2, v0

    throw v2

    :goto_3b
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x1b

    or-int/lit8 v0, v0, 0x1b

    neg-int v0, v0

    neg-int v0, v0

    or-int v4, v2, v0

    const/4 v5, 0x1

    shl-int/2addr v4, v5

    xor-int/2addr v0, v2

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v0, 0x2

    rem-int/2addr v4, v0

    if-nez v4, :cond_30

    .line 1718
    :cond_30
    nop

    .line 1716
    :goto_3c
    const/16 v0, -0x5b

    .line 1674
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v2, 0x31

    and-int/lit8 v5, v2, 0x31

    or-int/2addr v4, v5

    const/4 v6, 0x1

    shl-int/2addr v4, v6

    not-int v5, v5

    or-int/lit8 v2, v2, 0x31

    and-int/2addr v2, v5

    neg-int v2, v2

    xor-int v5, v4, v2

    and-int/2addr v2, v4

    shl-int/2addr v2, v6

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v5, v2

    if-nez v5, :cond_31

    .line 1714
    const/4 v7, 0x1

    goto :goto_3d

    :cond_31
    move v7, v3

    :goto_3d
    packed-switch v7, :pswitch_data_21

    .line 1674
    goto :goto_3e

    .line 1718
    :pswitch_21
    return v0

    .line 1674
    :goto_3e
    const/4 v0, 0x0

    :try_start_7
    throw v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    :catchall_7
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1705
    :goto_3f
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, -0x30

    not-int v4, v2

    and-int v4, v22, v4

    or-int/2addr v3, v4

    and-int/lit8 v2, v2, 0x2f

    const/4 v4, 0x1

    shl-int/2addr v2, v4

    neg-int v2, v2

    neg-int v2, v2

    or-int v5, v3, v2

    shl-int/lit8 v4, v5, 0x1

    xor-int/2addr v2, v3

    sub-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v2, 0x2

    rem-int/2addr v4, v2

    .line 1718
    return v0

    nop

    :pswitch_data_0
    .packed-switch 0xa
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x19
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x10
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x60
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x2c
        :pswitch_9
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1
        :pswitch_d
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x5
        :pswitch_e
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x57
        :pswitch_11
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x43
        :pswitch_f
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1
        :pswitch_10
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_c
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_12
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x40
        :pswitch_14
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x0
        :pswitch_15
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x1
        :pswitch_16
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x0
        :pswitch_17
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x52
        :pswitch_18
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x42
        :pswitch_19
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x0
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x48
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x0
        :pswitch_1c
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x21
        :pswitch_1d
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x1
        :pswitch_1e
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x10
        :pswitch_1f
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x9
        :pswitch_20
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x0
        :pswitch_21
    .end packed-switch
.end method

.method private operationBUILD_DOL(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 10

    .line 1748
    nop

    .line 1726
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x77

    not-int v1, v0

    or-int/lit8 v2, p1, 0x77

    and-int/2addr v1, v2

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    and-int v3, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    const/4 v1, 0x0

    if-nez v3, :cond_0

    .line 1723
    move v3, v1

    goto :goto_0

    :cond_0
    move v3, v2

    :goto_0
    const/16 v4, 0x5a

    const/16 v5, 0x1c

    const/4 v6, 0x0

    const/4 v7, 0x5

    const/4 v8, -0x1

    packed-switch v3, :pswitch_data_0

    .line 1722
    nop

    .line 1723
    iget v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    const/4 v9, 0x4

    if-ne v3, v9, :cond_2

    goto :goto_2

    .line 1722
    :pswitch_0
    nop

    .line 1723
    iget v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    const/4 v9, 0x3

    if-ne v3, v9, :cond_1

    move v3, v2

    goto :goto_1

    :cond_1
    move v3, v1

    :goto_1
    packed-switch v3, :pswitch_data_1

    :pswitch_1
    goto :goto_4

    :goto_2
    move v3, v1

    goto :goto_3

    :cond_2
    move v3, v2

    :goto_3
    packed-switch v3, :pswitch_data_2

    goto/16 :goto_12

    .line 1728
    :goto_4
    iget v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    if-ne v3, v7, :cond_3

    .line 1723
    move v3, v1

    goto :goto_5

    :cond_3
    move v3, v2

    :goto_5
    packed-switch v3, :pswitch_data_3

    .line 1737
    iget-boolean v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    if-eqz v3, :cond_7

    goto :goto_a

    .line 1723
    :pswitch_2
    add-int/lit8 v0, v0, 0x5e

    and-int/lit8 p1, v0, -0x1

    or-int/2addr v0, v8

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_4

    .line 1730
    :cond_4
    nop

    .line 1731
    const/16 p1, 0x8d

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    if-eqz v0, :cond_5

    .line 1723
    move v0, v1

    goto :goto_6

    :cond_5
    move v0, v2

    :goto_6
    packed-switch v0, :pswitch_data_4

    goto :goto_9

    .line 1748
    :pswitch_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v3, v0, 0x1c

    shl-int/2addr v3, v2

    xor-int/2addr v0, v5

    sub-int/2addr v3, v0

    or-int/lit8 v0, v3, -0x1

    shl-int/2addr v0, v2

    xor-int/2addr v3, v8

    sub-int/2addr v0, v3

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_6

    .line 1723
    const/16 v0, 0x24

    goto :goto_7

    :cond_6
    const/16 v0, 0x25

    :goto_7
    packed-switch v0, :pswitch_data_5

    .line 1732
    goto :goto_8

    :pswitch_4
    const/16 p1, 0x6378

    :goto_8
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    check-cast p1, [B

    move-object v6, p1

    .line 1748
    nop

    .line 1734
    :goto_9
    const-string p1, "LV.CDOL2_FROM_RR"

    invoke-virtual {p0, v6, v1, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BZLjava/lang/String;)B

    move-result v4

    .line 1726
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x4f

    and-int/lit8 p1, p1, 0x4f

    shl-int/2addr p1, v2

    neg-int p1, p1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_13

    goto/16 :goto_19

    .line 1723
    :goto_a
    move v3, v2

    goto :goto_b

    :cond_7
    move v3, v1

    :goto_b
    packed-switch v3, :pswitch_data_6

    .line 1732
    xor-int/lit8 p1, v0, 0x5b

    and-int/lit8 v0, v0, 0x5b

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, p1, v0

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_d

    goto/16 :goto_10

    .line 1740
    :pswitch_5
    iget-boolean v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminalData:Z

    if-eqz v0, :cond_8

    .line 1723
    const/16 v0, 0x27

    goto :goto_c

    :cond_8
    const/16 v0, 0xf

    :goto_c
    packed-switch v0, :pswitch_data_7

    move v4, v8

    goto/16 :goto_1a

    .line 1726
    :pswitch_6
    add-int/lit8 p1, p1, 0x38

    or-int/lit8 v0, p1, -0x1

    shl-int/2addr v0, v2

    xor-int/2addr p1, v8

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_9

    .line 1741
    :cond_9
    const/16 p1, -0x60c8

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    .line 1742
    const-string v0, "LV.DOL_LIST"

    invoke-virtual {p0, p1, v2, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BZLjava/lang/String;)B

    move-result p1

    .line 1743
    if-ne p1, v4, :cond_a

    .line 1723
    move v0, v1

    goto :goto_d

    :cond_a
    move v0, v2

    :goto_d
    packed-switch v0, :pswitch_data_8

    goto :goto_f

    :pswitch_7
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v0, 0x3f

    and-int/lit8 v0, v0, 0x3f

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    or-int v4, v3, v0

    shl-int/2addr v4, v2

    xor-int/2addr v0, v3

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_b

    .line 1744
    :cond_b
    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    const-string v3, "emv.duplicate"

    invoke-static {v3, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1732
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v0, 0x5f

    shl-int/2addr v3, v2

    and-int/lit8 v4, v0, -0x60

    not-int v0, v0

    and-int/lit8 v0, v0, 0x5f

    or-int/2addr v0, v4

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_c

    .line 1723
    move v0, v2

    goto :goto_e

    :cond_c
    move v0, v1

    :goto_e
    packed-switch v0, :pswitch_data_9

    .line 1732
    goto :goto_f

    .line 1748
    :pswitch_8
    nop

    :goto_f
    move v4, p1

    goto/16 :goto_1a

    .line 1739
    :cond_d
    :goto_10
    nop

    .line 1723
    add-int/lit8 p1, p1, 0x52

    sub-int/2addr p1, v2

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_e

    const/16 p1, 0x3d

    goto :goto_11

    :cond_e
    const/16 p1, 0x55

    :goto_11
    packed-switch p1, :pswitch_data_a

    goto/16 :goto_1a

    .line 1732
    :goto_12
    :pswitch_9
    add-int/lit8 p1, p1, 0x45

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_f

    .line 1724
    :cond_f
    nop

    .line 1725
    const/16 p1, 0x8c

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    const/16 v3, 0x2d

    if-eqz v0, :cond_10

    .line 1723
    move v0, v3

    goto :goto_13

    :cond_10
    const/16 v0, 0x3e

    :goto_13
    packed-switch v0, :pswitch_data_b

    goto :goto_18

    .line 1732
    :pswitch_a
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v0, 0x2d

    and-int/2addr v0, v3

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, v4, v0

    and-int/2addr v0, v4

    shl-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_11

    .line 1723
    const/16 v0, 0x13

    goto :goto_14

    :cond_11
    const/16 v0, 0x2e

    :goto_14
    packed-switch v0, :pswitch_data_c

    .line 1726
    const/16 p1, 0x2c2d

    :goto_15
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    check-cast p1, [B

    move-object v6, p1

    goto :goto_16

    :pswitch_b
    goto :goto_15

    .line 1732
    :goto_16
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, -0x6

    not-int v3, p1

    and-int/2addr v3, v7

    or-int/2addr v0, v3

    and-int/2addr p1, v7

    shl-int/2addr p1, v2

    neg-int p1, p1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_12

    .line 1723
    move p1, v1

    goto :goto_17

    :cond_12
    move p1, v2

    :goto_17
    packed-switch p1, :pswitch_data_d

    .line 1732
    goto :goto_18

    .line 1748
    :pswitch_c
    nop

    .line 1728
    :goto_18
    const-string p1, "LV.CDOL1_FROM_RR"

    invoke-virtual {p0, v6, v1, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BZLjava/lang/String;)B

    move-result v4

    .line 1723
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v0, 0x5d

    and-int/lit8 v3, p1, -0x5e

    not-int v6, p1

    and-int/2addr v6, v0

    or-int/2addr v3, v6

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    not-int p1, p1

    sub-int/2addr v3, p1

    sub-int/2addr v3, v2

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_13

    .line 1748
    :cond_13
    :goto_19
    :pswitch_d
    nop

    :goto_1a
    nop

    .line 1726
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v0, p1, 0x19

    shl-int/2addr v0, v2

    xor-int/lit8 p1, p1, 0x19

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_14

    .line 1723
    const/4 v5, 0x6

    goto :goto_1b

    :cond_14
    nop

    :goto_1b
    packed-switch v5, :pswitch_data_e

    .line 1748
    return v4

    .line 1726
    :pswitch_e
    const/16 p1, 0x63

    :try_start_0
    div-int/2addr p1, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return v4

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x24
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x27
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x0
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x55
        :pswitch_d
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x2d
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x2e
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1
        :pswitch_c
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x6
        :pswitch_e
    .end packed-switch
.end method

.method private operationCARD_DETECTED(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 2

    .line 1753
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x34

    or-int/lit8 p1, p1, 0x34

    add-int/2addr v0, p1

    add-int/lit8 v0, v0, 0x0

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 1752
    :cond_0
    const/4 v0, -0x1

    iput v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 1753
    const/16 v0, 0x5a

    or-int/lit8 v1, p1, 0x5

    shl-int/lit8 v1, v1, 0x1

    xor-int/lit8 p1, p1, 0x5

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return v0
.end method

.method private operationCHECK_GAC2_IS_NEEDED(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 9

    .line 1765
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x15

    or-int/lit8 p1, p1, 0x15

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 1757
    :cond_0
    const/16 p1, -0x5b

    .line 1758
    const-string v0, "KV.AUTH_STATUS"

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getCardData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    .line 1759
    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_1

    .line 1765
    move v3, v2

    goto :goto_0

    :cond_1
    move v3, v1

    :goto_0
    const/4 v4, -0x1

    const/16 v5, 0x2d

    packed-switch v3, :pswitch_data_0

    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v6, 0x19

    xor-int/lit8 v7, v3, 0x19

    and-int/lit8 v8, v3, 0x19

    or-int/2addr v7, v8

    shl-int/2addr v7, v2

    and-int/lit8 v8, v3, -0x1a

    not-int v3, v3

    and-int/2addr v3, v6

    or-int/2addr v3, v8

    neg-int v3, v3

    not-int v3, v3

    sub-int/2addr v7, v3

    sub-int/2addr v7, v2

    rem-int/lit16 v3, v7, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_2

    move v3, v5

    goto :goto_1

    :cond_2
    const/16 v3, 0x2c

    :goto_1
    const-string v6, "80"

    packed-switch v3, :pswitch_data_1

    move-object v3, v0

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v3, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    goto :goto_3

    .line 1759
    :pswitch_0
    move-object v3, v0

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v3, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 1765
    const/16 v3, 0x1a

    goto :goto_2

    :cond_3
    const/16 v3, 0x46

    :goto_2
    packed-switch v3, :pswitch_data_2

    :pswitch_1
    goto :goto_5

    :goto_3
    const/16 v6, 0x5c

    :try_start_0
    div-int/2addr v6, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-eqz v3, :cond_4

    const/16 v3, 0x49

    goto :goto_4

    :cond_4
    const/16 v3, 0x18

    :goto_4
    packed-switch v3, :pswitch_data_3

    goto :goto_6

    .line 1761
    :goto_5
    const/16 p1, 0x5a

    .line 1765
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v3, 0x77

    and-int/lit8 v4, v0, -0x78

    not-int v5, v0

    and-int/2addr v5, v3

    or-int/2addr v4, v5

    and-int/2addr v0, v3

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, v4, v0

    and-int/2addr v0, v4

    shl-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_5

    move v0, v1

    goto :goto_8

    :cond_5
    move v0, v2

    goto :goto_8

    .line 1762
    :goto_6
    :pswitch_2
    if-nez v0, :cond_6

    .line 1765
    move v0, v1

    goto :goto_7

    :cond_6
    move v0, v2

    :goto_7
    packed-switch v0, :pswitch_data_4

    :goto_8
    goto :goto_9

    :pswitch_3
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x61

    sub-int/2addr p1, v2

    sub-int/2addr p1, v1

    sub-int/2addr p1, v2

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_7

    .line 1763
    :cond_7
    nop

    .line 1765
    add-int/lit8 v0, v0, 0x1a

    or-int/lit8 p1, v0, -0x1

    shl-int/2addr p1, v2

    xor-int/2addr v0, v4

    sub-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_8

    const/16 v5, 0xb

    :cond_8
    packed-switch v5, :pswitch_data_5

    :pswitch_4
    move p1, v4

    :goto_9
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v0, 0x61

    xor-int/lit8 v0, v0, 0x61

    or-int/2addr v0, v3

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_9

    goto :goto_a

    :cond_9
    move v2, v1

    :goto_a
    packed-switch v2, :pswitch_data_6

    return p1

    :pswitch_5
    const/16 v0, 0x10

    :try_start_1
    div-int/2addr v0, v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return p1

    :catchall_0
    move-exception p1

    throw p1

    :catchall_1
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x2c
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x46
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x49
        :pswitch_1
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0xb
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch
.end method

.method private operationCHECK_MANDATORY_TAGS(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 7

    .line 2251
    nop

    .line 2228
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v0, p1, 0x32

    const/4 v1, 0x1

    shl-int/2addr v0, v1

    xor-int/lit8 p1, p1, 0x32

    sub-int/2addr v0, p1

    and-int/lit8 p1, v0, -0x1

    or-int/lit8 v0, v0, -0x1

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    const/4 v0, 0x0

    if-eqz p1, :cond_0

    .line 2226
    move p1, v0

    goto :goto_0

    :cond_0
    move p1, v1

    :goto_0
    const-string v2, ","

    const-string v3, "KV.TTP_MANDATORY_TAGS"

    packed-switch p1, :pswitch_data_0

    .line 2225
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    invoke-virtual {p1, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/String;

    invoke-virtual {p1, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    .line 2226
    array-length v2, p1

    goto :goto_1

    .line 2225
    :pswitch_0
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    invoke-virtual {p1, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/String;

    invoke-virtual {p1, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    .line 2226
    array-length v2, p1

    .line 2251
    :goto_1
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v4, v3, 0x1b

    shl-int/2addr v4, v1

    xor-int/lit8 v3, v3, 0x1b

    sub-int/2addr v4, v3

    rem-int/lit16 v3, v4, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_1

    .line 2226
    const/16 v3, 0x20

    goto :goto_2

    :cond_1
    const/16 v3, 0x4e

    :goto_2
    packed-switch v3, :pswitch_data_1

    .line 2251
    :pswitch_1
    nop

    .line 2226
    move v3, v0

    :goto_3
    if-ge v3, v2, :cond_2

    const/16 v4, 0xc

    goto :goto_4

    :cond_2
    const/16 v4, 0x25

    :goto_4
    packed-switch v4, :pswitch_data_2

    .line 2251
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v5, v4, 0x72

    and-int/lit8 v4, v4, 0x72

    shl-int/2addr v4, v1

    add-int/2addr v5, v4

    and-int/lit8 v4, v5, -0x1

    or-int/lit8 v5, v5, -0x1

    add-int/2addr v4, v5

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_3

    goto/16 :goto_5

    .line 2237
    :pswitch_2
    const/16 p1, -0x609a

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "paymentsystem.tx.$.TTQ"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 11401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2239
    const/16 p1, -0x60fe

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.Amount"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 12401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2241
    const/16 p1, -0x60fc

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.AmountCashback"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 13401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2243
    const/16 p1, -0x60e6

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.CountryCode"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 14401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2245
    const/16 p1, 0x5f2a

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.CurrencyCode"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 15401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2247
    const/16 p1, 0x9a

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.Date"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 16401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2249
    const/16 p1, 0x9c

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    const-string v0, "emv.poi.TransactionType"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 17401
    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v0, p1, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2251
    const/16 p1, 0x5a

    .line 2228
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x29

    shl-int/lit8 v1, v2, 0x1

    xor-int/lit8 v0, v0, 0x29

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    .line 2251
    return p1

    .line 2226
    :goto_5
    move v4, v0

    goto :goto_6

    :cond_3
    move v4, v1

    :goto_6
    packed-switch v4, :pswitch_data_3

    aget-object v4, p1, v3

    .line 2227
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    .line 2228
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    if-nez v5, :cond_4

    goto :goto_7

    .line 2251
    :pswitch_3
    aget-object p1, p1, v3

    .line 2227
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    .line 2228
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2251
    :catchall_0
    move-exception p1

    throw p1

    .line 2226
    :goto_7
    move v5, v1

    goto :goto_8

    :cond_4
    move v5, v0

    :goto_8
    packed-switch v5, :pswitch_data_4

    goto :goto_9

    :pswitch_4
    xor-int/lit8 v4, v3, -0x68

    and-int/lit8 v5, v3, -0x68

    or-int/2addr v4, v5

    shl-int/2addr v4, v1

    not-int v5, v5

    or-int/lit8 v3, v3, -0x68

    and-int/2addr v3, v5

    neg-int v3, v3

    or-int v5, v4, v3

    shl-int/2addr v5, v1

    xor-int/2addr v3, v4

    sub-int/2addr v5, v3

    xor-int/lit8 v3, v5, 0x69

    and-int/lit8 v4, v5, 0x69

    or-int/2addr v4, v3

    shl-int/2addr v4, v1

    sub-int v3, v4, v3

    .line 2228
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x4b

    xor-int/lit8 v4, v4, 0x4b

    or-int/2addr v4, v5

    neg-int v4, v4

    neg-int v4, v4

    and-int v6, v5, v4

    or-int/2addr v4, v5

    add-int/2addr v6, v4

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_5

    .line 2251
    :cond_5
    goto/16 :goto_3

    .line 2229
    :goto_9
    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    const-string v0, "MISSINGTAG: "

    invoke-virtual {v0, p1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2230
    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    const-string v0, "MISSINGTAG"

    invoke-virtual {v0, p1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2231
    const/16 p1, -0x5b

    .line 2226
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x11

    sub-int/2addr v0, v1

    and-int/lit8 v1, v0, -0x1

    or-int/lit8 v0, v0, -0x1

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    .line 2251
    return p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x20
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x25
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch
.end method

.method private operationCHECK_SCRIPT_INPUT(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 4

    .line 1778
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, v0, 0x2e

    and-int/lit8 v0, v0, 0x2e

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    add-int/2addr v1, v0

    and-int/lit8 v0, v1, -0x1

    const/4 v3, -0x1

    or-int/2addr v1, v3

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    .line 1770
    const/16 v0, 0x42

    goto :goto_0

    :cond_0
    const/16 v0, 0x25

    :goto_0
    packed-switch v0, :pswitch_data_0

    .line 1769
    nop

    .line 1770
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    goto/16 :goto_c

    .line 1769
    :pswitch_0
    nop

    .line 1770
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    const/16 v0, 0x52

    goto :goto_1

    :cond_1
    const/16 v0, 0xa

    :goto_1
    packed-switch v0, :pswitch_data_1

    :goto_2
    :pswitch_1
    goto/16 :goto_b

    .line 1771
    :pswitch_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration(Ljava/lang/String;)B

    move-result v3

    .line 1772
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v0

    const-string v1, "KV.NEXT_AUTH_STATUS"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 1770
    const/16 v0, 0x1f

    goto :goto_3

    :cond_2
    const/16 v0, 0x40

    :goto_3
    packed-switch v0, :pswitch_data_2

    goto :goto_2

    :pswitch_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x17

    or-int/lit8 v0, v0, 0x17

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_3

    .line 1773
    :cond_3
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object p1

    const-string v0, "KV.AUTH_RESPONSE_CODE"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result p1

    if-eqz p1, :cond_4

    .line 1770
    const/16 p1, 0x1a

    goto :goto_4

    :cond_4
    const/16 p1, 0x2c

    :goto_4
    packed-switch p1, :pswitch_data_3

    .line 1778
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x57

    xor-int/lit8 p1, p1, 0x57

    or-int/2addr p1, v0

    neg-int p1, p1

    neg-int p1, p1

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_5

    .line 1770
    const/16 p1, 0x3c

    goto :goto_5

    :cond_5
    const/16 p1, 0x1e

    :goto_5
    packed-switch p1, :pswitch_data_4

    .line 1778
    const/16 p1, 0x69

    if-ne v3, p1, :cond_7

    goto :goto_8

    .line 1773
    :pswitch_4
    const/16 p1, 0x5a

    if-ne v3, p1, :cond_6

    .line 1770
    goto :goto_6

    :cond_6
    const/4 v2, 0x0

    :goto_6
    packed-switch v2, :pswitch_data_5

    :goto_7
    goto :goto_a

    :goto_8
    const/16 p1, 0x13

    goto :goto_9

    :cond_7
    const/16 p1, 0x31

    :goto_9
    packed-switch p1, :pswitch_data_6

    goto :goto_7

    .line 1775
    :goto_a
    const-string p1, "LV.QUICK_CHIP_DONE"

    const-string v0, "True"

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1770
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x65

    or-int/lit8 p1, p1, 0x65

    neg-int p1, p1

    neg-int p1, p1

    and-int v1, v0, p1

    or-int/2addr p1, v0

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_8

    .line 1778
    :cond_8
    nop

    :goto_b
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x5

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    return v3

    .line 1770
    :goto_c
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1778
    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x25
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x52
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1f
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x2c
        :pswitch_1
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1e
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x31
        :pswitch_1
    .end packed-switch
.end method

.method private operationCLOSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 1

    .line 1782
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v0, p1, 0x33

    shl-int/lit8 v0, v0, 0x1

    xor-int/lit8 p1, p1, 0x33

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    const/16 p1, 0x41

    goto :goto_0

    :cond_0
    const/16 p1, 0x11

    :goto_0
    packed-switch p1, :pswitch_data_0

    const/16 p1, 0x5a

    goto :goto_1

    :pswitch_0
    const/16 p1, 0x7c

    :goto_1
    return p1

    nop

    :pswitch_data_0
    .packed-switch 0x41
        :pswitch_0
    .end packed-switch
.end method

.method private operationCLOSE_RESTART(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 6

    .line 1793
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x45

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    const/4 v0, 0x0

    const/4 v1, 0x1

    if-eqz p1, :cond_0

    .line 1788
    move p1, v1

    goto :goto_0

    :cond_0
    move p1, v0

    :goto_0
    const-string v2, "GPOSW6986"

    const-string v3, "emv.tx.cal.ErrorCode"

    packed-switch p1, :pswitch_data_0

    .line 1786
    nop

    .line 1787
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/String;

    .line 1788
    invoke-virtual {p1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    goto/16 :goto_8

    .line 1786
    :pswitch_0
    nop

    .line 1787
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/String;

    .line 1788
    invoke-virtual {p1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    move v2, v1

    goto :goto_1

    :cond_1
    move v2, v0

    :goto_1
    const/4 v3, -0x1

    packed-switch v2, :pswitch_data_1

    goto :goto_2

    .line 1789
    :pswitch_1
    const/16 p1, 0x5a

    .line 1788
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, -0x68

    not-int v4, v0

    and-int/lit8 v4, v4, 0x67

    or-int/2addr v2, v4

    and-int/lit8 v0, v0, 0x67

    shl-int/2addr v0, v1

    xor-int v4, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v1

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_2

    .line 1793
    :cond_2
    goto :goto_7

    .line 1790
    :goto_2
    const-string v2, "GPOSW6984"

    invoke-virtual {p1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_3

    .line 1788
    move p1, v1

    goto :goto_3

    :cond_3
    move p1, v0

    :goto_3
    packed-switch p1, :pswitch_data_2

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, p1, 0x17

    or-int/lit8 p1, p1, 0x17

    or-int v4, v2, p1

    shl-int/2addr v4, v1

    xor-int/2addr p1, v2

    sub-int/2addr v4, p1

    rem-int/lit16 p1, v4, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_4

    goto :goto_4

    :pswitch_2
    move p1, v3

    goto :goto_7

    .line 1791
    :cond_4
    :goto_4
    const/16 v2, -0x5b

    .line 1788
    xor-int/lit8 v4, p1, 0x53

    and-int/lit8 v5, p1, 0x53

    or-int/2addr v4, v5

    shl-int/2addr v4, v1

    and-int/lit8 v5, p1, -0x54

    not-int p1, p1

    and-int/lit8 p1, p1, 0x53

    or-int/2addr p1, v5

    neg-int p1, p1

    or-int v5, v4, p1

    shl-int/2addr v5, v1

    xor-int/2addr p1, v4

    sub-int/2addr v5, p1

    rem-int/lit16 p1, v5, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_5

    goto :goto_5

    :cond_5
    move v0, v1

    :goto_5
    packed-switch v0, :pswitch_data_3

    goto :goto_6

    .line 1793
    :pswitch_3
    nop

    :goto_6
    move p1, v2

    :goto_7
    nop

    .line 1788
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x44

    or-int/lit8 v0, v0, 0x44

    add-int/2addr v2, v0

    xor-int/lit8 v0, v2, -0x1

    and-int/2addr v2, v3

    shl-int/lit8 v1, v2, 0x1

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    .line 1793
    return p1

    .line 1788
    :goto_8
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 1793
    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch
.end method

.method private operationDECLINE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 7

    .line 2509
    nop

    .line 2502
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v0, "DECLINED"

    iput-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2503
    const/16 p1, 0xaa

    const/4 v0, 0x1

    new-array v1, v0, [B

    const/16 v2, 0x10

    const/4 v3, 0x0

    aput-byte v2, v1, v3

    invoke-static {p1, v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 2504
    const-string p1, "emv.tx.cal.ErrorCode"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    .line 2505
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v4, "KV."

    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    if-eqz p1, :cond_0

    .line 2507
    move v4, v3

    goto :goto_0

    :cond_0
    move v4, v0

    :goto_0
    packed-switch v4, :pswitch_data_0

    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v5, v4, 0x7c

    sub-int/2addr v5, v0

    rem-int/lit16 v6, v5, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_2

    goto :goto_3

    .line 2505
    :pswitch_0
    nop

    .line 2507
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, p1, 0x33

    and-int/lit8 p1, p1, 0x33

    shl-int/2addr p1, v0

    add-int/2addr v4, p1

    rem-int/lit16 p1, v4, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_1

    move p1, v0

    goto :goto_1

    :cond_1
    move p1, v3

    :goto_1
    packed-switch p1, :pswitch_data_1

    goto :goto_2

    .line 2509
    :pswitch_1
    nop

    .line 2505
    :goto_2
    const-string p1, ""

    goto :goto_4

    :cond_2
    :goto_3
    check-cast p1, Ljava/lang/String;

    .line 2507
    and-int/lit8 v5, v4, 0x37

    not-int v6, v5

    or-int/lit8 v4, v4, 0x37

    and-int/2addr v4, v6

    shl-int/2addr v5, v0

    neg-int v5, v5

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v4, v5

    sub-int/2addr v4, v0

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_3

    .line 2509
    :cond_3
    nop

    .line 2505
    :goto_4
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    .line 2506
    if-eqz p1, :cond_4

    .line 2507
    move v1, v3

    goto :goto_5

    :cond_4
    move v1, v0

    :goto_5
    const/4 v2, 0x0

    packed-switch v1, :pswitch_data_2

    .line 2509
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v4, v1, 0x70

    shl-int/2addr v4, v0

    xor-int/lit8 v1, v1, 0x70

    sub-int/2addr v4, v1

    xor-int/lit8 v1, v4, -0x1

    and-int/lit8 v4, v4, -0x1

    shl-int/2addr v4, v0

    add-int/2addr v1, v4

    rem-int/lit16 v4, v1, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_5

    .line 2507
    const/16 v1, 0x56

    goto :goto_6

    :cond_5
    const/4 v1, 0x7

    :goto_6
    packed-switch v1, :pswitch_data_3

    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    check-cast p1, Ljava/lang/String;

    iput-object p1, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    goto :goto_7

    :pswitch_2
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    check-cast p1, Ljava/lang/String;

    iput-object p1, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    :try_start_0
    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2509
    :catchall_0
    move-exception p1

    throw p1

    :goto_7
    nop

    :pswitch_3
    const/16 p1, 0x5a

    .line 2507
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v1, 0x4d

    xor-int/lit8 v1, v1, 0x4d

    or-int/2addr v1, v4

    or-int v5, v4, v1

    shl-int/2addr v5, v0

    xor-int/2addr v1, v4

    sub-int/2addr v5, v1

    rem-int/lit16 v1, v5, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_6

    move v0, v3

    :cond_6
    packed-switch v0, :pswitch_data_4

    goto :goto_8

    .line 2509
    :pswitch_4
    return p1

    .line 2507
    :goto_8
    :try_start_1
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x56
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch
.end method

.method private operationDETERMINE_FINAL_OUTCOME(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 26
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    move-object/from16 v1, p0

    .line 2022
    nop

    .line 1833
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x12

    and-int/lit8 v0, v0, 0x12

    const/4 v3, 0x1

    shl-int/2addr v0, v3

    add-int/2addr v2, v0

    or-int/lit8 v0, v2, -0x1

    shl-int/2addr v0, v3

    xor-int/lit8 v2, v2, -0x1

    sub-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v2, 0x2

    rem-int/2addr v0, v2

    const/4 v5, 0x0

    if-eqz v0, :cond_0

    .line 1797
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    const/16 v6, 0x4d

    :try_start_0
    div-int/2addr v6, v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const-string v6, "TERMINATED"

    if-ne v0, v6, :cond_2

    goto :goto_1

    .line 1833
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1797
    :cond_0
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    const-string v6, "TERMINATED"

    if-ne v0, v6, :cond_1

    .line 1911
    const/16 v0, 0x3a

    goto :goto_0

    :cond_1
    const/16 v0, 0x4d

    :goto_0
    packed-switch v0, :pswitch_data_0

    goto :goto_2

    .line 1798
    :goto_1
    :pswitch_0
    const/16 v0, -0x5b

    return v0

    .line 1800
    :cond_2
    :goto_2
    nop

    .line 1803
    const-string v0, "emv.card.DuplicateList"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    if-nez v0, :cond_64

    .line 1811
    const-string v0, "paymentsystem.card.FormFactorIndicator"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 1812
    const/4 v6, 0x3

    const/4 v7, 0x4

    if-eqz v0, :cond_5

    .line 2022
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v8, v8, 0x10

    xor-int/lit8 v9, v8, -0x1

    and-int/lit8 v8, v8, -0x1

    shl-int/2addr v8, v3

    add-int/2addr v9, v8

    rem-int/lit16 v8, v9, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v2

    if-eqz v9, :cond_3

    .line 1812
    :cond_3
    array-length v8, v0

    if-ne v8, v7, :cond_4

    .line 1911
    move v8, v5

    goto :goto_3

    :cond_4
    move v8, v3

    :goto_3
    packed-switch v8, :pswitch_data_1

    .line 1813
    aget-byte v8, v0, v6

    and-int/lit8 v8, v8, -0x10

    int-to-byte v8, v8

    aput-byte v8, v0, v6

    .line 1817
    and-int/lit16 v9, v8, -0x81

    not-int v10, v8

    and-int/lit16 v10, v10, 0x80

    or-int/2addr v9, v10

    and-int/lit16 v8, v8, 0x80

    xor-int v10, v9, v8

    and-int/2addr v8, v9

    or-int/2addr v8, v10

    int-to-byte v8, v8

    aput-byte v8, v0, v6

    .line 1819
    const/16 v8, -0x6092

    invoke-static {v8, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 2022
    nop

    .line 1822
    :cond_5
    :pswitch_1
    const-string v0, "emv.poi.POSEntryMode"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    aget-byte v0, v0, v5

    const/4 v8, 0x7

    if-ne v0, v8, :cond_6

    .line 1911
    move v0, v3

    goto :goto_4

    :cond_6
    move v0, v5

    :goto_4
    const/16 v9, 0x77

    packed-switch v0, :pswitch_data_2

    .line 1833
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v10, v0, 0x77

    and-int/2addr v0, v9

    shl-int/2addr v0, v3

    add-int/2addr v10, v0

    rem-int/lit16 v0, v10, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v10, v2

    if-nez v10, :cond_7

    goto :goto_5

    .line 1822
    :pswitch_2
    move v0, v5

    goto :goto_6

    :cond_7
    :goto_5
    nop

    .line 2022
    move v0, v3

    .line 1823
    :goto_6
    const-string v10, "paymentsystem.tx.$.TTQ"

    invoke-static {v10}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v10

    invoke-static {v10}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v10

    .line 1826
    if-eqz v0, :cond_8

    .line 1911
    move v0, v3

    goto :goto_7

    :cond_8
    move v0, v5

    :goto_7
    packed-switch v0, :pswitch_data_3

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v11, v0, 0x6b

    and-int/lit8 v0, v0, 0x6b

    shl-int/2addr v0, v3

    add-int/2addr v11, v0

    rem-int/lit16 v0, v11, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v11, v2

    if-eqz v11, :cond_9

    goto :goto_8

    .line 2009
    :pswitch_3
    const-string v0, "TERMINATE::MSD Not Supported."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2010
    new-instance v0, Ljava/lang/Exception;

    const-string v2, "TTP KOD Kernel Only Supports QVSDC Processing."

    invoke-direct {v0, v2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    .line 1828
    :cond_9
    :goto_8
    const-string v0, "emv.card.FirstGenDataCDO.CID"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 1829
    nop

    .line 1830
    const/16 v11, 0x19

    const/4 v12, 0x0

    if-nez v0, :cond_e

    .line 2022
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v13, v0, 0x3f

    xor-int/lit8 v0, v0, 0x3f

    or-int/2addr v0, v13

    neg-int v0, v0

    neg-int v0, v0

    or-int v14, v13, v0

    shl-int/2addr v14, v3

    xor-int/2addr v0, v13

    sub-int/2addr v14, v0

    rem-int/lit16 v0, v14, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v14, v2

    if-eqz v14, :cond_a

    .line 1911
    move v0, v3

    goto :goto_9

    :cond_a
    move v0, v5

    :goto_9
    packed-switch v0, :pswitch_data_4

    .line 1831
    const-string v0, "emv.card.FirstGenDataCDO.IAD"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 1832
    if-eqz v0, :cond_d

    goto :goto_a

    .line 1831
    :pswitch_4
    const-string v0, "emv.card.FirstGenDataCDO.IAD"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    .line 1832
    :try_start_1
    invoke-super {v12}, Ljava/lang/Object;->hashCode()I

    throw v12
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2022
    :catchall_1
    move-exception v0

    throw v0

    .line 1832
    :goto_a
    array-length v13, v0

    if-lt v13, v8, :cond_b

    .line 1911
    const/16 v13, 0x2b

    goto :goto_b

    :cond_b
    move v13, v11

    :goto_b
    packed-switch v13, :pswitch_data_5

    goto :goto_e

    .line 1848
    :pswitch_5
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v14, v13, 0xf

    and-int/lit8 v13, v13, 0xf

    shl-int/2addr v13, v3

    add-int/2addr v14, v13

    rem-int/lit16 v13, v14, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v2

    if-nez v14, :cond_c

    .line 1911
    move v13, v5

    goto :goto_c

    :cond_c
    move v13, v3

    :goto_c
    packed-switch v13, :pswitch_data_6

    .line 1833
    aget-byte v0, v0, v7

    and-int/lit8 v0, v0, 0x30

    shl-int/2addr v0, v2

    goto :goto_d

    :pswitch_6
    aget-byte v0, v0, v2

    and-int/lit8 v13, v0, -0x32

    and-int/lit8 v14, v0, -0x1

    not-int v14, v14

    or-int/lit8 v0, v0, -0x1

    and-int/2addr v0, v14

    and-int/lit8 v0, v0, 0x31

    xor-int v14, v13, v0

    and-int/2addr v0, v13

    or-int/2addr v0, v14

    div-int/2addr v0, v6

    :goto_d
    int-to-byte v0, v0

    .line 2022
    move v6, v5

    goto :goto_f

    .line 1835
    :cond_d
    :goto_e
    const-string v0, "DECLINED::Invalid IAD Returned."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1836
    const-string v0, "DECLINE::IAD does not match any return code."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1837
    move v6, v3

    move v0, v5

    goto :goto_f

    .line 1840
    :cond_e
    aget-byte v0, v0, v5

    and-int/lit8 v0, v0, -0x40

    int-to-byte v0, v0

    move v6, v5

    .line 1844
    :goto_f
    const-string v13, "emv.poi.TransactionType"

    invoke-static {v13}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v13

    invoke-static {v13}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v13

    .line 1845
    const/16 v14, 0x40

    if-eq v0, v14, :cond_f

    .line 1911
    move v15, v5

    goto :goto_10

    :cond_f
    move v15, v3

    :goto_10
    const/16 v16, 0x2c

    const/16 v4, -0x80

    packed-switch v15, :pswitch_data_7

    goto :goto_14

    .line 1848
    :pswitch_7
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v17, v15, 0xb

    xor-int/lit8 v18, v15, 0xb

    or-int v18, v18, v17

    and-int v19, v17, v18

    or-int v17, v17, v18

    add-int v12, v19, v17

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v2

    if-nez v12, :cond_10

    .line 1911
    const/16 v8, 0x62

    goto :goto_11

    :cond_10
    const/16 v8, 0x35

    :goto_11
    packed-switch v8, :pswitch_data_8

    .line 1845
    if-eq v0, v4, :cond_12

    goto :goto_12

    .line 1848
    :pswitch_8
    if-eq v0, v7, :cond_12

    .line 1845
    :goto_12
    if-eqz v0, :cond_12

    .line 1832
    and-int/lit8 v6, v15, 0x19

    xor-int/lit8 v8, v15, 0x19

    or-int/2addr v8, v6

    neg-int v8, v8

    neg-int v8, v8

    not-int v8, v8

    sub-int/2addr v6, v8

    sub-int/2addr v6, v3

    rem-int/lit16 v8, v6, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v2

    if-nez v6, :cond_11

    .line 1911
    const/16 v6, 0x4a

    goto :goto_13

    :cond_11
    move/from16 v6, v16

    :goto_13
    packed-switch v6, :pswitch_data_9

    .line 1846
    const-string v6, "DECLINED::Invalid CID Returned."

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1847
    const-string v6, "DECLINE::CID does not match any return code."

    invoke-virtual {v1, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1848
    move v6, v5

    goto :goto_14

    .line 1846
    :pswitch_9
    const-string v6, "DECLINED::Invalid CID Returned."

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1847
    const-string v6, "DECLINE::CID does not match any return code."

    invoke-virtual {v1, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1848
    move v6, v3

    .line 1852
    :cond_12
    :goto_14
    if-nez v0, :cond_17

    .line 1848
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v12, v12, 0x79

    sub-int/2addr v12, v3

    sub-int/2addr v12, v3

    rem-int/lit16 v15, v12, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v12, v2

    if-eqz v12, :cond_14

    aget-byte v12, v13, v5

    const/16 v13, 0x78

    if-eq v12, v13, :cond_13

    .line 1911
    const/16 v12, 0x5f

    goto :goto_15

    :cond_13
    const/16 v12, 0x5b

    :goto_15
    packed-switch v12, :pswitch_data_a

    goto :goto_18

    .line 1852
    :cond_14
    aget-byte v12, v13, v5

    const/16 v13, 0x20

    if-eq v12, v13, :cond_17

    .line 2022
    :pswitch_a
    add-int/lit8 v15, v15, 0x35

    sub-int/2addr v15, v3

    xor-int/lit8 v6, v15, -0x1

    and-int/lit8 v12, v15, -0x1

    shl-int/2addr v12, v3

    add-int/2addr v6, v12

    rem-int/lit16 v12, v6, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v2

    if-nez v6, :cond_15

    .line 1853
    :cond_15
    const-string v6, "DECLINE::Payment Type Not Refund, and AAC Returned."

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1854
    const-string v6, "DECLINE::CID returned AAC, and transaction type is not REFUND."

    invoke-virtual {v1, v6}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1855
    nop

    .line 1797
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v12, v6, 0x13

    xor-int/lit8 v6, v6, 0x13

    or-int/2addr v6, v12

    neg-int v6, v6

    neg-int v6, v6

    and-int v13, v12, v6

    or-int/2addr v6, v12

    add-int/2addr v13, v6

    rem-int/lit16 v6, v13, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v13, v2

    if-eqz v13, :cond_16

    .line 1911
    move v6, v3

    goto :goto_16

    :cond_16
    move v6, v5

    :goto_16
    packed-switch v6, :pswitch_data_b

    .line 1797
    goto :goto_17

    .line 2022
    :pswitch_b
    nop

    .line 1865
    :goto_17
    move v6, v3

    :cond_17
    :goto_18
    iget-object v12, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v13, "CVMNotRequired"

    iput-object v13, v12, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1866
    if-nez v6, :cond_18

    .line 1911
    const/16 v12, 0x38

    goto :goto_19

    :cond_18
    move/from16 v12, v16

    :goto_19
    const/16 v19, 0x47

    packed-switch v12, :pswitch_data_c

    :goto_1a
    goto/16 :goto_5a

    .line 1833
    :pswitch_c
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v20, 0x65

    xor-int/lit8 v21, v12, 0x65

    and-int/lit8 v22, v12, 0x65

    or-int v21, v21, v22

    shl-int/lit8 v21, v21, 0x1

    and-int/lit8 v22, v12, -0x66

    not-int v12, v12

    and-int v12, v20, v12

    or-int v12, v22, v12

    sub-int v12, v21, v12

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v2

    if-nez v12, :cond_19

    .line 1867
    :cond_19
    aget-byte v12, v10, v3

    and-int/2addr v12, v14

    const/16 v21, 0x49

    if-ne v12, v14, :cond_1a

    .line 1911
    const/16 v12, 0x35

    goto :goto_1b

    :cond_1a
    move/from16 v12, v21

    :goto_1b
    packed-switch v12, :pswitch_data_d

    .line 1832
    and-int/lit8 v12, v8, 0x3

    or-int/lit8 v22, v8, 0x3

    xor-int v23, v12, v22

    and-int v12, v12, v22

    shl-int/2addr v12, v3

    add-int v12, v23, v12

    rem-int/lit16 v11, v12, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v12, v2

    if-eqz v12, :cond_1b

    goto :goto_1c

    .line 1867
    :pswitch_d
    move v11, v5

    goto :goto_1d

    :cond_1b
    :goto_1c
    move v11, v3

    .line 1868
    :goto_1d
    aget-byte v12, v10, v5

    and-int/lit8 v13, v12, 0x4

    if-ne v13, v7, :cond_1d

    .line 1833
    xor-int/lit8 v13, v8, 0x37

    and-int/lit8 v24, v8, 0x37

    or-int v13, v13, v24

    shl-int/2addr v13, v3

    and-int/lit8 v24, v8, -0x38

    not-int v8, v8

    and-int/lit8 v8, v8, 0x37

    or-int v8, v24, v8

    neg-int v8, v8

    not-int v8, v8

    sub-int/2addr v13, v8

    sub-int/2addr v13, v3

    rem-int/lit16 v8, v13, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v13, v2

    if-eqz v13, :cond_1c

    .line 1868
    :cond_1c
    nop

    .line 2022
    move v7, v3

    goto :goto_20

    .line 1797
    :cond_1d
    and-int/lit8 v13, v8, -0x48

    not-int v7, v8

    and-int v7, v19, v7

    or-int/2addr v7, v13

    and-int/lit8 v8, v8, 0x47

    shl-int/2addr v8, v3

    not-int v8, v8

    sub-int/2addr v7, v8

    sub-int/2addr v7, v3

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_1e

    .line 1911
    const/16 v7, 0x14

    goto :goto_1e

    :cond_1e
    const/16 v7, 0x5f

    :goto_1e
    packed-switch v7, :pswitch_data_e

    .line 1797
    goto :goto_1f

    .line 2022
    :pswitch_e
    nop

    .line 1869
    :goto_1f
    move v7, v5

    :goto_20
    and-int/lit8 v8, v12, 0x2

    if-ne v8, v2, :cond_1f

    .line 1911
    move v8, v3

    goto :goto_21

    :cond_1f
    move v8, v5

    :goto_21
    packed-switch v8, :pswitch_data_f

    .line 2022
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v12, v8, -0x78

    not-int v13, v8

    and-int/2addr v13, v9

    or-int/2addr v12, v13

    and-int/2addr v8, v9

    shl-int/2addr v8, v3

    neg-int v8, v8

    neg-int v8, v8

    not-int v8, v8

    sub-int/2addr v12, v8

    sub-int/2addr v12, v3

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v2

    if-nez v12, :cond_20

    goto :goto_22

    .line 1869
    :pswitch_f
    nop

    .line 1848
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v8, 0x13

    and-int/lit8 v12, v8, 0x13

    or-int/2addr v9, v12

    shl-int/2addr v9, v3

    not-int v12, v12

    or-int/lit8 v8, v8, 0x13

    and-int/2addr v8, v12

    neg-int v8, v8

    xor-int v12, v9, v8

    and-int/2addr v8, v9

    shl-int/2addr v8, v3

    add-int/2addr v12, v8

    rem-int/lit16 v8, v12, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v2

    .line 1870
    move v8, v5

    goto :goto_24

    .line 1911
    :goto_22
    move v8, v3

    goto :goto_23

    :cond_20
    move v8, v5

    :goto_23
    packed-switch v8, :pswitch_data_10

    .line 2022
    move v8, v5

    goto :goto_24

    .line 1869
    :pswitch_10
    move v8, v3

    .line 1870
    :goto_24
    aget-byte v9, v10, v2

    and-int/2addr v9, v14

    if-ne v9, v14, :cond_21

    .line 1911
    move v9, v5

    goto :goto_25

    :cond_21
    move v9, v3

    :goto_25
    packed-switch v9, :pswitch_data_11

    .line 1870
    goto :goto_26

    :pswitch_11
    move v9, v5

    goto :goto_29

    .line 1832
    :goto_26
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v10, 0x43

    and-int/lit8 v12, v9, -0x44

    not-int v13, v9

    and-int/2addr v13, v10

    or-int/2addr v12, v13

    and-int/2addr v9, v10

    shl-int/2addr v9, v3

    xor-int v10, v12, v9

    and-int/2addr v9, v12

    shl-int/2addr v9, v3

    add-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v10, v2

    if-eqz v10, :cond_22

    .line 1911
    const/16 v9, 0x51

    goto :goto_27

    :cond_22
    const/16 v9, 0x52

    :goto_27
    packed-switch v9, :pswitch_data_12

    .line 2022
    goto :goto_28

    .line 1832
    :pswitch_12
    nop

    .line 1871
    :goto_28
    move v9, v3

    :goto_29
    nop

    .line 1872
    const-string v10, "paymentsystem.card.CTQ"

    invoke-static {v10}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v10

    invoke-static {v10}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v10

    .line 1873
    if-nez v10, :cond_23

    .line 1911
    move v12, v3

    goto :goto_2a

    :cond_23
    move v12, v5

    :goto_2a
    packed-switch v12, :pswitch_data_13

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x6c

    and-int/lit8 v10, v0, 0x6c

    shl-int/2addr v10, v3

    add-int/2addr v4, v10

    or-int/lit8 v10, v4, -0x1

    shl-int/2addr v10, v3

    xor-int/lit8 v4, v4, -0x1

    sub-int/2addr v10, v4

    rem-int/lit16 v4, v10, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v10, v2

    if-eqz v10, :cond_45

    goto/16 :goto_4c

    .line 1892
    :pswitch_13
    if-eqz v10, :cond_24

    .line 1911
    move v9, v5

    goto :goto_2b

    :cond_24
    move v9, v3

    :goto_2b
    packed-switch v9, :pswitch_data_14

    .line 1892
    array-length v9, v10

    if-ne v9, v2, :cond_42

    .line 1922
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v12, v9, 0x7

    and-int/lit8 v13, v9, 0x7

    or-int/2addr v12, v13

    shl-int/2addr v12, v3

    and-int/lit8 v13, v9, -0x8

    not-int v9, v9

    const/16 v17, 0x7

    and-int/lit8 v9, v9, 0x7

    or-int/2addr v9, v13

    sub-int/2addr v12, v9

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v12, v2

    if-eqz v12, :cond_25

    .line 1894
    aget-byte v12, v10, v3

    and-int/lit8 v13, v12, 0x61

    and-int/lit8 v25, v13, 0x0

    not-int v15, v13

    and-int/lit8 v15, v15, -0x1

    or-int v15, v25, v15

    xor-int/lit8 v12, v12, 0x61

    or-int/2addr v12, v13

    and-int/2addr v12, v15

    int-to-byte v12, v12

    aput-byte v12, v10, v5

    .line 1895
    and-int/lit8 v13, v12, 0x3f

    int-to-byte v13, v13

    aput-byte v13, v10, v3

    .line 1898
    and-int/lit8 v12, v12, 0x6

    const/16 v13, 0x7e

    if-ne v12, v13, :cond_29

    goto :goto_2d

    .line 1894
    :cond_25
    aget-byte v12, v10, v5

    and-int/lit8 v12, v12, -0x2

    int-to-byte v12, v12

    aput-byte v12, v10, v5

    .line 1895
    aget-byte v13, v10, v3

    and-int/lit8 v13, v13, -0x40

    int-to-byte v13, v13

    aput-byte v13, v10, v3

    .line 1898
    and-int/2addr v12, v4

    if-ne v12, v4, :cond_26

    .line 1911
    move v12, v5

    goto :goto_2c

    :cond_26
    move v12, v3

    :goto_2c
    packed-switch v12, :pswitch_data_15

    .line 1797
    :goto_2d
    and-int/lit8 v12, v9, 0x11

    not-int v13, v12

    or-int/lit8 v9, v9, 0x11

    and-int/2addr v9, v13

    shl-int/2addr v12, v3

    and-int v13, v9, v12

    or-int/2addr v9, v12

    add-int/2addr v13, v9

    rem-int/lit16 v9, v13, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v13, v2

    if-nez v13, :cond_27

    .line 1898
    :cond_27
    if-eqz v7, :cond_29

    .line 1848
    xor-int/lit8 v7, v9, 0x29

    and-int/lit8 v9, v9, 0x29

    shl-int/2addr v9, v3

    add-int/2addr v7, v9

    rem-int/lit16 v9, v7, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_28

    move v7, v5

    goto :goto_2e

    .line 1898
    :cond_28
    move v7, v3

    goto :goto_2e

    :cond_29
    :pswitch_14
    move v7, v5

    .line 1899
    :goto_2e
    aget-byte v9, v10, v3

    and-int/2addr v9, v4

    if-ne v9, v4, :cond_2b

    .line 1797
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v12, v9, 0x12

    and-int/lit8 v9, v9, 0x12

    shl-int/2addr v9, v3

    add-int/2addr v12, v9

    or-int/lit8 v9, v12, -0x1

    shl-int/2addr v9, v3

    xor-int/lit8 v12, v12, -0x1

    sub-int/2addr v9, v12

    rem-int/lit16 v12, v9, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v2

    if-eqz v9, :cond_2a

    .line 1899
    :cond_2a
    move v9, v3

    goto :goto_2f

    :cond_2b
    move v9, v5

    .line 1900
    :goto_2f
    aget-byte v12, v10, v5

    and-int/2addr v12, v14

    if-ne v12, v14, :cond_2c

    .line 1911
    move v12, v5

    goto :goto_30

    :cond_2c
    move v12, v3

    :goto_30
    packed-switch v12, :pswitch_data_16

    .line 1848
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v12, 0x67

    or-int/lit8 v12, v12, 0x67

    and-int v14, v13, v12

    or-int/2addr v12, v13

    add-int/2addr v14, v12

    rem-int/lit16 v12, v14, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v2

    if-nez v14, :cond_2d

    .line 1900
    :cond_2d
    if-eqz v8, :cond_2f

    .line 2022
    and-int/lit8 v8, v12, 0x3d

    xor-int/lit8 v12, v12, 0x3d

    or-int/2addr v12, v8

    or-int v13, v8, v12

    shl-int/2addr v13, v3

    xor-int/2addr v8, v12

    sub-int/2addr v13, v8

    rem-int/lit16 v8, v13, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v13, v2

    if-eqz v13, :cond_2e

    .line 1911
    move v8, v5

    goto :goto_31

    :cond_2e
    move v8, v3

    :goto_31
    packed-switch v8, :pswitch_data_17

    .line 1900
    move v8, v3

    goto :goto_32

    :cond_2f
    :pswitch_15
    nop

    .line 1922
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v8, v8, 0x53

    rem-int/lit16 v12, v8, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v8, v2

    if-nez v8, :cond_30

    .line 2022
    :cond_30
    :pswitch_16
    move v8, v5

    .line 1903
    :goto_32
    if-eqz v7, :cond_31

    .line 1911
    const/16 v7, 0x53

    goto :goto_33

    :cond_31
    const/16 v7, 0x54

    :goto_33
    packed-switch v7, :pswitch_data_18

    .line 1848
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v0, 0x49

    xor-int/lit8 v0, v0, 0x49

    or-int/2addr v0, v4

    neg-int v0, v0

    neg-int v0, v0

    xor-int v7, v4, v0

    and-int/2addr v0, v4

    shl-int/2addr v0, v3

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_41

    goto/16 :goto_48

    .line 1908
    :pswitch_17
    if-eqz v9, :cond_32

    .line 1911
    const/16 v20, 0x5f

    goto :goto_34

    :cond_32
    const/16 v7, 0x4e

    move/from16 v20, v7

    :goto_34
    packed-switch v20, :pswitch_data_19

    .line 1950
    if-eqz v8, :cond_40

    goto/16 :goto_46

    .line 1898
    :pswitch_18
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v7, v7, 0x73

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v2

    if-nez v7, :cond_33

    .line 1911
    const/16 v7, 0x4a

    goto :goto_35

    :cond_33
    const/16 v7, 0x32

    :goto_35
    packed-switch v7, :pswitch_data_1a

    .line 1909
    const-string v0, "paymentsystem.card.CardAuthenticationData"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    .line 1911
    goto/16 :goto_45

    .line 1909
    :pswitch_19
    const-string v7, "paymentsystem.card.CardAuthenticationData"

    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v7

    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v7

    .line 1911
    if-eqz v7, :cond_34

    const/16 v8, 0x17

    goto :goto_36

    :cond_34
    const/16 v8, 0xd

    :goto_36
    packed-switch v8, :pswitch_data_1b

    goto :goto_3a

    .line 1938
    :pswitch_1a
    if-ne v0, v4, :cond_35

    .line 1911
    const/16 v7, 0x5e

    goto :goto_37

    :cond_35
    const/4 v7, 0x4

    :goto_37
    packed-switch v7, :pswitch_data_1c

    .line 1939
    goto :goto_39

    .line 1943
    :pswitch_1b
    const-string v0, "DECLINE::CARD Not Returned"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1944
    const-string v0, "DECLINE::CARD Not Returned."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1945
    nop

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v0, 0x6f

    xor-int/lit8 v0, v0, 0x6f

    or-int/2addr v0, v4

    neg-int v0, v0

    neg-int v0, v0

    and-int v6, v4, v0

    or-int/2addr v0, v4

    add-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v2

    if-nez v6, :cond_36

    .line 1911
    move v0, v3

    goto :goto_38

    :cond_36
    move v0, v5

    :goto_38
    packed-switch v0, :pswitch_data_1d

    .line 1797
    goto/16 :goto_4a

    :goto_39
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x27

    sub-int/2addr v0, v3

    or-int/lit8 v4, v0, -0x1

    shl-int/2addr v4, v3

    xor-int/lit8 v0, v0, -0x1

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v4, v2

    if-nez v4, :cond_49

    goto/16 :goto_4f

    .line 1913
    :goto_3a
    array-length v0, v7

    const/4 v4, 0x5

    if-lt v0, v4, :cond_37

    .line 1911
    const/16 v0, 0x33

    goto :goto_3b

    :cond_37
    const/16 v0, 0xc

    :goto_3b
    packed-switch v0, :pswitch_data_1e

    .line 2022
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x2d

    and-int/lit8 v8, v0, 0x2d

    or-int/2addr v8, v4

    shl-int/2addr v8, v3

    neg-int v4, v4

    or-int v9, v8, v4

    shl-int/2addr v9, v3

    xor-int/2addr v4, v8

    sub-int/2addr v9, v4

    rem-int/lit16 v4, v9, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v2

    if-eqz v9, :cond_38

    .line 1911
    move v4, v5

    goto :goto_3c

    :cond_38
    move v4, v3

    :goto_3c
    packed-switch v4, :pswitch_data_1f

    .line 2022
    array-length v4, v7

    const/16 v8, 0x4c

    if-le v4, v8, :cond_39

    goto :goto_3d

    .line 1913
    :pswitch_1c
    array-length v4, v7

    const/16 v8, 0x10

    if-le v4, v8, :cond_3a

    goto/16 :goto_44

    .line 1911
    :goto_3d
    const/16 v4, 0x17

    goto :goto_3e

    :cond_39
    move/from16 v4, v19

    :goto_3e
    packed-switch v4, :pswitch_data_20

    goto/16 :goto_44

    .line 1919
    :cond_3a
    :pswitch_1d
    array-length v4, v7

    const/4 v8, 0x7

    if-ge v4, v8, :cond_3b

    .line 1911
    move v4, v3

    goto :goto_3f

    :cond_3b
    move v4, v5

    :goto_3f
    packed-switch v4, :pswitch_data_21

    .line 1797
    xor-int/lit8 v4, v0, 0x49

    and-int/lit8 v0, v0, 0x49

    shl-int/2addr v0, v3

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v2

    if-eqz v4, :cond_3e

    goto :goto_42

    .line 1926
    :pswitch_1e
    const/4 v0, 0x5

    aget-byte v4, v7, v0

    aget-byte v0, v10, v5

    if-ne v4, v0, :cond_3c

    .line 1911
    const/16 v0, 0x25

    goto :goto_40

    :cond_3c
    const/16 v0, 0x59

    :goto_40
    packed-switch v0, :pswitch_data_22

    goto :goto_41

    .line 1926
    :pswitch_1f
    const/4 v0, 0x6

    aget-byte v0, v7, v0

    aget-byte v4, v10, v3

    if-ne v0, v4, :cond_3d

    .line 1927
    move v0, v3

    goto/16 :goto_54

    .line 1931
    :cond_3d
    :goto_41
    const-string v0, "DECLINE::CARD Does Not Match CTQ"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1932
    const-string v0, "DECLINE::CARD Does Not Match CTQ."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1933
    move v6, v3

    move v0, v5

    goto/16 :goto_54

    .line 1911
    :goto_42
    move v0, v3

    goto :goto_43

    :cond_3e
    move v0, v5

    :goto_43
    packed-switch v0, :pswitch_data_23

    .line 1920
    const-string v0, "DECLINE::Card Authentication Related Data Length Less Than 7 Bytes."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1921
    const-string v0, "DECLINE::Card Authentication Related Data Length Less Than 7 Bytes"

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1922
    move v0, v5

    move v6, v0

    goto/16 :goto_54

    .line 1920
    :pswitch_20
    const-string v0, "DECLINE::Card Authentication Related Data Length Less Than 7 Bytes."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1921
    const-string v0, "DECLINE::Card Authentication Related Data Length Less Than 7 Bytes"

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1922
    move v6, v3

    move v0, v5

    goto/16 :goto_54

    .line 1914
    :goto_44
    :pswitch_21
    const-string v0, "DECLINE::Invalid Card Authentication Related Data Length."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1915
    const-string v0, "DECLINE::Invalid Card Authentication Related Data Length."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1916
    nop

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x30

    and-int/lit8 v0, v0, 0x30

    shl-int/2addr v0, v3

    add-int/2addr v4, v0

    sub-int/2addr v4, v5

    sub-int/2addr v4, v3

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v2

    goto :goto_4a

    .line 1911
    :goto_45
    const/4 v0, 0x0

    :try_start_2
    throw v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 1898
    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1797
    :goto_46
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x47

    and-int/lit8 v0, v0, 0x47

    or-int/2addr v0, v4

    shl-int/2addr v0, v3

    neg-int v4, v4

    or-int v7, v0, v4

    shl-int/2addr v7, v3

    xor-int/2addr v0, v4

    sub-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_3f

    .line 1951
    :cond_3f
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "CVMSignature"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1952
    move v0, v3

    goto :goto_47

    .line 1950
    :cond_40
    move v0, v5

    .line 1952
    :goto_47
    goto/16 :goto_54

    .line 1904
    :cond_41
    :goto_48
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "CVMOnlinePIN"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1905
    move v0, v3

    goto/16 :goto_54

    .line 1957
    :cond_42
    :pswitch_22
    const-string v0, "DECLINE::Invalid CTQ Length."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1958
    const-string v0, "DECLINED::Invalid CTQ Length."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1959
    nop

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v0, 0x64

    or-int/lit8 v0, v0, 0x64

    add-int/2addr v4, v0

    or-int/lit8 v0, v4, -0x1

    shl-int/2addr v0, v3

    xor-int/lit8 v4, v4, -0x1

    sub-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v2

    if-nez v0, :cond_43

    .line 1911
    move v0, v3

    goto :goto_49

    :cond_43
    move v0, v5

    :goto_49
    packed-switch v0, :pswitch_data_24

    .line 2022
    :pswitch_23
    goto :goto_4b

    .line 1797
    :goto_4a
    :pswitch_24
    nop

    .line 1962
    :goto_4b
    move v6, v3

    :cond_44
    :pswitch_25
    move v0, v5

    goto/16 :goto_54

    .line 1875
    :cond_45
    :goto_4c
    if-eqz v8, :cond_46

    .line 1911
    move v4, v3

    goto :goto_4d

    :cond_46
    move v4, v5

    :goto_4d
    packed-switch v4, :pswitch_data_25

    goto :goto_50

    .line 1797
    :pswitch_26
    xor-int/lit8 v4, v0, 0x5f

    and-int/lit8 v8, v0, 0x5f

    shl-int/2addr v8, v3

    add-int/2addr v4, v8

    rem-int/lit16 v8, v4, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v2

    if-eqz v4, :cond_47

    const/16 v4, 0x13

    :try_start_3
    div-int/2addr v4, v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    if-eqz v11, :cond_4a

    goto :goto_4e

    :catchall_3
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1875
    :cond_47
    if-eqz v11, :cond_4a

    .line 2022
    :goto_4e
    and-int/lit8 v4, v0, 0x45

    xor-int/lit8 v0, v0, 0x45

    or-int/2addr v0, v4

    neg-int v0, v0

    neg-int v0, v0

    or-int v7, v4, v0

    shl-int/2addr v7, v3

    xor-int/2addr v0, v4

    sub-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_48

    .line 1876
    :cond_48
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "CVMSignature"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1877
    nop

    .line 2022
    :cond_49
    :goto_4f
    move v0, v3

    goto/16 :goto_54

    .line 1880
    :cond_4a
    :goto_50
    if-eqz v9, :cond_4d

    .line 1848
    and-int/lit8 v4, v0, 0x77

    not-int v8, v4

    or-int/lit8 v10, v0, 0x77

    and-int/2addr v8, v10

    shl-int/2addr v4, v3

    neg-int v4, v4

    neg-int v4, v4

    not-int v4, v4

    sub-int/2addr v8, v4

    sub-int/2addr v8, v3

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v8, v2

    if-eqz v8, :cond_4b

    .line 1911
    move v4, v3

    goto :goto_51

    :cond_4b
    move v4, v5

    :goto_51
    packed-switch v4, :pswitch_data_26

    .line 1848
    goto :goto_52

    .line 1880
    :pswitch_27
    if-eqz v7, :cond_4d

    if-eqz v11, :cond_4d

    .line 1797
    and-int/lit8 v4, v0, 0x61

    xor-int/lit8 v0, v0, 0x61

    or-int/2addr v0, v4

    neg-int v0, v0

    neg-int v0, v0

    and-int v7, v4, v0

    or-int/2addr v0, v4

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v7, v2

    if-eqz v7, :cond_4c

    .line 1881
    :cond_4c
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "CVMOnlinePIN"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1882
    nop

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v0, 0x6d

    or-int/lit8 v0, v0, 0x6d

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v4, v2

    if-nez v4, :cond_49

    goto :goto_4f

    .line 1848
    :goto_52
    const/4 v0, 0x0

    :try_start_4
    invoke-super {v0}, Ljava/lang/Object;->hashCode()I

    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    :catchall_4
    move-exception v0

    throw v0

    .line 1885
    :cond_4d
    if-eqz v11, :cond_44

    .line 1797
    add-int/lit8 v0, v0, 0x34

    sub-int/2addr v0, v3

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v2

    if-eqz v0, :cond_4e

    .line 1885
    :cond_4e
    if-eqz v9, :cond_4f

    .line 1911
    const/16 v0, 0x32

    goto :goto_53

    :cond_4f
    const/16 v0, 0x56

    :goto_53
    packed-switch v0, :pswitch_data_27

    .line 1797
    and-int/lit8 v0, v4, 0x3d

    or-int/lit8 v4, v4, 0x3d

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v2

    if-nez v0, :cond_50

    .line 1886
    :cond_50
    const-string v0, "DECLINE::CTQ Not Returned; Only CDCVM Supported."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1887
    const-string v0, "DECLINE::CTQ Not Returned; Only CDCVM Supported."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1888
    nop

    .line 1848
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v4, v0, 0x47

    shl-int/lit8 v6, v4, 0x1

    and-int/lit8 v0, v0, 0x47

    not-int v0, v0

    and-int/2addr v0, v4

    neg-int v0, v0

    or-int v4, v6, v0

    shl-int/2addr v4, v3

    xor-int/2addr v0, v6

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v4, v2

    if-eqz v4, :cond_51

    .line 2022
    :cond_51
    move v6, v3

    move v0, v5

    .line 1962
    :goto_54
    if-eqz v11, :cond_52

    .line 1911
    const/16 v16, 0x1d

    goto :goto_55

    :cond_52
    nop

    :goto_55
    packed-switch v16, :pswitch_data_28

    goto :goto_58

    .line 1797
    :pswitch_28
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v4, 0x4d

    const/16 v8, 0x4d

    xor-int/2addr v4, v8

    or-int/2addr v4, v7

    and-int v8, v7, v4

    or-int/2addr v4, v7

    add-int/2addr v8, v4

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v8, v2

    if-nez v8, :cond_53

    .line 1911
    const/16 v4, 0x59

    goto :goto_56

    :cond_53
    const/16 v4, 0x1f

    :goto_56
    packed-switch v4, :pswitch_data_29

    .line 1797
    goto :goto_57

    .line 1962
    :pswitch_29
    if-eqz v0, :cond_55

    goto :goto_58

    .line 1797
    :goto_57
    const/4 v0, 0x0

    :try_start_5
    invoke-super {v0}, Ljava/lang/Object;->hashCode()I

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    :catchall_5
    move-exception v0

    throw v0

    .line 1962
    :goto_58
    if-eqz v6, :cond_54

    .line 1911
    move v0, v5

    goto :goto_59

    :cond_54
    move v0, v3

    :goto_59
    packed-switch v0, :pswitch_data_2a

    goto/16 :goto_1a

    .line 1963
    :cond_55
    :pswitch_2a
    const-string v0, "emv.tx.cal.ErrorCode"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    .line 1965
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "CVMDeclined"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1966
    const-string v0, "DECLINE::CVM Required and CVM Not Performed"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1967
    const-string v0, "DECLINE::CVM Required and CVM Not Performed"

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1968
    move v6, v3

    .line 1974
    :goto_5a
    const/4 v0, 0x5

    new-array v0, v0, [B

    .line 1975
    const-string v4, "emv.tx.$.TVR"

    invoke-static {v4, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1978
    const-string v0, "emv.card.Track2EquivalentData"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 1979
    if-eqz v0, :cond_5e

    array-length v4, v0

    if-nez v4, :cond_56

    goto/16 :goto_5e

    .line 1985
    :cond_56
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v4

    const-string v7, " "

    const-string v8, ""

    invoke-virtual {v4, v7, v8}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v4

    .line 1986
    const/16 v7, 0x44

    invoke-virtual {v4, v7}, Ljava/lang/String;->indexOf(I)I

    move-result v4

    .line 1987
    div-int/lit8 v7, v4, 0x2

    .line 1988
    rem-int/2addr v4, v2

    if-eqz v4, :cond_57

    .line 1911
    move v8, v5

    goto :goto_5b

    :cond_57
    move v8, v3

    :goto_5b
    packed-switch v8, :pswitch_data_2b

    goto :goto_5c

    :pswitch_2b
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v8, 0x4d

    and-int/lit8 v10, v8, 0x4d

    or-int/2addr v10, v9

    shl-int/2addr v10, v3

    sub-int/2addr v10, v9

    rem-int/lit16 v9, v10, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v10, v2

    if-nez v10, :cond_58

    .line 1989
    :cond_58
    xor-int/lit8 v9, v7, 0x1

    and-int/lit8 v10, v7, 0x1

    or-int/2addr v9, v10

    shl-int/2addr v9, v3

    not-int v10, v10

    or-int/lit8 v7, v7, 0x1

    and-int/2addr v7, v10

    sub-int v7, v9, v7

    .line 1848
    xor-int/lit8 v9, v8, 0x65

    and-int/lit8 v8, v8, 0x65

    shl-int/2addr v8, v3

    or-int v10, v9, v8

    shl-int/2addr v10, v3

    xor-int/2addr v8, v9

    sub-int/2addr v10, v8

    rem-int/lit16 v8, v10, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v10, v2

    if-nez v10, :cond_59

    .line 2022
    :cond_59
    nop

    .line 1991
    :goto_5c
    new-array v8, v7, [B

    .line 1992
    int-to-short v9, v7

    invoke-static {v0, v5, v8, v5, v9}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S

    .line 1994
    if-eqz v4, :cond_5b

    .line 1797
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v0, 0x33

    and-int/lit8 v9, v0, 0x33

    or-int/2addr v4, v9

    shl-int/2addr v4, v3

    and-int/lit8 v9, v0, -0x34

    not-int v0, v0

    and-int/lit8 v0, v0, 0x33

    or-int/2addr v0, v9

    neg-int v0, v0

    or-int v9, v4, v0

    shl-int/2addr v9, v3

    xor-int/2addr v0, v4

    sub-int/2addr v9, v0

    rem-int/lit16 v0, v9, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v9, v2

    if-nez v9, :cond_5a

    .line 1995
    :cond_5a
    xor-int/lit8 v0, v7, -0x1

    and-int/lit8 v4, v7, -0x1

    shl-int/2addr v4, v3

    add-int/2addr v0, v4

    aget-byte v4, v8, v0

    and-int/lit8 v9, v4, -0x10

    not-int v10, v4

    and-int/lit8 v10, v10, 0xf

    or-int/2addr v9, v10

    and-int/lit8 v4, v4, 0xf

    xor-int v10, v9, v4

    and-int/2addr v4, v9

    or-int/2addr v4, v10

    int-to-byte v4, v4

    aput-byte v4, v8, v0

    .line 1999
    :cond_5b
    const-string v0, "emv.card.PAN"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 2000
    if-eqz v0, :cond_5d

    .line 2001
    array-length v4, v0

    if-ne v4, v7, :cond_5c

    invoke-static {v8, v5, v0, v5}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BI)Z

    move-result v0

    if-ne v0, v3, :cond_5c

    goto :goto_5d

    .line 2002
    :cond_5c
    const-string v0, "TERMINATE::Track2 Equivalent Data PAN Inconsistent with PAN from READ RECORD."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2003
    new-instance v0, Ljava/lang/Exception;

    const-string v2, "Track 2 Equivalent Data PAN inconsistent with PAN from READ DATA"

    invoke-direct {v0, v2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_5d
    :goto_5d
    goto :goto_5f

    .line 1980
    :cond_5e
    :goto_5e
    const-string v0, "DECLINE::Invalid Track2 Equivalent Data."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1981
    const-string v0, "DECLINE::Invalid Track2 Equivalent Data."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1982
    move v6, v3

    .line 2013
    :goto_5f
    if-eqz v6, :cond_5f

    .line 1911
    const/16 v11, 0x19

    goto :goto_60

    :cond_5f
    const/16 v11, 0x9

    :goto_60
    packed-switch v11, :pswitch_data_2c

    .line 2016
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "COMPLETED"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    goto :goto_61

    .line 2014
    :pswitch_2c
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v4, "DECLINED"

    iput-object v4, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2020
    :goto_61
    const/16 v0, 0xaa

    new-array v4, v3, [B

    if-eqz v6, :cond_60

    .line 1911
    move v7, v3

    goto :goto_62

    :cond_60
    move v7, v5

    :goto_62
    packed-switch v7, :pswitch_data_2d

    .line 2020
    const/16 v7, 0x20

    goto :goto_63

    .line 1848
    :pswitch_2d
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v8, v7, 0x47

    not-int v9, v8

    or-int/lit8 v7, v7, 0x47

    and-int/2addr v7, v9

    shl-int/2addr v8, v3

    or-int v9, v7, v8

    shl-int/2addr v9, v3

    xor-int/2addr v7, v8

    sub-int/2addr v9, v7

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v2

    if-eqz v9, :cond_61

    .line 2020
    :cond_61
    const/16 v7, 0x10

    .line 2022
    nop

    .line 2020
    :goto_63
    int-to-byte v7, v7

    aput-byte v7, v4, v5

    invoke-static {v0, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 2022
    if-eqz v6, :cond_62

    .line 1911
    const/16 v0, 0x25

    goto :goto_64

    :cond_62
    const/16 v0, 0x43

    :goto_64
    packed-switch v0, :pswitch_data_2e

    .line 2022
    const/16 v0, 0x5a

    return v0

    .line 1832
    :pswitch_2e
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x50

    sub-int/2addr v0, v3

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v2

    if-nez v0, :cond_63

    .line 2022
    :cond_63
    const/16 v0, -0x5b

    .line 1797
    xor-int/lit8 v5, v4, 0x17

    const/16 v6, 0x17

    and-int/2addr v4, v6

    or-int/2addr v4, v5

    shl-int/lit8 v3, v4, 0x1

    neg-int v4, v5

    and-int v5, v3, v4

    or-int/2addr v3, v4

    add-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v2

    .line 2022
    return v0

    .line 1805
    :cond_64
    const-string v0, "DECLINE::Redundant Card Data."

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1806
    const-string v0, "DECLINE::Redundant Card Data."

    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1807
    new-instance v0, Ljava/lang/Exception;

    const-string v2, "Redundant Data."

    invoke-direct {v0, v2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    :pswitch_data_0
    .packed-switch 0x3a
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x2b
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x62
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x2c
        :pswitch_9
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x5f
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x38
        :pswitch_c
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x49
        :pswitch_d
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x5f
        :pswitch_e
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_f
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_11
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x51
        :pswitch_12
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_22
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x1
        :pswitch_14
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x0
        :pswitch_16
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x54
        :pswitch_17
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x5f
        :pswitch_18
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x32
        :pswitch_19
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0xd
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x4
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x0
        :pswitch_23
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0xc
        :pswitch_21
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x1
        :pswitch_1c
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x47
        :pswitch_1d
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x0
        :pswitch_1e
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0x25
        :pswitch_1f
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x0
        :pswitch_20
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x1
        :pswitch_24
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x1
        :pswitch_26
    .end packed-switch

    :pswitch_data_26
    .packed-switch 0x0
        :pswitch_27
    .end packed-switch

    :pswitch_data_27
    .packed-switch 0x56
        :pswitch_25
    .end packed-switch

    :pswitch_data_28
    .packed-switch 0x1d
        :pswitch_28
    .end packed-switch

    :pswitch_data_29
    .packed-switch 0x1f
        :pswitch_29
    .end packed-switch

    :pswitch_data_2a
    .packed-switch 0x0
        :pswitch_2a
    .end packed-switch

    :pswitch_data_2b
    .packed-switch 0x0
        :pswitch_2b
    .end packed-switch

    :pswitch_data_2c
    .packed-switch 0x19
        :pswitch_2c
    .end packed-switch

    :pswitch_data_2d
    .packed-switch 0x1
        :pswitch_2d
    .end packed-switch

    :pswitch_data_2e
    .packed-switch 0x25
        :pswitch_2e
    .end packed-switch
.end method

.method private operationDISPLAY_MESSAGE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 8

    .line 2086
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, v0, 0x2d

    and-int/lit8 v0, v0, 0x2d

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    or-int v3, v1, v0

    shl-int/2addr v3, v2

    xor-int/2addr v0, v1

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v0, 0x2

    rem-int/2addr v3, v0

    const/4 v1, 0x0

    if-nez v3, :cond_0

    .line 2076
    move v3, v1

    goto :goto_0

    :cond_0
    move v3, v2

    :goto_0
    const/4 v4, 0x0

    packed-switch v3, :pswitch_data_0

    .line 2074
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    .line 2075
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptOutput()Ljava/lang/String;

    .line 2076
    goto/16 :goto_b

    .line 2074
    :pswitch_0
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v3

    .line 2075
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptOutput()Ljava/lang/String;

    move-result-object p1

    .line 2076
    if-eqz v3, :cond_1

    move v5, v0

    goto :goto_1

    :cond_1
    const/16 v5, 0x4e

    :goto_1
    packed-switch v5, :pswitch_data_1

    .line 2077
    if-eqz p1, :cond_2

    .line 2076
    const/16 v5, 0x25

    goto :goto_2

    :cond_2
    const/16 v5, 0x3a

    :goto_2
    packed-switch v5, :pswitch_data_2

    goto :goto_4

    :pswitch_1
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v6, v5, 0x2f

    or-int/lit8 v5, v5, 0x2f

    and-int v7, v6, v5

    or-int/2addr v5, v6

    add-int/2addr v7, v5

    rem-int/lit16 v5, v7, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v7, v0

    if-nez v7, :cond_3

    .line 2078
    :cond_3
    invoke-static {p1, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2086
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v5, p1, 0x17

    xor-int/lit8 p1, p1, 0x17

    or-int/2addr p1, v5

    not-int p1, p1

    sub-int/2addr v5, p1

    sub-int/2addr v5, v2

    rem-int/lit16 p1, v5, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v0

    if-nez v5, :cond_4

    .line 2076
    move p1, v1

    goto :goto_3

    :cond_4
    move p1, v2

    :goto_3
    packed-switch p1, :pswitch_data_3

    .line 2086
    :pswitch_2
    nop

    .line 2080
    :goto_4
    const-string p1, "LV."

    invoke-virtual {v3, p1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result p1

    if-eqz p1, :cond_5

    .line 2076
    const/16 p1, 0x9

    goto :goto_5

    :cond_5
    const/16 p1, 0x37

    :goto_5
    packed-switch p1, :pswitch_data_4

    goto :goto_a

    .line 2086
    :pswitch_3
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v5, p1, 0x62

    shl-int/2addr v5, v2

    xor-int/lit8 p1, p1, 0x62

    sub-int/2addr v5, p1

    xor-int/lit8 p1, v5, -0x1

    and-int/lit8 v5, v5, -0x1

    shl-int/2addr v5, v2

    add-int/2addr p1, v5

    rem-int/lit16 v5, p1, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v0

    if-eqz p1, :cond_6

    .line 2076
    const/16 p1, 0x5c

    goto :goto_6

    :cond_6
    const/16 p1, 0x1e

    :goto_6
    packed-switch p1, :pswitch_data_5

    .line 2086
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    goto :goto_9

    .line 2080
    :pswitch_4
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    if-eqz p1, :cond_7

    .line 2076
    move p1, v2

    goto :goto_7

    :cond_7
    move p1, v1

    :goto_7
    packed-switch p1, :pswitch_data_6

    .line 2081
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    move-object v3, p1

    check-cast v3, Ljava/lang/String;

    .line 2076
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v4, 0x1f

    and-int/lit8 v5, p1, -0x20

    not-int v6, p1

    and-int/2addr v6, v4

    or-int/2addr v5, v6

    and-int/2addr p1, v4

    shl-int/2addr p1, v2

    add-int/2addr v5, p1

    rem-int/lit16 p1, v5, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v0

    if-nez v5, :cond_8

    const/16 p1, 0x15

    goto :goto_8

    :cond_8
    const/16 p1, 0x47

    :goto_8
    packed-switch p1, :pswitch_data_7

    goto :goto_a

    .line 2086
    :pswitch_5
    goto :goto_a

    :goto_9
    :try_start_0
    invoke-super {v4}, Ljava/lang/Object;->hashCode()I

    throw v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    .line 2085
    :goto_a
    :pswitch_6
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getCalListener()Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    move-result-object p1

    const-string v4, "DISPLAY_MESSAGE"

    invoke-interface {p1, v4, v3}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->runAction(Ljava/lang/String;Ljava/lang/String;)V

    .line 2086
    const/16 p1, 0x5a

    .line 2076
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v3, 0x6e

    or-int/lit8 v3, v3, 0x6e

    add-int/2addr v4, v3

    and-int/lit8 v3, v4, -0x1

    or-int/lit8 v4, v4, -0x1

    add-int/2addr v3, v4

    rem-int/lit16 v4, v3, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v0

    if-nez v3, :cond_9

    move v2, v1

    :cond_9
    packed-switch v2, :pswitch_data_8

    .line 2086
    return p1

    .line 2076
    :pswitch_7
    const/16 v0, 0x60

    :try_start_1
    div-int/2addr v0, v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    return p1

    :catchall_1
    move-exception p1

    throw p1

    :goto_b
    :try_start_2
    throw v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 2086
    :catchall_2
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x4e
        :pswitch_6
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x25
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x9
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1e
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x47
        :pswitch_5
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch
.end method

.method private operationDO_MATCH(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2094
    nop

    .line 2092
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v0, p1, 0x17

    const/4 v1, 0x1

    shl-int/2addr v0, v1

    xor-int/lit8 p1, p1, 0x17

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 2091
    const/16 p1, 0x19

    goto :goto_0

    :cond_0
    const/16 p1, 0x5b

    :goto_0
    const/4 v0, 0x0

    packed-switch p1, :pswitch_data_0

    .line 2090
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result p1

    .line 2091
    const/16 v2, 0x5a

    if-ne p1, v2, :cond_2

    goto :goto_3

    .line 2090
    :pswitch_0
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result p1

    .line 2091
    const/16 v2, 0x5d

    if-ne p1, v2, :cond_1

    move v2, v1

    goto :goto_1

    :cond_1
    move v2, v0

    :goto_1
    packed-switch v2, :pswitch_data_1

    :goto_2
    goto :goto_7

    :goto_3
    move v2, v1

    goto :goto_4

    :cond_2
    move v2, v0

    :goto_4
    packed-switch v2, :pswitch_data_2

    goto :goto_2

    .line 2094
    :pswitch_1
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v3, 0x39

    and-int/lit8 v4, v2, -0x3a

    not-int v5, v2

    and-int/2addr v5, v3

    or-int/2addr v4, v5

    and-int/2addr v2, v3

    shl-int/2addr v2, v1

    not-int v2, v2

    sub-int/2addr v4, v2

    sub-int/2addr v4, v1

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_3

    .line 2091
    const/16 v2, 0x49

    goto :goto_5

    :cond_3
    move v2, v0

    :goto_5
    packed-switch v2, :pswitch_data_3

    .line 2092
    iget v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    add-int/lit8 v2, v2, 0x2

    or-int/lit8 v3, v2, -0x1

    shl-int/2addr v3, v1

    xor-int/lit8 v2, v2, -0x1

    sub-int/2addr v3, v2

    iput v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    goto :goto_6

    :pswitch_2
    iget v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    shr-int/2addr v2, v1

    iput v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2094
    :goto_6
    nop

    :goto_7
    nop

    .line 2092
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v3, 0x29

    xor-int/lit8 v4, v2, 0x29

    and-int/lit8 v5, v2, 0x29

    or-int/2addr v4, v5

    shl-int/2addr v4, v1

    and-int/lit8 v5, v2, -0x2a

    not-int v2, v2

    and-int/2addr v2, v3

    or-int/2addr v2, v5

    neg-int v2, v2

    or-int v3, v4, v2

    shl-int/2addr v3, v1

    xor-int/2addr v2, v4

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_4

    .line 2091
    goto :goto_8

    :cond_4
    move v1, v0

    :goto_8
    packed-switch v1, :pswitch_data_4

    .line 2094
    return p1

    .line 2092
    :pswitch_3
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x19
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x49
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch
.end method

.method private operationDO_MATCH_PPSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 4

    .line 2110
    nop

    .line 2102
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x39

    const/4 v0, 0x1

    sub-int/2addr p1, v0

    and-int/lit8 v1, p1, -0x1

    or-int/lit8 p1, p1, -0x1

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 2100
    :cond_0
    const/16 p1, -0x5b

    :try_start_0
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v2, 0x0

    if-lez v1, :cond_1

    .line 2102
    move v1, v0

    goto :goto_0

    :cond_1
    move v1, v2

    :goto_0
    packed-switch v1, :pswitch_data_0

    .line 2110
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v3, v1, 0x4e

    shl-int/2addr v3, v0

    xor-int/lit8 v1, v1, 0x4e

    sub-int/2addr v3, v1

    sub-int/2addr v3, v0

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_3

    goto :goto_2

    .line 2104
    :pswitch_0
    nop

    .line 2102
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v1, v1, 0x78

    and-int/lit8 v3, v1, -0x1

    or-int/lit8 v1, v1, -0x1

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_2

    goto :goto_1

    :cond_2
    move v2, v0

    :goto_1
    packed-switch v2, :pswitch_data_1

    goto :goto_6

    :goto_2
    move v2, v0

    goto :goto_3

    :cond_3
    nop

    :goto_3
    const-string v1, "9000"

    packed-switch v2, :pswitch_data_2

    .line 2101
    const/16 v2, 0x6e

    :try_start_1
    invoke-virtual {p0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v2

    goto :goto_4

    :pswitch_1
    const/16 v2, 0x6f

    invoke-virtual {p0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v2

    .line 2102
    invoke-direct {p0, v2, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a([BLjava/lang/String;)B

    move-result p1

    goto :goto_5

    :goto_4
    invoke-direct {p0, v2, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a([BLjava/lang/String;)B

    move-result p1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 2110
    :goto_5
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v1, 0x6b

    or-int/lit8 v1, v1, 0x6b

    or-int v3, v2, v1

    shl-int/2addr v3, v0

    xor-int/2addr v1, v2

    sub-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_4

    :cond_4
    :pswitch_2
    goto :goto_6

    .line 2106
    :catch_0
    move-exception v1

    .line 2107
    invoke-virtual {p0, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 2108
    nop

    .line 2110
    :goto_6
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v1, 0x33

    and-int/lit8 v1, v1, 0x33

    shl-int/lit8 v0, v1, 0x1

    and-int v1, v2, v0

    or-int/2addr v0, v2

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    return p1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch
.end method

.method private operationGENERATE_RESULT_TLV(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 14

    .line 2070
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, -0x66

    not-int v1, p1

    and-int/lit8 v1, v1, 0x65

    or-int/2addr v0, v1

    and-int/lit8 p1, p1, 0x65

    const/4 v1, 0x1

    shl-int/2addr p1, v1

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    const/4 p1, 0x0

    if-nez v0, :cond_0

    .line 2042
    move v0, p1

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    const/4 v2, 0x0

    packed-switch v0, :pswitch_data_0

    .line 2026
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->resultTlv:Ljava/util/HashMap;

    .line 2027
    if-nez v0, :cond_1

    goto :goto_1

    .line 2026
    :pswitch_0
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object p1, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->resultTlv:Ljava/util/HashMap;

    .line 2027
    :try_start_0
    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2070
    :catchall_0
    move-exception p1

    throw p1

    .line 2042
    :goto_1
    move v3, p1

    goto :goto_2

    :cond_1
    move v3, v1

    :goto_2
    packed-switch v3, :pswitch_data_1

    goto/16 :goto_16

    .line 2032
    :pswitch_1
    sget-object v3, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    const-string v4, "KV.RESULT_LIST"

    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    const-string v4, ","

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    .line 2033
    array-length v5, v3

    .line 2070
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x72

    sub-int/2addr v6, v1

    rem-int/lit16 v7, v6, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    const/16 v7, 0x2d

    const/16 v8, 0x28

    if-eqz v6, :cond_2

    .line 2042
    move v6, v7

    goto :goto_3

    :cond_2
    move v6, v8

    :goto_3
    packed-switch v6, :pswitch_data_2

    .line 2070
    :pswitch_2
    nop

    .line 2033
    move v6, p1

    :goto_4
    if-ge v6, v5, :cond_3

    .line 2042
    move v9, v1

    goto :goto_5

    :cond_3
    move v9, p1

    :goto_5
    packed-switch v9, :pswitch_data_3

    .line 2040
    sget-object v3, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    const-string v5, "KV.TEMPLATE_LIST"

    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v3

    .line 2041
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance:Landroid/util/ArrayMap;

    invoke-virtual {v5}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v5

    invoke-interface {v5}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v5

    goto :goto_6

    .line 2070
    :pswitch_3
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v10, v9, 0x4f

    and-int/lit8 v11, v9, 0x4f

    or-int/2addr v10, v11

    shl-int/2addr v10, v1

    not-int v11, v11

    or-int/lit8 v9, v9, 0x4f

    and-int/2addr v9, v11

    neg-int v9, v9

    or-int v11, v10, v9

    shl-int/2addr v11, v1

    xor-int/2addr v9, v10

    sub-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_4

    .line 2033
    :cond_4
    aget-object v9, v3, v6

    .line 2034
    sget-object v10, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v10, v9}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/String;

    invoke-static {v10}, Lcom/visa/vac/tc/emvconverter/Utils;->trimLeadingZero(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v10

    .line 2035
    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    .line 2036
    invoke-static {v10, v9}, Lcom/visa/vac/tc/emvconverter/Utils;->toTlv(Ljava/lang/String;Ljava/lang/Object;)[B

    move-result-object v9

    invoke-virtual {v0, v10, v9}, Ljava/util/AbstractMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2033
    or-int/lit8 v9, v6, 0x1

    shl-int/lit8 v10, v9, 0x1

    and-int/lit8 v6, v6, 0x1

    not-int v6, v6

    and-int/2addr v6, v9

    sub-int v6, v10, v6

    .line 2042
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v10, v9, 0x11

    xor-int/lit8 v9, v9, 0x11

    or-int/2addr v9, v10

    xor-int v11, v10, v9

    and-int/2addr v9, v10

    shl-int/2addr v9, v1

    add-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_5

    .line 2070
    :cond_5
    goto :goto_4

    .line 2049
    :goto_6
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v9, v6, 0x4d

    xor-int/lit8 v6, v6, 0x4d

    or-int/2addr v6, v9

    neg-int v6, v6

    neg-int v6, v6

    or-int v10, v9, v6

    shl-int/2addr v10, v1

    xor-int/2addr v6, v9

    sub-int/2addr v10, v6

    rem-int/lit16 v6, v10, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    if-eqz v10, :cond_6

    .line 2070
    :cond_6
    :pswitch_4
    nop

    .line 2041
    :goto_7
    :pswitch_5
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_7

    .line 2042
    const/16 v6, 0x39

    goto :goto_8

    :cond_7
    move v6, v7

    :goto_8
    packed-switch v6, :pswitch_data_4

    .line 2054
    sget-object v3, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    const-string v5, "KV.REQUIRED_CARD_DATA"

    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v3

    .line 2055
    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    goto/16 :goto_10

    .line 2049
    :pswitch_6
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v9, v6, 0x69

    xor-int/lit8 v6, v6, 0x69

    or-int/2addr v6, v9

    add-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_8

    .line 2042
    move v6, p1

    goto :goto_9

    :cond_8
    move v6, v1

    :goto_9
    packed-switch v6, :pswitch_data_5

    .line 2041
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/util/Map$Entry;

    .line 2042
    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/util/AbstractMap;->containsKey(Ljava/lang/Object;)Z

    move-result v9

    if-nez v9, :cond_9

    goto :goto_a

    .line 2049
    :pswitch_7
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/util/Map$Entry;

    .line 2042
    invoke-interface {p1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/AbstractMap;->containsKey(Ljava/lang/Object;)Z

    :try_start_1
    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2049
    :catchall_1
    move-exception p1

    throw p1

    .line 2042
    :goto_a
    move v9, v1

    goto :goto_b

    :cond_9
    move v9, p1

    :goto_b
    const/16 v10, 0x3b

    packed-switch v9, :pswitch_data_6

    .line 2049
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v11, v9, 0x13

    and-int/lit8 v9, v9, 0x13

    shl-int/2addr v9, v1

    add-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_a

    .line 2043
    :cond_a
    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/String;

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/Utils;->trimLeadingZero(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v9

    .line 2044
    invoke-interface {v6}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v11

    .line 2045
    sget-object v12, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v6

    invoke-virtual {v12, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/String;

    .line 2046
    invoke-interface {v3, v6}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_b

    .line 2042
    const/16 v6, 0x50

    goto :goto_c

    :cond_b
    const/16 v6, 0x55

    :goto_c
    packed-switch v6, :pswitch_data_7

    .line 2027
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v12, v6, 0x79

    xor-int/lit8 v6, v6, 0x79

    or-int/2addr v6, v12

    neg-int v6, v6

    neg-int v6, v6

    and-int v13, v12, v6

    or-int/2addr v6, v12

    add-int/2addr v13, v6

    rem-int/lit16 v6, v13, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_c

    .line 2042
    move v6, v10

    goto :goto_d

    :cond_c
    move v6, v8

    :goto_d
    packed-switch v6, :pswitch_data_8

    .line 2049
    invoke-static {v9, v11}, Lcom/visa/vac/tc/emvconverter/Utils;->toTlv(Ljava/lang/String;Ljava/lang/Object;)[B

    move-result-object v6

    invoke-virtual {v0, v9, v6}, Ljava/util/AbstractMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_e

    :pswitch_8
    invoke-static {v9, v11}, Lcom/visa/vac/tc/emvconverter/Utils;->toTlv(Ljava/lang/String;Ljava/lang/Object;)[B

    move-result-object p1

    invoke-virtual {v0, v9, p1}, Ljava/util/AbstractMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :try_start_2
    throw v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 2027
    :catchall_2
    move-exception p1

    throw p1

    .line 2070
    :goto_e
    nop

    .line 2049
    :pswitch_9
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v6, 0x3b

    and-int/2addr v6, v10

    shl-int/2addr v6, v1

    add-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_d

    .line 2042
    move v6, p1

    goto :goto_f

    :cond_d
    move v6, v1

    :goto_f
    packed-switch v6, :pswitch_data_9

    .line 2049
    goto/16 :goto_7

    .line 2070
    :goto_10
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v5, v4, 0xd

    xor-int/lit8 v4, v4, 0xd

    or-int/2addr v4, v5

    neg-int v4, v4

    neg-int v4, v4

    and-int v6, v5, v4

    or-int/2addr v4, v5

    add-int/2addr v6, v4

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v6, v6, 0x2

    if-nez v6, :cond_e

    .line 2055
    :cond_e
    :goto_11
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_f

    .line 2042
    move v4, p1

    goto :goto_12

    :cond_f
    move v4, v1

    :goto_12
    packed-switch v4, :pswitch_data_a

    .line 2063
    new-instance v1, Ljava/util/Date;

    invoke-direct {v1}, Ljava/util/Date;-><init>()V

    .line 2064
    const/4 v2, 0x3

    new-array v2, v2, [B

    .line 2065
    iget-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInternalData:Ljava/text/SimpleDateFormat;

    invoke-virtual {v3, v1}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v1

    .line 2066
    invoke-static {v1, v2, p1}, Lcom/visa/vac/tc/emvconverter/Utils;->ContactlessConfiguration(Ljava/lang/String;[BS)S

    .line 2067
    const/16 p1, 0x9a

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->trimLeadingZero(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p1

    .line 2068
    invoke-static {p1, v2}, Lcom/visa/vac/tc/emvconverter/Utils;->toTlv(Ljava/lang/String;Ljava/lang/Object;)[B

    move-result-object v1

    invoke-virtual {v0, p1, v1}, Ljava/util/AbstractMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2070
    const/16 p1, 0x5a

    goto :goto_15

    .line 2027
    :pswitch_a
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x61

    or-int/lit8 v4, v4, 0x61

    add-int/2addr v5, v4

    rem-int/lit16 v4, v5, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_10

    .line 2055
    :cond_10
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 2056
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->trimLeadingZero(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 2057
    invoke-virtual {v0, v4}, Ljava/util/AbstractMap;->containsKey(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_11

    .line 2042
    move v5, v1

    goto :goto_13

    :cond_11
    move v5, p1

    :goto_13
    packed-switch v5, :pswitch_data_b

    goto :goto_14

    .line 2027
    :pswitch_b
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v5, v5, 0x10

    sub-int/2addr v5, v1

    rem-int/lit16 v6, v5, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_12

    .line 2058
    :cond_12
    invoke-virtual {v0, v4, v2}, Ljava/util/AbstractMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2042
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v4, v4, 0x9

    sub-int/2addr v4, v1

    sub-int/2addr v4, v1

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_13

    .line 2070
    :cond_13
    nop

    .line 2058
    :goto_14
    nop

    .line 2070
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v4, v4, 0x2a

    or-int/lit8 v5, v4, -0x1

    shl-int/2addr v5, v1

    xor-int/lit8 v4, v4, -0x1

    sub-int/2addr v5, v4

    rem-int/lit16 v4, v5, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_e

    goto/16 :goto_11

    .line 2042
    :goto_15
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x49

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    .line 2070
    return p1

    .line 2028
    :goto_16
    const/16 v0, -0x5b

    .line 2042
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v4, v3, 0x33

    shl-int/2addr v4, v1

    xor-int/lit8 v3, v3, 0x33

    sub-int/2addr v4, v3

    rem-int/lit16 v3, v4, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_14

    move v1, p1

    :cond_14
    packed-switch v1, :pswitch_data_c

    goto :goto_17

    .line 2070
    :pswitch_c
    return v0

    .line 2042
    :goto_17
    :try_start_3
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    :catchall_3
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x28
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x39
        :pswitch_6
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_9
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x55
        :pswitch_5
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x3b
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x0
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1
        :pswitch_c
    .end packed-switch
.end method

.method private operationGEN_AC(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 3

    .line 2116
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x2b

    xor-int/lit8 v0, v0, 0x2b

    or-int/2addr v0, v1

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v0, 0x1

    if-eqz v1, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    :goto_0
    packed-switch v1, :pswitch_data_0

    .line 2114
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    .line 2115
    iget v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    and-int/lit8 v1, v0, -0x1

    xor-int/lit8 v0, v0, -0x1

    or-int/2addr v0, v1

    goto :goto_1

    .line 2114
    :pswitch_0
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    .line 2115
    iget v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    and-int/lit8 v2, v1, 0x1

    xor-int/2addr v0, v1

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    and-int v1, v2, v0

    or-int/2addr v0, v2

    :goto_1
    add-int/2addr v1, v0

    iput v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2116
    return p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method private operationGEN_UNPRED_NUM(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 4

    .line 2268
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x6a

    const/4 v0, 0x1

    sub-int/2addr p1, v0

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_0

    .line 2257
    const/16 p1, 0xd

    goto :goto_0

    :cond_0
    const/4 p1, 0x7

    :goto_0
    const/4 v2, 0x0

    packed-switch p1, :pswitch_data_0

    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastCommand:Ljava/security/SecureRandom;

    goto :goto_3

    :pswitch_0
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastCommand:Ljava/security/SecureRandom;

    if-nez p1, :cond_1

    move p1, v2

    goto :goto_1

    :cond_1
    move p1, v0

    :goto_1
    packed-switch p1, :pswitch_data_1

    :goto_2
    goto :goto_7

    :goto_3
    const/16 v3, 0x30

    :try_start_0
    div-int/2addr v3, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez p1, :cond_2

    move p1, v2

    goto :goto_4

    :cond_2
    move p1, v0

    :goto_4
    packed-switch p1, :pswitch_data_2

    goto :goto_2

    .line 2258
    :pswitch_1
    const/4 p1, -0x1

    .line 2268
    xor-int/lit8 v3, v1, 0x5

    and-int/lit8 v1, v1, 0x5

    or-int/2addr v1, v3

    shl-int/2addr v1, v0

    neg-int v3, v3

    not-int v3, v3

    sub-int/2addr v1, v3

    sub-int/2addr v1, v0

    rem-int/lit16 v3, v1, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_3

    .line 2257
    goto :goto_5

    :cond_3
    move v0, v2

    :goto_5
    packed-switch v0, :pswitch_data_3

    .line 2268
    goto :goto_6

    :pswitch_2
    return p1

    :goto_6
    const/16 v0, 0x38

    :try_start_1
    div-int/2addr v0, v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return p1

    :catchall_0
    move-exception p1

    throw p1

    .line 2262
    :goto_7
    const/4 p1, 0x4

    new-array p1, p1, [B

    .line 2263
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastCommand:Ljava/security/SecureRandom;

    invoke-virtual {v1, p1}, Ljava/util/Random;->nextBytes([B)V

    .line 2266
    const/16 v1, -0x60c9

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object p1

    .line 18401
    sget-object v2, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v3, "emv.tx.iam.UnpredictableNumber"

    invoke-static {v3, v1, p1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2268
    const/16 p1, 0x5a

    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v1, 0x43

    or-int/lit8 v1, v1, 0x43

    neg-int v1, v1

    neg-int v1, v1

    not-int v1, v1

    sub-int/2addr v2, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    return p1

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x7
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch
.end method

.method private operationGET_DATA(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2121
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0xf

    and-int/lit8 v1, p1, 0xf

    or-int/2addr v0, v1

    shl-int/lit8 v0, v0, 0x1

    and-int/lit8 v1, p1, -0x10

    not-int p1, p1

    and-int/lit8 p1, p1, 0xf

    or-int/2addr p1, v1

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    const/16 v0, 0x5e

    goto :goto_0

    :cond_0
    const/16 v0, 0x2f

    :goto_0
    packed-switch v0, :pswitch_data_0

    const/16 v0, 0x39

    goto :goto_1

    :pswitch_0
    const/16 v0, 0x5a

    :goto_1
    and-int/lit8 v1, p1, 0x51

    xor-int/lit8 p1, p1, 0x51

    or-int/2addr p1, v1

    or-int v2, v1, p1

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr p1, v1

    sub-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x2f
        :pswitch_0
    .end packed-switch
.end method

.method private operationGPO(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 12
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2162
    nop

    .line 2154
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x23

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    and-int/lit8 v3, v0, -0x24

    not-int v0, v0

    const/16 v4, 0x23

    and-int/2addr v0, v4

    or-int/2addr v0, v3

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v1, v0

    sub-int/2addr v1, v2

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v3, 0x2

    rem-int/2addr v1, v3

    const/4 v4, 0x0

    if-eqz v1, :cond_0

    .line 2126
    move v1, v4

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    const/16 v5, -0x5b

    const/16 v6, 0x55

    const/4 v7, -0x1

    const/4 v8, 0x0

    packed-switch v1, :pswitch_data_0

    iget-boolean v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    goto :goto_3

    :pswitch_0
    iget-boolean v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    if-eqz v1, :cond_1

    move v1, v4

    goto :goto_1

    :cond_1
    move v1, v2

    :goto_1
    packed-switch v1, :pswitch_data_1

    :goto_2
    goto :goto_7

    :goto_3
    const/16 v9, 0x3a

    :try_start_0
    div-int/2addr v9, v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_5

    if-eqz v1, :cond_2

    move v1, v6

    goto :goto_4

    :cond_2
    const/16 v1, 0x5b

    :goto_4
    packed-switch v1, :pswitch_data_2

    goto :goto_2

    .line 2135
    :pswitch_1
    add-int/lit8 v0, v0, 0x36

    xor-int/lit8 v1, v0, -0x1

    and-int/2addr v0, v7

    shl-int/2addr v0, v2

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v1, v3

    if-nez v1, :cond_3

    .line 2126
    goto :goto_5

    :cond_3
    move v4, v2

    :goto_5
    packed-switch v4, :pswitch_data_3

    .line 2127
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result v5

    goto :goto_6

    :pswitch_2
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    :try_start_1
    throw v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2135
    :catchall_0
    move-exception p1

    throw p1

    .line 2162
    :cond_4
    :goto_6
    goto/16 :goto_2c

    .line 2129
    :goto_7
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    .line 2130
    if-eq p1, v7, :cond_5

    .line 2126
    move v0, v2

    goto :goto_8

    :cond_5
    move v0, v4

    :goto_8
    packed-switch v0, :pswitch_data_4

    move v5, p1

    goto/16 :goto_2c

    .line 2140
    :pswitch_3
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x27

    and-int/lit8 v1, p1, 0x27

    or-int/2addr v0, v1

    shl-int/2addr v0, v2

    not-int v1, v1

    or-int/lit8 p1, p1, 0x27

    and-int/2addr p1, v1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v3

    if-nez v0, :cond_6

    .line 2126
    const/16 v0, 0x1c

    goto :goto_9

    :cond_6
    const/16 v0, 0x19

    :goto_9
    packed-switch v0, :pswitch_data_5

    .line 2131
    nop

    .line 2132
    goto/16 :goto_2b

    .line 2131
    :pswitch_4
    nop

    .line 2132
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    if-nez v0, :cond_7

    .line 2126
    const/16 v1, 0x47

    goto :goto_a

    :cond_7
    const/16 v1, 0x31

    :goto_a
    const/16 v9, 0x24

    const/16 v10, 0x5f

    const/16 v11, 0x77

    packed-switch v1, :pswitch_data_6

    goto :goto_f

    .line 2145
    :pswitch_5
    if-eqz v0, :cond_8

    .line 2126
    move v1, v2

    goto :goto_b

    :cond_8
    move v1, v4

    :goto_b
    packed-switch v1, :pswitch_data_7

    .line 2162
    and-int/lit8 v1, p1, 0x41

    or-int/lit8 p1, p1, 0x41

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v1, v3

    if-eqz v1, :cond_9

    .line 2145
    :cond_9
    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result p1

    if-ne p1, v11, :cond_a

    .line 2126
    move p1, v9

    goto :goto_c

    :cond_a
    const/16 p1, 0x14

    :goto_c
    packed-switch p1, :pswitch_data_8

    goto :goto_e

    .line 2140
    :pswitch_6
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, -0x78

    not-int v1, p1

    and-int/2addr v1, v11

    or-int/2addr v0, v1

    and-int/2addr p1, v11

    shl-int/2addr p1, v2

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v1, v3

    if-nez v1, :cond_b

    .line 2146
    :cond_b
    const/16 v0, 0x5a

    .line 2135
    and-int/lit8 v1, p1, 0x3b

    or-int/lit8 p1, p1, 0x3b

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v1, v3

    if-eqz v1, :cond_c

    .line 2126
    const/16 p1, 0x1b

    goto :goto_d

    :cond_c
    const/16 p1, 0x52

    :goto_d
    packed-switch p1, :pswitch_data_9

    .line 2135
    goto/16 :goto_1c

    .line 2162
    :pswitch_7
    goto/16 :goto_1c

    .line 2148
    :goto_e
    :pswitch_8
    move v0, v7

    goto/16 :goto_1c

    .line 2133
    :goto_f
    nop

    .line 2134
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    const-string v0, "6984"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result p1

    if-eqz p1, :cond_d

    .line 2126
    move p1, v4

    goto :goto_10

    :cond_d
    move p1, v2

    :goto_10
    packed-switch p1, :pswitch_data_a

    .line 2162
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p1, 0x1d

    and-int/lit8 p1, p1, 0x1d

    shl-int/2addr p1, v2

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v3

    if-eqz v0, :cond_14

    goto/16 :goto_18

    .line 2136
    :pswitch_9
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    const-string v0, "6985"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result p1

    if-eqz p1, :cond_e

    .line 2126
    const/16 p1, 0xd

    goto :goto_11

    :cond_e
    const/16 p1, 0x20

    :goto_11
    packed-switch p1, :pswitch_data_b

    .line 2139
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig:Ljava/lang/String;

    const-string v0, "6986"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result p1

    if-eqz p1, :cond_11

    goto :goto_13

    .line 2162
    :pswitch_a
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0xb

    and-int/lit8 v1, p1, 0xb

    or-int/2addr v0, v1

    shl-int/2addr v0, v2

    not-int v1, v1

    or-int/lit8 p1, p1, 0xb

    and-int/2addr p1, v1

    neg-int p1, p1

    and-int v1, v0, p1

    or-int/2addr p1, v0

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v1, v3

    if-nez v1, :cond_f

    .line 2138
    :cond_f
    const-string p1, "ApplicationNotFound"

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2132
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0xf

    not-int v1, v0

    or-int/lit8 p1, p1, 0xf

    and-int/2addr p1, v1

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    or-int v1, p1, v0

    shl-int/2addr v1, v2

    xor-int/2addr p1, v0

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v1, v3

    if-nez v1, :cond_10

    .line 2126
    move p1, v10

    goto :goto_12

    :cond_10
    const/16 p1, 0x50

    :goto_12
    packed-switch p1, :pswitch_data_c

    .line 2162
    goto :goto_1a

    .line 2132
    :pswitch_b
    goto :goto_1b

    .line 2126
    :goto_13
    move p1, v2

    goto :goto_14

    :cond_11
    move p1, v4

    :goto_14
    packed-switch p1, :pswitch_data_d

    .line 2127
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x4e

    and-int/lit8 p1, p1, 0x4e

    shl-int/2addr p1, v2

    add-int/2addr v0, p1

    sub-int/2addr v0, v4

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v3

    if-nez v0, :cond_12

    .line 2126
    move p1, v2

    goto :goto_15

    :cond_12
    move p1, v4

    :goto_15
    const-string v0, "GPOSW6986"

    packed-switch p1, :pswitch_data_e

    .line 2140
    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    goto :goto_17

    :pswitch_c
    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2162
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x2d

    sub-int/2addr p1, v2

    sub-int/2addr p1, v4

    sub-int/2addr p1, v2

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v3

    if-eqz p1, :cond_13

    .line 2126
    move p1, v4

    goto :goto_16

    :cond_13
    move p1, v2

    :goto_16
    packed-switch p1, :pswitch_data_f

    .line 2162
    goto :goto_1a

    .line 2140
    :goto_17
    :try_start_2
    throw v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 2127
    :catchall_1
    move-exception p1

    throw p1

    .line 2126
    :goto_18
    goto :goto_19

    :cond_14
    const/16 v6, 0x39

    :goto_19
    const-string p1, "GPOSW6984"

    packed-switch v6, :pswitch_data_10

    .line 2135
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    goto/16 :goto_2a

    :pswitch_d
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2162
    :goto_1a
    :pswitch_e
    nop

    .line 2148
    :goto_1b
    :pswitch_f
    move v0, v5

    :goto_1c
    const/16 p1, -0x60c9

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalValue(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    .line 2149
    if-eqz p1, :cond_15

    .line 2126
    const/16 v1, 0xa

    goto :goto_1d

    :cond_15
    const/16 v1, 0x3e

    :goto_1d
    packed-switch v1, :pswitch_data_11

    .line 2132
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v6, v1, 0x5f

    shl-int/2addr v6, v2

    xor-int/2addr v1, v10

    sub-int/2addr v6, v1

    rem-int/lit16 v1, v6, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v3

    if-nez v6, :cond_16

    .line 2126
    move v1, v4

    goto :goto_1e

    :cond_16
    move v1, v2

    :goto_1e
    packed-switch v1, :pswitch_data_12

    .line 2152
    check-cast p1, [B

    .line 2153
    array-length v1, p1

    new-array v1, v1, [B

    .line 2154
    invoke-static {p1, v1}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v6

    if-nez v6, :cond_18

    goto :goto_20

    .line 2152
    :pswitch_10
    check-cast p1, [B

    .line 2153
    array-length v1, p1

    new-array v1, v1, [B

    .line 2154
    invoke-static {p1, v1}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v6

    const/16 v8, 0x23

    :try_start_3
    div-int/2addr v8, v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    if-nez v6, :cond_17

    .line 2126
    move v6, v3

    goto :goto_1f

    :cond_17
    const/16 v6, 0x37

    :goto_1f
    packed-switch v6, :pswitch_data_13

    goto :goto_22

    .line 2132
    :catchall_2
    move-exception p1

    throw p1

    .line 2126
    :goto_20
    move v6, v3

    goto :goto_21

    :cond_18
    const/16 v6, 0x42

    :goto_21
    packed-switch v6, :pswitch_data_14

    .line 2162
    :goto_22
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v8, v6, 0x77

    xor-int/2addr v6, v11

    or-int/2addr v6, v8

    add-int/2addr v8, v6

    rem-int/lit16 v6, v8, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v8, v3

    if-eqz v8, :cond_19

    .line 2126
    const/16 v6, 0x56

    goto :goto_23

    :cond_19
    const/16 v6, 0x12

    :goto_23
    const/4 v8, 0x4

    packed-switch v6, :pswitch_data_15

    .line 2162
    array-length v6, p1

    if-lt v6, v8, :cond_1b

    goto :goto_25

    .line 2154
    :pswitch_11
    array-length v6, p1

    if-lt v6, v8, :cond_1a

    .line 2126
    const/16 v6, 0x1e

    goto :goto_24

    :cond_1a
    const/16 v6, 0x32

    :goto_24
    packed-switch v6, :pswitch_data_16

    :pswitch_12
    goto :goto_27

    :goto_25
    move v6, v2

    goto :goto_26

    :cond_1b
    move v6, v4

    :goto_26
    packed-switch v6, :pswitch_data_17

    goto :goto_29

    .line 2154
    :goto_27
    array-length v6, p1

    xor-int/lit8 v8, v6, -0x4

    and-int/lit8 v6, v6, -0x4

    shl-int/2addr v6, v2

    neg-int v6, v6

    neg-int v6, v6

    xor-int v10, v8, v6

    and-int/2addr v6, v8

    shl-int/2addr v6, v2

    add-int/2addr v10, v6

    .line 2155
    invoke-static {p1, v10, v1, v4}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BI)Z

    move-result p1

    if-ne p1, v2, :cond_1c

    .line 2126
    goto :goto_28

    :cond_1c
    const/4 v9, 0x6

    :goto_28
    packed-switch v9, :pswitch_data_18

    goto :goto_29

    .line 2156
    :pswitch_13
    nop

    .line 2162
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v0, p1, 0x7c

    and-int/lit8 p1, p1, 0x7c

    shl-int/2addr p1, v2

    add-int/2addr v0, p1

    and-int/lit8 p1, v0, -0x1

    or-int/2addr v0, v7

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr p1, v3

    if-eqz p1, :cond_4

    goto/16 :goto_6

    .line 2161
    :goto_29
    :pswitch_14
    move v5, v0

    goto :goto_2c

    .line 2135
    :goto_2a
    :try_start_4
    invoke-super {v8}, Ljava/lang/Object;->hashCode()I

    throw v8
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 2162
    :catchall_3
    move-exception p1

    throw p1

    .line 2132
    :goto_2b
    :try_start_5
    throw v8
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    .line 2140
    :catchall_4
    move-exception p1

    throw p1

    .line 2161
    :goto_2c
    iget p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    add-int/lit8 p1, p1, 0x2

    sub-int/2addr p1, v2

    iput p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2162
    nop

    .line 2154
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0xb

    not-int v1, v0

    or-int/lit8 p1, p1, 0xb

    and-int/2addr p1, v1

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v1, p1, v0

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v1, v3

    .line 2162
    return v5

    .line 2154
    :catchall_5
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x55
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x19
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x31
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x0
        :pswitch_8
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x24
        :pswitch_6
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x52
        :pswitch_7
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0xd
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x5f
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x0
        :pswitch_f
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_c
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x39
        :pswitch_d
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x3e
        :pswitch_13
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x37
        :pswitch_13
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x42
        :pswitch_13
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x12
        :pswitch_11
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x32
        :pswitch_14
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x1
        :pswitch_12
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x24
        :pswitch_13
    .end packed-switch
.end method

.method private operationHANDLE_ERROR_SET1(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 5

    .line 2173
    nop

    .line 2169
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x4b

    xor-int/lit8 p1, p1, 0x4b

    or-int/2addr p1, v0

    neg-int p1, p1

    neg-int p1, p1

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    const/4 v0, 0x1

    shl-int/2addr p1, v0

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_0

    .line 2171
    const/16 p1, 0x3a

    goto :goto_0

    :cond_0
    const/16 p1, 0x58

    :goto_0
    const-string v1, "GPOSW6984"

    const-string v2, "emv.tx.cal.ErrorCode"

    const/4 v3, 0x0

    packed-switch p1, :pswitch_data_0

    .line 2166
    nop

    .line 2167
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {p1, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    goto :goto_2

    .line 2166
    :pswitch_0
    nop

    .line 2167
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    invoke-virtual {p1, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_1

    .line 2171
    move p1, v0

    goto :goto_1

    :cond_1
    move p1, v3

    :goto_1
    packed-switch p1, :pswitch_data_1

    :pswitch_1
    goto :goto_4

    .line 2167
    :goto_2
    const/16 v1, 0x32

    :try_start_0
    div-int/2addr v1, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz p1, :cond_2

    .line 2171
    move p1, v3

    goto :goto_3

    :cond_2
    move p1, v0

    :goto_3
    packed-switch p1, :pswitch_data_2

    goto :goto_8

    .line 2170
    :goto_4
    const/4 p1, -0x1

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    const-string v2, "ApplicationNotFound"

    invoke-virtual {v1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v1

    const/16 v2, 0x53

    if-eqz v1, :cond_3

    .line 2171
    const/16 v1, 0x30

    goto :goto_5

    :cond_3
    move v1, v2

    :goto_5
    packed-switch v1, :pswitch_data_3

    goto/16 :goto_d

    .line 2167
    :pswitch_2
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, p1, 0x53

    xor-int/2addr p1, v2

    or-int/2addr p1, v1

    neg-int p1, p1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v1, p1

    sub-int/2addr v1, v0

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_4

    .line 2171
    goto :goto_6

    :cond_4
    move v3, v0

    :goto_6
    packed-switch v3, :pswitch_data_4

    const/16 v1, -0x5b

    goto :goto_7

    :pswitch_3
    const/16 v1, 0x50

    .line 2173
    :goto_7
    xor-int/lit8 v2, p1, 0xb

    and-int/lit8 p1, p1, 0xb

    shl-int/2addr p1, v0

    add-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_7

    goto :goto_c

    :goto_8
    :pswitch_4
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, p1, 0x3f

    shl-int/2addr v1, v0

    xor-int/lit8 p1, p1, 0x3f

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/16 p1, 0x3c

    if-eqz v1, :cond_5

    .line 2171
    const/16 v1, 0x4d

    goto :goto_9

    :cond_5
    move v1, p1

    :goto_9
    packed-switch v1, :pswitch_data_5

    .line 2168
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration()V

    .line 2169
    const/16 v1, 0x3e

    goto :goto_a

    .line 2168
    :pswitch_5
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration()V

    .line 2169
    const/16 v1, 0x5a

    .line 2173
    :goto_a
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x29

    sub-int/2addr v2, v0

    sub-int/2addr v2, v0

    rem-int/lit16 v4, v2, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_6

    .line 2171
    move v3, p1

    goto :goto_b

    :cond_6
    nop

    :goto_b
    packed-switch v3, :pswitch_data_6

    .line 2173
    :cond_7
    :goto_c
    :pswitch_6
    move p1, v1

    :goto_d
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v1, v1, 0x3

    sub-int/2addr v1, v0

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return p1

    .line 2169
    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x58
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x30
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x3c
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch
.end method

.method private operationHANDLE_ERROR_SET2(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 5

    .line 2184
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v0, p1, 0x66

    const/4 v1, 0x1

    shl-int/2addr v0, v1

    xor-int/lit8 p1, p1, 0x66

    sub-int/2addr v0, p1

    sub-int/2addr v0, v1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 2178
    :cond_0
    const-string p1, "emv.tx.cal.ErrorCode"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    const-string v0, "GPOSW6986"

    invoke-virtual {p1, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    const/4 v0, 0x0

    if-eqz p1, :cond_1

    .line 2184
    move p1, v1

    goto :goto_0

    :cond_1
    move p1, v0

    :goto_0
    packed-switch p1, :pswitch_data_0

    .line 2182
    const/16 p1, -0x5b

    goto :goto_1

    .line 2184
    :pswitch_0
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x39

    sub-int/2addr p1, v1

    xor-int/lit8 v2, p1, -0x1

    and-int/lit8 p1, p1, -0x1

    shl-int/2addr p1, v1

    add-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_2

    .line 2179
    :cond_2
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration()V

    .line 2180
    const/16 p1, 0x5a

    .line 2184
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x7d

    not-int v4, v3

    or-int/lit8 v2, v2, 0x7d

    and-int/2addr v2, v4

    shl-int/2addr v3, v1

    neg-int v3, v3

    neg-int v3, v3

    xor-int v4, v2, v3

    and-int/2addr v2, v3

    shl-int/2addr v2, v1

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_4

    goto :goto_2

    :goto_1
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v3, v2, 0x46

    shl-int/2addr v3, v1

    xor-int/lit8 v2, v2, 0x46

    sub-int/2addr v3, v2

    xor-int/lit8 v2, v3, -0x1

    and-int/lit8 v3, v3, -0x1

    shl-int/2addr v3, v1

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_3

    const/16 v2, 0x40

    goto :goto_2

    :cond_3
    const/16 v2, 0x59

    :cond_4
    :goto_2
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0xe

    sub-int/2addr v2, v1

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_5

    goto :goto_3

    :cond_5
    move v1, v0

    :goto_3
    packed-switch v1, :pswitch_data_1

    return p1

    :pswitch_1
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch
.end method

.method private operationPOLL_FOR_CARD(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 1

    .line 2189
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x4

    or-int/lit8 p1, p1, 0x4

    add-int/2addr v0, p1

    xor-int/lit8 p1, v0, -0x1

    and-int/lit8 v0, v0, -0x1

    shl-int/lit8 v0, v0, 0x1

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_0

    const/16 p1, 0x8

    goto :goto_0

    :cond_0
    const/16 p1, 0x48

    :goto_0
    packed-switch p1, :pswitch_data_0

    .line 2188
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/EmvReader;->start()Z

    .line 2189
    const/16 p1, 0x5a

    goto :goto_1

    .line 2188
    :pswitch_0
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/EmvReader;->start()Z

    .line 2189
    const/16 p1, 0x66

    :goto_1
    return p1

    :pswitch_data_0
    .packed-switch 0x8
        :pswitch_0
    .end packed-switch
.end method

.method private operationPREPROCESSING(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2220
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x29

    and-int/lit8 v1, p1, 0x29

    or-int/2addr v0, v1

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    not-int v1, v1

    or-int/lit8 p1, p1, 0x29

    and-int/2addr p1, v1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    .line 2194
    :cond_0
    const-string p1, "paymentsystem.tx.$.TTQ"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v0

    .line 2195
    aget-byte v1, v0, v2

    and-int/lit8 v1, v1, 0x3f

    int-to-byte v1, v1

    aput-byte v1, v0, v2

    .line 2197
    and-int/lit8 v3, v1, 0x7f

    not-int v4, v1

    and-int/lit8 v4, v4, -0x80

    or-int/2addr v3, v4

    and-int/lit8 v1, v1, -0x80

    xor-int v4, v3, v1

    and-int/2addr v1, v3

    or-int/2addr v1, v4

    int-to-byte v1, v1

    aput-byte v1, v0, v2

    .line 2202
    const-string v1, "emv.poi.Amount"

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v1

    .line 2203
    array-length v3, v1

    new-array v3, v3, [B

    .line 2204
    const/4 v4, 0x0

    invoke-static {v1, v4, v3, v4}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCompare([BI[BI)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 2205
    move v3, v4

    goto :goto_0

    :cond_1
    move v3, v2

    :goto_0
    packed-switch v3, :pswitch_data_0

    goto :goto_4

    .line 2220
    :pswitch_0
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v3, 0x6f

    xor-int/lit8 v6, v3, 0x6f

    or-int/2addr v6, v5

    neg-int v6, v6

    neg-int v6, v6

    and-int v7, v5, v6

    or-int/2addr v5, v6

    add-int/2addr v7, v5

    rem-int/lit16 v5, v7, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_2

    .line 2205
    move v5, v2

    goto :goto_1

    :cond_2
    move v5, v4

    :goto_1
    packed-switch v5, :pswitch_data_1

    aget-byte v5, v0, v2

    xor-int/lit8 v6, v5, -0x80

    and-int/lit8 v5, v5, -0x80

    or-int/2addr v5, v6

    int-to-byte v5, v5

    aput-byte v5, v0, v2

    goto :goto_2

    :pswitch_1
    aget-byte v5, v0, v4

    and-int/lit8 v5, v5, 0x3d

    int-to-byte v5, v5

    aput-byte v5, v0, v4

    .line 2220
    :goto_2
    and-int/lit8 v5, v3, 0x3d

    or-int/lit8 v3, v3, 0x3d

    neg-int v3, v3

    neg-int v3, v3

    and-int v6, v5, v3

    or-int/2addr v3, v5

    add-int/2addr v6, v3

    rem-int/lit16 v3, v6, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_3

    .line 2205
    const/16 v3, 0x48

    goto :goto_3

    :cond_3
    const/4 v3, 0x6

    :goto_3
    packed-switch v3, :pswitch_data_2

    .line 2220
    :pswitch_2
    nop

    .line 2214
    :goto_4
    const-string v3, "emv.poi.CVMRequiredLimit"

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/Object;)[B

    move-result-object v3

    .line 2215
    array-length v5, v1

    invoke-static {v3, v4, v1, v4, v5}, Lcom/visa/vac/tc/emvconverter/Utils;->compareArray([BI[BII)I

    move-result v1

    if-eq v1, v2, :cond_4

    .line 2205
    move v1, v2

    goto :goto_5

    :cond_4
    move v1, v4

    :goto_5
    packed-switch v1, :pswitch_data_3

    .line 2220
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v1, v1, 0x56

    sub-int/2addr v1, v2

    rem-int/lit16 v3, v1, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_5

    .line 2216
    :cond_5
    aget-byte v1, v0, v2

    xor-int/lit8 v5, v1, 0x40

    and-int/lit8 v1, v1, 0x40

    xor-int v6, v5, v1

    and-int/2addr v1, v5

    or-int/2addr v1, v6

    int-to-byte v1, v1

    aput-byte v1, v0, v2

    .line 2220
    and-int/lit8 v1, v3, 0x15

    or-int/lit8 v3, v3, 0x15

    add-int/2addr v1, v3

    rem-int/lit16 v3, v1, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_6

    .line 2218
    :cond_6
    :pswitch_3
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2220
    const/16 p1, 0x5a

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x2b

    and-int/lit8 v0, v0, 0x2b

    or-int/2addr v0, v1

    shl-int/2addr v0, v2

    neg-int v1, v1

    not-int v1, v1

    sub-int/2addr v0, v1

    sub-int/2addr v0, v2

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_7

    .line 2205
    move v2, v4

    goto :goto_6

    :cond_7
    nop

    :goto_6
    packed-switch v2, :pswitch_data_4

    .line 2220
    goto :goto_7

    :pswitch_4
    return p1

    :goto_7
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x6
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch
.end method

.method private operationREAD_RECORDS(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 7
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2282
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v1, 0x3b

    and-int/lit8 v2, v0, -0x3c

    not-int v3, v0

    and-int/2addr v3, v1

    or-int/2addr v2, v3

    and-int/lit8 v3, v0, 0x3b

    const/4 v4, 0x1

    shl-int/2addr v3, v4

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_0

    .line 2273
    :cond_0
    iget-boolean v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    const/4 v3, 0x0

    if-eqz v2, :cond_1

    .line 2276
    move v2, v4

    goto :goto_0

    :cond_1
    move v2, v3

    :goto_0
    const/16 v5, 0x94

    packed-switch v2, :pswitch_data_0

    .line 2282
    and-int/lit8 v2, v0, 0x33

    or-int/lit8 v0, v0, 0x33

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_2

    goto :goto_1

    .line 2278
    :pswitch_0
    nop

    .line 2279
    const-string p1, "SE.READ_RECORDS"

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/visa/vac/tc/emvconverter/ApduScript;

    invoke-virtual {p0, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->sendReadRecord(Lcom/visa/vac/tc/emvconverter/ApduScript;[B)B

    move-result p1

    .line 2282
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x73

    sub-int/2addr v0, v4

    or-int/lit8 v2, v0, -0x1

    shl-int/2addr v2, v4

    xor-int/lit8 v0, v0, -0x1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_3

    goto :goto_4

    .line 2276
    :goto_1
    move v0, v3

    goto :goto_2

    :cond_2
    move v0, v4

    :goto_2
    const-string v2, "LV.CDOL2_FROM_RR"

    const-string v6, "LV.CDOL1_FROM_RR"

    packed-switch v0, :pswitch_data_1

    .line 2274
    invoke-virtual {p0, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->sendReadRecord(Lcom/visa/vac/tc/emvconverter/ApduScript;[B)B

    move-result p1

    .line 2275
    const/16 v0, 0x8c

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-static {v6, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2276
    const/16 v0, 0x8d

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_3

    .line 2274
    :pswitch_1
    const/16 v0, 0x2150

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->sendReadRecord(Lcom/visa/vac/tc/emvconverter/ApduScript;[B)B

    move-result p1

    .line 2275
    const/16 v0, 0x1fd9

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-static {v6, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2276
    const/16 v0, 0x3ccc

    invoke-virtual {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2282
    :goto_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x1c

    and-int/lit8 v0, v0, 0x1c

    shl-int/2addr v0, v4

    add-int/2addr v2, v0

    sub-int/2addr v2, v4

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_3

    .line 2281
    :cond_3
    :goto_4
    iget v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    add-int/lit8 v0, v0, 0x3

    sub-int/2addr v0, v4

    sub-int/2addr v0, v3

    sub-int/2addr v0, v4

    iput v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2282
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x3b

    and-int/lit8 v3, v0, 0x3b

    or-int/2addr v2, v3

    shl-int/2addr v2, v4

    not-int v3, v3

    or-int/2addr v0, v1

    and-int/2addr v0, v3

    neg-int v0, v0

    xor-int v1, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v4

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_4

    .line 2276
    const/16 v0, 0x16

    goto :goto_5

    :cond_4
    const/4 v0, 0x3

    :goto_5
    packed-switch v0, :pswitch_data_2

    .line 2282
    goto :goto_6

    :pswitch_2
    return p1

    :goto_6
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x3
        :pswitch_2
    .end packed-switch
.end method

.method private operationREAD_RECORD_PSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 2

    .line 2286
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x38

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    :cond_0
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x3a

    add-int/lit8 v0, v0, 0x0

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    return p1
.end method

.method private operationREMOVE_CANDIDATE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2291
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x11

    or-int/lit8 p1, p1, 0x11

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 2290
    :cond_0
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->removeCandidate()V

    .line 2291
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result p1

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x61

    and-int/lit8 v2, v0, 0x61

    or-int/2addr v1, v2

    shl-int/lit8 v1, v1, 0x1

    not-int v2, v2

    or-int/lit8 v0, v0, 0x61

    and-int/2addr v0, v2

    neg-int v0, v0

    or-int v2, v1, v0

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    return p1
.end method

.method private operationRESTART_OPEN(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 3

    .line 2295
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, p1, 0x7

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    sub-int/2addr v0, v1

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    :cond_0
    const/16 v0, 0x5a

    or-int/lit8 v2, p1, 0x39

    shl-int/2addr v2, v1

    xor-int/lit8 p1, p1, 0x39

    sub-int/2addr v2, p1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_1

    const/4 v1, 0x0

    :cond_1
    packed-switch v1, :pswitch_data_0

    goto :goto_0

    :pswitch_0
    return v0

    :goto_0
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method private operationRETURN_TO_IDLE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 2

    .line 2299
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x51

    not-int v1, v0

    or-int/lit8 p1, p1, 0x51

    and-int/2addr p1, v1

    shl-int/lit8 v0, v0, 0x1

    neg-int v0, v0

    neg-int v0, v0

    or-int v1, p1, v0

    shl-int/lit8 v1, v1, 0x1

    xor-int/2addr p1, v0

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    const/16 p1, 0x1c

    goto :goto_0

    :cond_0
    const/16 p1, 0x50

    :goto_0
    packed-switch p1, :pswitch_data_0

    const/16 p1, 0x5a

    goto :goto_1

    :pswitch_0
    const/16 p1, 0x34

    :goto_1
    return p1

    :pswitch_data_0
    .packed-switch 0x1c
        :pswitch_0
    .end packed-switch
.end method

.method private operationRETURN_TO_PPSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 3

    .line 2498
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x27

    xor-int/lit8 p1, p1, 0x27

    or-int/2addr p1, v0

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    shl-int/lit8 p1, p1, 0x1

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 2496
    :cond_0
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v0, "TRYNEXT"

    iput-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2497
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v0, "Return to Select PPSE. Try Next AID from Candidate List"

    iput-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 2498
    const/16 p1, 0x5a

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x43

    xor-int/lit8 v0, v0, 0x43

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    or-int v2, v1, v0

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    return p1
.end method

.method private operationSELECT(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2311
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x6d

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_0

    .line 2307
    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    packed-switch v0, :pswitch_data_0

    .line 2304
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    .line 2306
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result p1

    .line 2307
    const/16 v0, 0x5a

    if-ne p1, v0, :cond_2

    goto :goto_2

    .line 2304
    :pswitch_0
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    .line 2306
    invoke-virtual {p0}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstCandidate()B

    move-result p1

    .line 2307
    if-nez p1, :cond_1

    move v0, v1

    goto :goto_1

    :cond_1
    move v0, v2

    :goto_1
    packed-switch v0, :pswitch_data_1

    goto :goto_4

    :goto_2
    move v0, v1

    goto :goto_3

    :cond_2
    move v0, v2

    :goto_3
    packed-switch v0, :pswitch_data_2

    .line 2311
    :goto_4
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v0, 0x1d

    xor-int/lit8 v4, v0, 0x1d

    or-int/2addr v4, v3

    or-int v5, v3, v4

    shl-int/2addr v5, v2

    xor-int/2addr v3, v4

    sub-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_3

    .line 2308
    :cond_3
    iget v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    xor-int/lit8 v4, v3, 0x2

    and-int/lit8 v3, v3, 0x2

    shl-int/2addr v3, v2

    add-int/2addr v4, v3

    sub-int/2addr v4, v2

    iput v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2311
    or-int/lit8 v3, v0, 0x15

    shl-int/2addr v3, v2

    xor-int/lit8 v0, v0, 0x15

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_4

    .line 2307
    move v1, v2

    goto :goto_5

    :cond_4
    nop

    :goto_5
    packed-switch v1, :pswitch_data_3

    .line 2311
    :pswitch_1
    nop

    :pswitch_2
    nop

    .line 2307
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, -0x60

    not-int v3, v0

    and-int/lit8 v3, v3, 0x5f

    or-int/2addr v1, v3

    and-int/lit8 v0, v0, 0x5f

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    and-int v2, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    .line 2311
    return p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch
.end method

.method private operationSELECT_FINAL(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 18
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    move-object/from16 v1, p0

    .line 2350
    nop

    .line 2318
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x1d

    and-int/lit8 v3, v0, 0x1d

    or-int/2addr v2, v3

    const/4 v4, 0x1

    shl-int/2addr v2, v4

    not-int v3, v3

    or-int/lit8 v0, v0, 0x1d

    and-int/2addr v0, v3

    neg-int v0, v0

    or-int v3, v2, v0

    shl-int/2addr v3, v4

    xor-int/2addr v0, v2

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_0

    .line 2331
    const/16 v0, 0x60

    goto :goto_0

    :cond_0
    const/16 v0, 0x26

    :goto_0
    const/16 v3, 0x1f

    const/16 v5, 0x5a

    const/4 v6, 0x0

    const/4 v7, 0x0

    packed-switch v0, :pswitch_data_0

    .line 2315
    invoke-direct/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result v0

    .line 2316
    if-ne v0, v3, :cond_2

    goto :goto_3

    .line 2315
    :pswitch_0
    invoke-direct/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result v0

    .line 2316
    if-ne v0, v5, :cond_1

    .line 2331
    move v8, v7

    goto :goto_1

    :cond_1
    move v8, v4

    :goto_1
    packed-switch v8, :pswitch_data_1

    :goto_2
    goto :goto_5

    :pswitch_1
    move v2, v0

    goto/16 :goto_30

    :goto_3
    const/16 v8, 0x44

    goto :goto_4

    :cond_2
    const/16 v8, 0x25

    :goto_4
    packed-switch v8, :pswitch_data_2

    goto :goto_2

    .line 2350
    :goto_5
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v8, v0, 0x55

    xor-int/lit8 v9, v0, 0x55

    or-int/2addr v9, v8

    add-int/2addr v8, v9

    rem-int/lit16 v9, v8, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_3

    .line 2331
    move v8, v4

    goto :goto_6

    :cond_3
    move v8, v7

    :goto_6
    packed-switch v8, :pswitch_data_3

    .line 2318
    iget-boolean v8, v1, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    const/16 v10, 0xd

    if-eqz v8, :cond_4

    goto :goto_7

    :pswitch_2
    :try_start_0
    throw v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2350
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 2331
    :goto_7
    const/16 v8, 0x40

    goto :goto_8

    :cond_4
    move v8, v10

    :goto_8
    const/16 v11, 0xa5

    const/16 v13, 0x6f

    const/16 v14, 0x5f

    const-string v15, "CommunicationError"

    const/16 v2, -0x60c8

    const/16 v9, 0x84

    packed-switch v8, :pswitch_data_4

    goto/16 :goto_19

    .line 2339
    :pswitch_3
    iget-object v3, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    if-eqz v3, :cond_5

    .line 2331
    move v8, v4

    goto :goto_9

    :cond_5
    move v8, v7

    :goto_9
    packed-switch v8, :pswitch_data_5

    .line 2340
    and-int/lit8 v8, v0, 0x5f

    xor-int/2addr v0, v14

    or-int/2addr v0, v8

    add-int/2addr v8, v0

    rem-int/lit16 v0, v8, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_6

    .line 2339
    :cond_6
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0

    if-ne v0, v13, :cond_7

    .line 2331
    move v0, v7

    goto :goto_a

    :cond_7
    move v0, v4

    :goto_a
    packed-switch v0, :pswitch_data_6

    goto/16 :goto_17

    .line 2341
    :pswitch_4
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v0, 0x7b

    and-int/lit8 v8, v0, 0x7b

    or-int/2addr v3, v8

    shl-int/2addr v3, v4

    and-int/lit8 v8, v0, -0x7c

    not-int v0, v0

    and-int/lit8 v0, v0, 0x7b

    or-int/2addr v0, v8

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_8

    .line 2331
    move v0, v7

    goto :goto_b

    :cond_8
    move v0, v4

    :goto_b
    packed-switch v0, :pswitch_data_7

    .line 2341
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v3, 0x68e9

    .line 2340
    invoke-virtual {v0, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v0

    if-eqz v0, :cond_a

    goto :goto_d

    .line 2339
    :pswitch_5
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2340
    invoke-virtual {v0, v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 2331
    const/16 v0, 0x24

    goto :goto_c

    :cond_9
    const/16 v0, 0x42

    :goto_c
    packed-switch v0, :pswitch_data_8

    goto :goto_f

    :goto_d
    move v7, v4

    goto :goto_e

    :cond_a
    nop

    :goto_e
    packed-switch v7, :pswitch_data_9

    goto/16 :goto_17

    .line 2316
    :goto_f
    :pswitch_6
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v0, 0x5c

    and-int/lit8 v0, v0, 0x5c

    shl-int/2addr v0, v4

    add-int/2addr v3, v0

    or-int/lit8 v0, v3, -0x1

    shl-int/2addr v0, v4

    xor-int/lit8 v3, v3, -0x1

    sub-int/2addr v0, v3

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_b

    .line 2331
    const/16 v12, 0xe

    goto :goto_10

    :cond_b
    const/16 v12, 0x2c

    :goto_10
    const/16 v0, 0x3c

    const/16 v3, 0x1c

    packed-switch v12, :pswitch_data_a

    .line 2340
    iget-object v7, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2341
    invoke-virtual {v7, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v7

    if-eqz v7, :cond_d

    goto :goto_12

    .line 2316
    :pswitch_7
    iget-object v7, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v8, 0x15d

    .line 2341
    invoke-virtual {v7, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v7

    if-eqz v7, :cond_c

    .line 2331
    move v7, v0

    goto :goto_11

    :cond_c
    move v7, v3

    :goto_11
    packed-switch v7, :pswitch_data_b

    goto :goto_17

    :goto_12
    const/16 v7, 0x34

    goto :goto_13

    :cond_d
    const/16 v7, 0xc

    :goto_13
    packed-switch v7, :pswitch_data_c

    .line 2316
    :pswitch_8
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v8, v7, 0x10

    and-int/lit8 v7, v7, 0x10

    shl-int/2addr v7, v4

    add-int/2addr v8, v7

    or-int/lit8 v7, v8, -0x1

    shl-int/2addr v7, v4

    xor-int/lit8 v8, v8, -0x1

    sub-int/2addr v7, v8

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_e

    .line 2341
    :cond_e
    nop

    .line 2342
    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v2

    if-nez v2, :cond_f

    .line 2331
    const/16 v3, 0x15

    goto :goto_14

    :cond_f
    nop

    :goto_14
    packed-switch v3, :pswitch_data_d

    goto :goto_17

    .line 2345
    :pswitch_9
    invoke-virtual {v1, v15}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2346
    nop

    .line 2316
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x13

    not-int v7, v3

    or-int/lit8 v2, v2, 0x13

    and-int/2addr v2, v7

    shl-int/2addr v3, v4

    neg-int v3, v3

    neg-int v3, v3

    and-int v7, v2, v3

    or-int/2addr v2, v3

    add-int/2addr v7, v2

    rem-int/lit16 v2, v7, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_10

    .line 2331
    move v9, v0

    goto :goto_15

    :cond_10
    const/16 v9, 0x40

    :goto_15
    packed-switch v9, :pswitch_data_e

    .line 2316
    goto :goto_16

    .line 2350
    :pswitch_a
    nop

    :goto_16
    move v2, v5

    goto/16 :goto_30

    .line 2343
    :goto_17
    :pswitch_b
    nop

    .line 2331
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x41

    and-int/lit8 v0, v0, 0x41

    or-int/2addr v0, v2

    shl-int/2addr v0, v4

    neg-int v2, v2

    and-int v3, v0, v2

    or-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_11

    .line 2350
    :cond_11
    :pswitch_c
    nop

    :goto_18
    const/16 v2, -0x5b

    goto/16 :goto_30

    .line 2319
    :goto_19
    iget-object v8, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    if-eqz v8, :cond_12

    .line 2331
    move/from16 v16, v7

    goto :goto_1a

    :cond_12
    move/from16 v16, v4

    :goto_1a
    const/16 v17, 0xb

    packed-switch v16, :pswitch_data_f

    :goto_1b
    :pswitch_d
    goto/16 :goto_2f

    .line 2341
    :pswitch_e
    add-int/lit8 v0, v0, 0x7e

    sub-int/2addr v0, v4

    rem-int/lit16 v12, v0, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_13

    .line 2331
    move v0, v4

    goto :goto_1c

    :cond_13
    move v0, v7

    :goto_1c
    packed-switch v0, :pswitch_data_10

    .line 2341
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0

    const/16 v8, 0x59

    if-ne v0, v8, :cond_15

    goto :goto_1f

    .line 2319
    :pswitch_f
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0

    if-ne v0, v13, :cond_14

    .line 2331
    const/16 v12, 0x2c

    goto :goto_1d

    :cond_14
    const/16 v12, 0x43

    :goto_1d
    packed-switch v12, :pswitch_data_11

    :goto_1e
    goto :goto_21

    :goto_1f
    move v0, v7

    goto :goto_20

    :cond_15
    move v0, v4

    :goto_20
    packed-switch v0, :pswitch_data_12

    goto :goto_1e

    .line 2319
    :goto_21
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2320
    invoke-virtual {v0, v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 2331
    move v0, v7

    goto :goto_22

    :cond_16
    move v0, v4

    :goto_22
    packed-switch v0, :pswitch_data_13

    goto :goto_1b

    .line 2350
    :pswitch_10
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v8, v0, 0x2f

    shl-int/2addr v8, v4

    and-int/lit8 v12, v0, -0x30

    not-int v0, v0

    and-int/lit8 v0, v0, 0x2f

    or-int/2addr v0, v12

    neg-int v0, v0

    or-int v12, v8, v0

    shl-int/2addr v12, v4

    xor-int/2addr v0, v8

    sub-int/2addr v12, v0

    rem-int/lit16 v0, v12, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_17

    .line 2331
    move v0, v7

    goto :goto_23

    :cond_17
    move v0, v4

    :goto_23
    packed-switch v0, :pswitch_data_14

    .line 2320
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    invoke-virtual {v0, v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v0

    if-eqz v0, :cond_19

    goto :goto_25

    .line 2350
    :pswitch_11
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v8, 0x4ac3

    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 2331
    move v0, v7

    goto :goto_24

    :cond_18
    move v0, v4

    :goto_24
    packed-switch v0, :pswitch_data_15

    goto :goto_1b

    :goto_25
    const/16 v0, 0x9

    goto :goto_26

    :cond_19
    move/from16 v0, v17

    :goto_26
    packed-switch v0, :pswitch_data_16

    .line 2320
    :pswitch_12
    iget-object v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2321
    invoke-virtual {v0, v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    const-string v8, "LV.AID"

    invoke-static {v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    invoke-virtual {v0, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 2331
    move v0, v4

    goto :goto_27

    :cond_1a
    move v0, v7

    :goto_27
    packed-switch v0, :pswitch_data_17

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v8, v0, -0x54

    not-int v9, v0

    and-int/lit8 v9, v9, 0x53

    or-int/2addr v8, v9

    and-int/lit8 v0, v0, 0x53

    shl-int/2addr v0, v4

    add-int/2addr v8, v0

    rem-int/lit16 v0, v8, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_1b

    .line 2324
    :cond_1b
    nop

    .line 2325
    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    if-eqz v0, :cond_1c

    .line 2331
    const/16 v0, 0x47

    goto :goto_28

    :cond_1c
    const/16 v0, 0x37

    :goto_28
    packed-switch v0, :pswitch_data_18

    move-object v0, v6

    goto :goto_2a

    .line 2340
    :pswitch_13
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v8, v0, 0x1f

    xor-int/2addr v0, v3

    or-int/2addr v0, v8

    add-int/2addr v8, v0

    rem-int/lit16 v0, v8, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_1d

    .line 2326
    :cond_1d
    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v0

    check-cast v0, [B

    .line 2340
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v2, 0x33

    and-int/lit8 v2, v2, 0x33

    shl-int/2addr v2, v4

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_1e

    .line 2331
    goto :goto_29

    :cond_1e
    const/4 v14, 0x3

    :goto_29
    packed-switch v14, :pswitch_data_19

    .line 2340
    goto :goto_2a

    .line 2350
    :pswitch_14
    nop

    .line 2328
    :goto_2a
    const-string v2, "LV.DOL_LIST"

    invoke-virtual {v1, v0, v7, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BZLjava/lang/String;)B

    move-result v2

    .line 2329
    if-ne v2, v5, :cond_1f

    .line 2331
    move v0, v4

    goto :goto_2b

    :cond_1f
    move v0, v7

    :goto_2b
    packed-switch v0, :pswitch_data_1a

    goto :goto_2e

    .line 2340
    :pswitch_15
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v3, v0, 0xd

    shl-int/2addr v3, v4

    xor-int/2addr v0, v10

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_20

    .line 2331
    goto :goto_2c

    :cond_20
    move v7, v4

    :goto_2c
    packed-switch v7, :pswitch_data_1b

    .line 2330
    invoke-virtual {v1, v15}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2331
    iget v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    or-int/lit8 v3, v0, 0x1

    shl-int/2addr v3, v4

    xor-int/2addr v0, v4

    sub-int/2addr v3, v0

    iput v3, v1, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    goto :goto_2d

    .line 2330
    :pswitch_16
    invoke-virtual {v1, v15}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2331
    iget v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    shl-int/2addr v0, v4

    iput v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 2318
    :goto_2d
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v0, 0x5

    xor-int/lit8 v0, v0, 0x5

    or-int/2addr v0, v3

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_21

    .line 2350
    :cond_21
    nop

    .line 2331
    :goto_2e
    nop

    .line 2318
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v0, 0x13

    shl-int/2addr v3, v4

    xor-int/lit8 v0, v0, 0x13

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_22

    .line 2350
    :cond_22
    goto :goto_30

    .line 2336
    :goto_2f
    nop

    .line 2331
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x36

    xor-int/lit8 v2, v0, -0x1

    and-int/lit8 v0, v0, -0x1

    shl-int/2addr v0, v4

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_23

    const/16 v17, 0x3d

    :cond_23
    packed-switch v17, :pswitch_data_1c

    goto/16 :goto_18

    .line 2350
    :goto_30
    nop

    .line 2318
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v0, 0x29

    and-int/lit8 v5, v0, 0x29

    or-int/2addr v3, v5

    shl-int/2addr v3, v4

    not-int v5, v5

    or-int/lit8 v0, v0, 0x29

    and-int/2addr v0, v5

    neg-int v0, v0

    xor-int v5, v3, v0

    and-int/2addr v0, v3

    shl-int/2addr v0, v4

    add-int/2addr v5, v0

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_24

    .line 2331
    const/16 v0, 0x14

    goto :goto_31

    :cond_24
    const/16 v0, 0x2b

    :goto_31
    packed-switch v0, :pswitch_data_1d

    .line 2350
    return v2

    .line 2318
    :pswitch_17
    :try_start_1
    invoke-super {v6}, Ljava/lang/Object;->hashCode()I

    throw v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception v0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x26
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x25
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0xd
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x42
        :pswitch_b
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0xe
        :pswitch_7
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x3c
        :pswitch_8
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0xc
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1c
        :pswitch_9
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x40
        :pswitch_a
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_f
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x43
        :pswitch_d
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x1
        :pswitch_d
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x0
        :pswitch_12
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0xb
        :pswitch_d
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x0
        :pswitch_d
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x47
        :pswitch_13
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x3
        :pswitch_14
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x0
        :pswitch_16
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0xb
        :pswitch_c
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x14
        :pswitch_17
    .end packed-switch
.end method

.method private operationSELECT_PPSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 6
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2363
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x6d

    not-int v2, v1

    or-int/lit8 v0, v0, 0x6d

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 2354
    :cond_0
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    .line 2355
    const/16 v0, 0x5a

    if-ne p1, v0, :cond_1

    .line 2363
    const/16 v1, 0x46

    goto :goto_0

    :cond_1
    const/16 v1, 0x58

    :goto_0
    const/4 v3, 0x0

    packed-switch v1, :pswitch_data_0

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, p1, 0x7

    not-int v4, v1

    or-int/lit8 p1, p1, 0x7

    and-int/2addr p1, v4

    shl-int/2addr v1, v2

    add-int/2addr p1, v1

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_2

    .line 2357
    :cond_2
    const/16 p1, 0x61

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    if-eqz p1, :cond_3

    .line 2363
    move p1, v3

    goto :goto_1

    :cond_3
    move p1, v2

    :goto_1
    packed-switch p1, :pswitch_data_1

    .line 2360
    const/16 p1, -0x5b

    goto :goto_2

    .line 2363
    :pswitch_0
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, p1, 0x4f

    shl-int/lit8 v4, v1, 0x1

    and-int/lit8 v5, p1, 0x4f

    not-int v5, v5

    and-int/2addr v1, v5

    sub-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_4

    .line 2358
    :cond_4
    nop

    .line 2363
    add-int/lit8 p1, p1, 0x41

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_5

    :cond_5
    move p1, v0

    goto :goto_3

    :goto_2
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x67

    or-int/lit8 v0, v0, 0x67

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_6

    move v0, v2

    goto :goto_3

    :cond_6
    move v0, v3

    :goto_3
    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v1, v0, 0x59

    shl-int/2addr v1, v2

    xor-int/lit8 v0, v0, 0x59

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_7

    const/16 v0, 0x27

    goto :goto_4

    :cond_7
    const/16 v0, 0x32

    :goto_4
    packed-switch v0, :pswitch_data_2

    goto :goto_5

    :pswitch_2
    return p1

    :goto_5
    const/4 v0, 0x4

    :try_start_0
    div-int/2addr v0, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return p1

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x58
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x32
        :pswitch_2
    .end packed-switch
.end method

.method private operationSELECT_PSE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 13
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2401
    nop

    .line 2379
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x4d

    not-int v2, v1

    or-int/lit8 v0, v0, 0x4d

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    neg-int v1, v1

    neg-int v1, v1

    or-int v3, v0, v1

    shl-int/2addr v3, v2

    xor-int/2addr v0, v1

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_0

    .line 2367
    :cond_0
    invoke-direct {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Lcom/visa/vac/tc/emvconverter/ApduScript;)B

    move-result p1

    .line 2368
    const/4 v0, 0x7

    const/16 v1, 0x5a

    if-ne p1, v1, :cond_1

    .line 2379
    const/16 v3, 0x63

    goto :goto_0

    :cond_1
    move v3, v0

    :goto_0
    const/16 v4, -0x5b

    const/4 v5, -0x1

    packed-switch v3, :pswitch_data_0

    goto/16 :goto_2b

    :pswitch_0
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, p1, 0x43

    or-int/lit8 v6, p1, 0x43

    add-int/2addr v3, v6

    rem-int/lit16 v6, v3, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_2

    .line 2370
    :cond_2
    iget-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/4 v6, 0x0

    if-eqz v3, :cond_3

    .line 2379
    move v7, v6

    goto :goto_1

    :cond_3
    move v7, v2

    :goto_1
    const/16 v8, 0x2d

    const/16 v9, 0x62

    const/4 v10, 0x3

    packed-switch v7, :pswitch_data_1

    .line 2371
    or-int/lit8 v7, p1, 0x73

    shl-int/2addr v7, v2

    xor-int/lit8 p1, p1, 0x73

    sub-int/2addr v7, p1

    rem-int/lit16 p1, v7, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_4

    .line 2379
    move p1, v6

    goto :goto_2

    :cond_4
    move p1, v2

    :goto_2
    packed-switch p1, :pswitch_data_2

    .line 2370
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result p1

    const/16 v3, 0x6f

    if-ne p1, v3, :cond_6

    goto :goto_4

    .line 2371
    :pswitch_1
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result p1

    const/16 v3, 0x61

    if-ne p1, v3, :cond_5

    .line 2379
    const/16 p1, 0x46

    goto :goto_3

    :cond_5
    const/16 p1, 0x35

    :goto_3
    packed-switch p1, :pswitch_data_3

    goto/16 :goto_18

    :goto_4
    const/16 p1, 0x58

    goto :goto_5

    :cond_6
    const/16 p1, 0x59

    :goto_5
    packed-switch p1, :pswitch_data_4

    .line 2382
    :pswitch_2
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x16

    and-int/lit8 v3, p1, -0x1

    or-int/2addr p1, v5

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_7

    .line 2379
    move p1, v6

    goto :goto_6

    :cond_7
    move p1, v2

    :goto_6
    packed-switch p1, :pswitch_data_5

    .line 2382
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v3, 0x24b4

    .line 2371
    invoke-virtual {p1, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result p1

    if-eqz p1, :cond_9

    goto :goto_8

    .line 2370
    :pswitch_3
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v3, 0x84

    .line 2371
    invoke-virtual {p1, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result p1

    if-eqz p1, :cond_8

    .line 2379
    const/16 p1, 0xc

    goto :goto_7

    :cond_8
    const/16 p1, 0x44

    :goto_7
    packed-switch p1, :pswitch_data_6

    goto :goto_a

    :goto_8
    move p1, v6

    goto :goto_9

    :cond_9
    move p1, v2

    :goto_9
    packed-switch p1, :pswitch_data_7

    goto/16 :goto_18

    .line 2371
    :goto_a
    :pswitch_4
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2372
    const/16 v3, 0xa5

    invoke-virtual {p1, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result p1

    if-eqz p1, :cond_a

    .line 2379
    move p1, v2

    goto :goto_b

    :cond_a
    move p1, v6

    :goto_b
    packed-switch p1, :pswitch_data_8

    goto/16 :goto_18

    :pswitch_5
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v7, 0x71

    xor-int/lit8 v11, p1, 0x71

    and-int/lit8 v12, p1, 0x71

    or-int/2addr v11, v12

    shl-int/2addr v11, v2

    and-int/lit8 v12, p1, -0x72

    not-int p1, p1

    and-int/2addr p1, v7

    or-int/2addr p1, v12

    sub-int/2addr v11, p1

    rem-int/lit16 p1, v11, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_b

    .line 2372
    :cond_b
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 2373
    invoke-virtual {p1, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object p1

    const/16 v7, 0x88

    invoke-virtual {p1, v7}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result p1

    if-eqz p1, :cond_c

    .line 2379
    move p1, v2

    goto :goto_c

    :cond_c
    move p1, v6

    :goto_c
    packed-switch p1, :pswitch_data_9

    .line 2371
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x7c

    sub-int/2addr p1, v2

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_d

    .line 2379
    goto :goto_d

    :cond_d
    move v8, v9

    :goto_d
    packed-switch v8, :pswitch_data_a

    .line 2376
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    invoke-virtual {p1, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object p1

    invoke-virtual {p1, v7}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object p1

    iget-object p1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    .line 2378
    nop

    .line 2379
    if-eqz p1, :cond_f

    goto :goto_10

    .line 2376
    :pswitch_6
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData:Lcom/visa/vac/tc/emvconverter/BERTLV;

    const/16 v0, 0x6b41

    invoke-virtual {p1, v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object p1

    const/16 v0, 0x4786

    invoke-virtual {p1, v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object p1

    iget-object p1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    .line 2378
    nop

    .line 2379
    if-eqz p1, :cond_e

    move v0, v2

    goto :goto_e

    :cond_e
    move v0, v6

    :goto_e
    packed-switch v0, :pswitch_data_b

    :goto_f
    move p1, v5

    goto :goto_14

    :goto_10
    const/16 v0, 0x1e

    goto :goto_11

    :cond_f
    const/16 v0, 0x15

    :goto_11
    packed-switch v0, :pswitch_data_c

    goto :goto_f

    .line 2401
    :pswitch_7
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v0, 0x39

    and-int/lit8 v0, v0, 0x39

    or-int/2addr v0, v3

    shl-int/2addr v0, v2

    neg-int v3, v3

    not-int v3, v3

    sub-int/2addr v0, v3

    sub-int/2addr v0, v2

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_10

    .line 2379
    move v0, v2

    goto :goto_12

    :cond_10
    move v0, v6

    :goto_12
    packed-switch v0, :pswitch_data_d

    .line 2380
    check-cast p1, [B

    .line 2382
    aget-byte p1, p1, v6

    goto :goto_13

    .line 2380
    :pswitch_8
    check-cast p1, [B

    .line 2382
    aget-byte p1, p1, v2

    .line 2401
    :goto_13
    nop

    .line 2384
    :goto_14
    if-lez p1, :cond_11

    .line 2379
    move v6, v2

    goto :goto_15

    :cond_11
    nop

    :goto_15
    packed-switch v6, :pswitch_data_e

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v0, 0x65

    xor-int/lit8 v0, v0, 0x65

    or-int/2addr v0, v3

    neg-int v0, v0

    neg-int v0, v0

    and-int v6, v3, v0

    or-int/2addr v0, v3

    add-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v6, v6, 0x2

    if-nez v6, :cond_12

    .line 2384
    :cond_12
    const/16 v0, 0xa

    if-gt p1, v0, :cond_14

    .line 2385
    shl-int/2addr p1, v10

    int-to-byte p1, p1

    .line 2386
    and-int/lit8 v0, p1, -0x5

    not-int v3, p1

    and-int/lit8 v3, v3, 0x4

    or-int/2addr v0, v3

    and-int/lit8 p1, p1, 0x4

    xor-int v3, v0, p1

    and-int/2addr p1, v0

    or-int/2addr p1, v3

    int-to-byte p1, p1

    .line 2387
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v3, "0"

    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    and-int/lit16 p1, p1, 0xff

    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    const-string v0, "LV.EMV_SFI"

    invoke-virtual {p0, v0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2388
    const-string p1, "LV.PSE_RR"

    const-string v0, "00"

    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2389
    nop

    .line 2379
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x40

    or-int/lit8 v0, p1, -0x1

    shl-int/2addr v0, v2

    xor-int/2addr p1, v5

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_13

    const/16 p1, 0x5b

    goto :goto_16

    :cond_13
    const/16 p1, 0x2b

    :goto_16
    packed-switch p1, :pswitch_data_f

    .line 2401
    :pswitch_9
    move p1, v1

    goto/16 :goto_2b

    .line 2391
    :cond_14
    :pswitch_a
    nop

    .line 2379
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x7b

    xor-int/lit8 p1, p1, 0x7b

    or-int/2addr p1, v0

    not-int p1, p1

    sub-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_15

    goto :goto_17

    :cond_15
    const/16 v1, 0x29

    :goto_17
    packed-switch v1, :pswitch_data_10

    .line 2401
    goto/16 :goto_29

    .line 2394
    :goto_18
    :pswitch_b
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    if-eqz p1, :cond_16

    .line 2379
    move v9, v10

    goto :goto_19

    :cond_16
    nop

    :goto_19
    packed-switch v9, :pswitch_data_11

    .line 2394
    goto :goto_1b

    .line 2379
    :pswitch_c
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v1, 0xd

    xor-int/lit8 v1, v1, 0xd

    or-int/2addr v1, v3

    neg-int v1, v1

    neg-int v1, v1

    xor-int v7, v3, v1

    and-int/2addr v1, v3

    shl-int/2addr v1, v2

    add-int/2addr v7, v1

    rem-int/lit16 v1, v7, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_17

    const/16 v3, 0x4a

    goto :goto_1a

    :cond_17
    const/16 v3, 0x26

    :goto_1a
    packed-switch v3, :pswitch_data_12

    .line 2371
    :pswitch_d
    xor-int/lit8 v3, v1, 0x77

    and-int/lit8 v1, v1, 0x77

    shl-int/2addr v1, v2

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_18

    .line 2401
    :cond_18
    move v1, v2

    goto :goto_1c

    .line 2379
    :goto_1b
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v1, 0x2d

    not-int v7, v3

    or-int/2addr v1, v8

    and-int/2addr v1, v7

    shl-int/2addr v3, v2

    add-int/2addr v1, v3

    rem-int/lit16 v3, v1, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_19

    .line 2401
    :cond_19
    move v1, v6

    .line 2394
    :goto_1c
    invoke-interface {p1}, Ljava/util/List;->size()I

    move-result p1

    if-lez p1, :cond_1a

    .line 2379
    move p1, v2

    goto :goto_1d

    :cond_1a
    move p1, v6

    :goto_1d
    packed-switch p1, :pswitch_data_13

    .line 2401
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, p1, 0x7

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    neg-int p1, p1

    neg-int p1, p1

    or-int v0, v3, p1

    shl-int/2addr v0, v2

    xor-int/2addr p1, v3

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_1c

    goto :goto_20

    .line 2394
    :pswitch_e
    nop

    .line 2382
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x7b

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_1b

    .line 2379
    move p1, v6

    goto :goto_1e

    :cond_1b
    move p1, v2

    :goto_1e
    packed-switch p1, :pswitch_data_14

    .line 2382
    goto :goto_1f

    .line 2401
    :pswitch_f
    nop

    .line 2394
    :goto_1f
    move p1, v6

    goto :goto_23

    .line 2379
    :goto_20
    const/16 v10, 0x57

    goto :goto_21

    :cond_1c
    nop

    :goto_21
    packed-switch v10, :pswitch_data_15

    .line 2401
    goto :goto_22

    .line 2394
    :pswitch_10
    nop

    .line 2401
    :goto_22
    move p1, v2

    .line 2394
    :goto_23
    and-int/2addr p1, v1

    if-eqz p1, :cond_1d

    .line 2379
    move p1, v2

    goto :goto_24

    :cond_1d
    move p1, v6

    :goto_24
    packed-switch p1, :pswitch_data_16

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x50

    or-int/lit8 v0, p1, -0x1

    shl-int/2addr v0, v2

    xor-int/2addr p1, v5

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_1f

    goto :goto_27

    .line 2397
    :pswitch_11
    nop

    .line 2371
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x5a

    sub-int/2addr p1, v6

    sub-int/2addr p1, v2

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_1e

    .line 2379
    goto :goto_25

    :cond_1e
    move v6, v2

    :goto_25
    packed-switch v6, :pswitch_data_17

    .line 2401
    goto :goto_26

    .line 2371
    :pswitch_12
    nop

    .line 2401
    :goto_26
    move p1, v5

    goto :goto_2b

    .line 2395
    :cond_1f
    :goto_27
    nop

    .line 2371
    const/16 v0, 0x37

    xor-int/lit8 v1, p1, 0x37

    and-int/lit8 v3, p1, 0x37

    or-int/2addr v1, v3

    shl-int/2addr v1, v2

    and-int/lit8 v3, p1, -0x38

    not-int p1, p1

    and-int/2addr p1, v0

    or-int/2addr p1, v3

    neg-int p1, p1

    xor-int v0, v1, p1

    and-int/2addr p1, v1

    shl-int/2addr p1, v2

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_20

    .line 2379
    goto :goto_28

    :cond_20
    move v6, v2

    :goto_28
    packed-switch v6, :pswitch_data_18

    .line 2401
    :goto_29
    goto :goto_2a

    .line 2371
    :pswitch_13
    nop

    .line 2401
    :goto_2a
    :pswitch_14
    move p1, v4

    :goto_2b
    nop

    .line 2379
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x9

    xor-int/lit8 v0, v0, 0x9

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    or-int v3, v1, v0

    shl-int/lit8 v2, v3, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    .line 2401
    return p1

    :pswitch_data_0
    .packed-switch 0x63
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x46
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x59
        :pswitch_b
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x44
        :pswitch_b
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x2d
        :pswitch_6
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1e
        :pswitch_7
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_a
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x5b
        :pswitch_9
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x5a
        :pswitch_14
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x3
        :pswitch_c
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x4a
        :pswitch_d
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x3
        :pswitch_10
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x0
        :pswitch_12
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch
.end method

.method private operationSET_MESSAGE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 5

    .line 2410
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x37

    xor-int/lit8 v0, v0, 0x37

    or-int/2addr v0, v1

    xor-int v2, v1, v0

    and-int/2addr v0, v1

    const/4 v1, 0x1

    shl-int/2addr v0, v1

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    .line 2405
    :cond_0
    const/16 v0, -0x5b

    .line 2406
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptOutput()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x0

    if-eqz v2, :cond_1

    .line 2408
    move v2, v1

    goto :goto_0

    :cond_1
    move v2, v3

    :goto_0
    packed-switch v2, :pswitch_data_0

    :goto_1
    goto/16 :goto_5

    .line 2410
    :pswitch_0
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v2, v2, 0x23

    sub-int/2addr v2, v1

    xor-int/lit8 v4, v2, -0x1

    and-int/lit8 v2, v2, -0x1

    shl-int/2addr v2, v1

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_2

    .line 2406
    :cond_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v2

    if-eqz v2, :cond_3

    .line 2408
    const/16 v2, 0x2e

    goto :goto_2

    :cond_3
    const/16 v2, 0xc

    :goto_2
    packed-switch v2, :pswitch_data_1

    goto :goto_1

    .line 2410
    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x7d

    not-int v4, v2

    or-int/lit8 v0, v0, 0x7d

    and-int/2addr v0, v4

    shl-int/2addr v2, v1

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_4

    .line 2408
    goto :goto_3

    :cond_4
    move v3, v1

    :goto_3
    const/16 v0, 0x5a

    packed-switch v3, :pswitch_data_2

    .line 2407
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptOutput()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2408
    move p1, v0

    goto :goto_4

    .line 2407
    :pswitch_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptOutput()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object p1

    invoke-static {v2, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2408
    const/16 p1, 0x4c

    .line 2410
    :goto_4
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x5a

    or-int/2addr v0, v2

    add-int/2addr v3, v0

    xor-int/lit8 v0, v3, -0x1

    and-int/lit8 v2, v3, -0x1

    shl-int/lit8 v1, v2, 0x1

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_5

    :cond_5
    move v0, p1

    :goto_5
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x9

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_6

    .line 2408
    const/16 p1, 0x3d

    goto :goto_6

    :cond_6
    const/16 p1, 0x35

    :goto_6
    packed-switch p1, :pswitch_data_3

    .line 2410
    goto :goto_7

    :pswitch_3
    return v0

    :goto_7
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x2e
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x35
        :pswitch_3
    .end packed-switch
.end method

.method private operationSTART_APDU(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 8

    .line 2418
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x1a

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    const/16 v3, 0x1a

    xor-int/2addr v0, v3

    sub-int/2addr v1, v0

    or-int/lit8 v0, v1, -0x1

    shl-int/2addr v0, v2

    const/4 v4, -0x1

    xor-int/2addr v1, v4

    sub-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 2414
    :cond_0
    nop

    .line 2415
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 2416
    const/4 v0, 0x4

    goto :goto_0

    :cond_1
    const/16 v0, 0x5d

    :goto_0
    const/4 v1, 0x0

    const/4 v5, 0x0

    packed-switch v0, :pswitch_data_0

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v6, v0, 0xf

    and-int/lit8 v0, v0, 0xf

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    or-int v7, v6, v0

    shl-int/2addr v7, v2

    xor-int/2addr v0, v6

    sub-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_2

    const/16 v3, 0x51

    :cond_2
    packed-switch v3, :pswitch_data_1

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    goto :goto_5

    .line 2415
    :pswitch_0
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getScriptInput()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    if-eqz p1, :cond_3

    .line 2416
    const/16 p1, 0x8

    goto :goto_1

    :cond_3
    const/16 p1, 0x45

    :goto_1
    packed-switch p1, :pswitch_data_2

    .line 2418
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x7e

    or-int/lit8 p1, p1, 0x7e

    add-int/2addr v0, p1

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_4

    .line 2416
    move p1, v1

    goto :goto_2

    :cond_4
    move p1, v2

    :goto_2
    packed-switch p1, :pswitch_data_3

    const/16 p1, 0x4a

    :goto_3
    move v4, p1

    goto :goto_4

    :pswitch_1
    const/16 p1, 0x5a

    goto :goto_3

    .line 2418
    :goto_4
    nop

    :pswitch_2
    nop

    .line 2416
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v0, p1, 0x1d

    shl-int/2addr v0, v2

    xor-int/lit8 p1, p1, 0x1d

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_5

    move v2, v1

    :cond_5
    packed-switch v2, :pswitch_data_4

    .line 2418
    return v4

    .line 2416
    :pswitch_3
    :try_start_0
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :goto_5
    :try_start_1
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x5d
        :pswitch_2
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1a
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x45
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch
.end method

.method private operationTERMINATE(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 13

    .line 2492
    const-string p1, "TRYAGAIN"

    const-string v0, "Error"

    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v1, v1, 0x5

    rem-int/lit16 v2, v1, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    const/16 v2, 0x11

    if-nez v1, :cond_0

    .line 2470
    const/16 v1, 0xb

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    const/4 v3, 0x0

    const-string v4, "emv.tx.cal.ErrorCode"

    packed-switch v1, :pswitch_data_0

    .line 2455
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    if-eqz v1, :cond_1

    goto :goto_1

    :pswitch_0
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    :try_start_0
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2492
    :catchall_0
    move-exception p1

    throw p1

    .line 2470
    :goto_1
    const/16 v1, 0x1c

    goto :goto_2

    :cond_1
    const/16 v1, 0x60

    :goto_2
    const/16 v5, 0x3d

    const/4 v6, 0x1

    packed-switch v1, :pswitch_data_1

    goto :goto_3

    .line 2455
    :pswitch_1
    nop

    .line 2492
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v1, 0x3d

    xor-int/2addr v1, v5

    or-int/2addr v1, v4

    not-int v1, v1

    sub-int/2addr v4, v1

    sub-int/2addr v4, v6

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_2

    :cond_2
    const-string v1, "Null"

    goto :goto_4

    :goto_3
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v7, 0x51

    xor-int/lit8 v8, v1, 0x51

    and-int/lit8 v9, v1, 0x51

    or-int/2addr v8, v9

    shl-int/2addr v8, v6

    and-int/lit8 v9, v1, -0x52

    not-int v1, v1

    and-int/2addr v1, v7

    or-int/2addr v1, v9

    sub-int/2addr v8, v1

    rem-int/lit16 v1, v8, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_3

    .line 2455
    :cond_3
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 2492
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v4, 0x5

    xor-int/lit8 v4, v4, 0x5

    or-int/2addr v4, v7

    or-int v8, v7, v4

    shl-int/2addr v8, v6

    xor-int/2addr v4, v7

    sub-int/2addr v8, v4

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_4

    .line 2456
    :cond_4
    :goto_4
    iget-object v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v7, "TERMINATED"

    iput-object v7, v4, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2459
    const/16 v4, -0x60c9

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v4

    .line 19401
    sget-object v8, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v9, "emv.tx.iam.UnpredictableNumber"

    invoke-static {v9, v4, v3, v8}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 2463
    const/4 v3, 0x7

    const/4 v4, 0x0

    :try_start_1
    const-string v8, "ApplicationNotFound"

    invoke-virtual {v1, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_5

    .line 2470
    move v8, v6

    goto :goto_5

    :cond_5
    move v8, v4

    :goto_5
    packed-switch v8, :pswitch_data_2

    .line 2468
    const-string v8, "GPOSW6984"
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_8

    .line 2492
    :pswitch_2
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v7, v1, 0x74

    or-int/lit8 v1, v1, 0x74

    add-int/2addr v7, v1

    sub-int/2addr v7, v4

    sub-int/2addr v7, v6

    rem-int/lit16 v1, v7, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_6

    .line 2464
    :cond_6
    :try_start_2
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v7, "TRYNEXT"

    iput-object v7, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2465
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v7, "Application Not Found"

    iput-object v7, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 2492
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x7d

    not-int v7, v1

    or-int/lit8 v0, v0, 0x7d

    and-int/2addr v0, v7

    shl-int/2addr v1, v6

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_7

    .line 2470
    move v0, v3

    goto :goto_6

    :cond_7
    const/16 v0, 0x42

    :goto_6
    packed-switch v0, :pswitch_data_3

    .line 2492
    :cond_8
    :goto_7
    :pswitch_3
    goto/16 :goto_12

    .line 2468
    :goto_8
    :try_start_3
    invoke-virtual {v1, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_9

    .line 2470
    move v8, v6

    goto :goto_9

    :cond_9
    move v8, v4

    :goto_9
    packed-switch v8, :pswitch_data_4

    .line 2472
    const-string v7, "GPOSW6986"
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_d

    .line 2455
    :pswitch_4
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v8, v1, 0x3f

    and-int/lit8 v1, v1, 0x3f

    shl-int/2addr v1, v6

    add-int/2addr v8, v1

    rem-int/lit16 v1, v8, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_a

    .line 2470
    move v1, v6

    goto :goto_a

    :cond_a
    move v1, v4

    :goto_a
    const-string v8, "Switch Interface not supported"

    packed-switch v1, :pswitch_data_5

    .line 2469
    :try_start_4
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    goto :goto_b

    :pswitch_5
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v7, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2470
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v8, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    goto :goto_c

    .line 2469
    :goto_b
    iput-object v7, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2470
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v8, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    const/4 v1, 0x5

    :try_start_5
    div-int/2addr v1, v4
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 2492
    :goto_c
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x1d

    not-int v7, v1

    or-int/lit8 v0, v0, 0x1d

    and-int/2addr v0, v7

    shl-int/2addr v1, v6

    xor-int v7, v0, v1

    and-int/2addr v0, v1

    shl-int/2addr v0, v6

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_8

    goto :goto_7

    .line 2455
    :catchall_1
    move-exception p1

    throw p1

    .line 2472
    :goto_d
    :try_start_6
    invoke-virtual {v1, v7}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    if-eqz v7, :cond_b

    .line 2470
    const/16 v7, 0x58

    goto :goto_e

    :cond_b
    const/16 v7, 0x34

    :goto_e
    const/16 v8, 0x33

    packed-switch v7, :pswitch_data_6

    .line 2492
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v7, v1, 0x33

    and-int/2addr v1, v8

    shl-int/2addr v1, v6

    neg-int v1, v1

    neg-int v1, v1

    or-int v8, v7, v1

    shl-int/2addr v8, v6

    xor-int/2addr v1, v7

    sub-int/2addr v8, v1

    rem-int/lit16 v1, v8, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_f

    goto :goto_11

    .line 2477
    :pswitch_6
    :try_start_7
    const-string v7, "MISSINGTAG"

    invoke-virtual {v1, v7}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v7

    if-eqz v7, :cond_d

    .line 2478
    const-string v7, "\\."

    invoke-virtual {v1, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 2479
    iget-object v7, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    new-instance v9, Ljava/lang/StringBuilder;

    const-string v10, "The "

    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    array-length v10, v1

    and-int/lit8 v11, v10, -0x1

    not-int v12, v11

    or-int/lit8 v10, v10, -0x1

    and-int/2addr v10, v12

    shl-int/2addr v11, v6

    add-int/2addr v10, v11

    aget-object v1, v1, v10

    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v9, " is either missing, invalid, or empty"

    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v7, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    .line 2492
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x4f

    xor-int/lit8 v0, v0, 0x4f

    or-int/2addr v0, v1

    and-int v7, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_c

    .line 2470
    const/16 v8, 0x12

    goto :goto_f

    :cond_c
    nop

    :goto_f
    packed-switch v8, :pswitch_data_7

    .line 2492
    goto/16 :goto_7

    .line 2483
    :cond_d
    :try_start_8
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v0, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    .line 2470
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x68

    sub-int/2addr v0, v4

    sub-int/2addr v0, v6

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_e

    move v0, v4

    goto :goto_10

    :cond_e
    move v0, v6

    :goto_10
    packed-switch v0, :pswitch_data_8

    .line 2492
    goto/16 :goto_7

    .line 2473
    :cond_f
    :goto_11
    :try_start_9
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object p1, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 2474
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v7, "Please Refer To Payment Device For More Info."

    iput-object v7, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    .line 2492
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, v0, 0x3b

    and-int/lit8 v7, v0, 0x3b

    or-int/2addr v1, v7

    shl-int/2addr v1, v6

    not-int v7, v7

    or-int/lit8 v0, v0, 0x3b

    and-int/2addr v0, v7

    neg-int v0, v0

    and-int v7, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_8

    goto/16 :goto_7

    .line 2485
    :catch_0
    move-exception v1

    .line 2486
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v0, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 2489
    :goto_12
    :pswitch_7
    new-array v0, v6, [B

    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v1, v1, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    if-ne v1, p1, :cond_10

    .line 2470
    const/16 p1, 0x1a

    goto :goto_13

    :cond_10
    const/16 p1, 0x10

    :goto_13
    packed-switch p1, :pswitch_data_9

    .line 2489
    const/16 v2, -0x10

    goto :goto_16

    .line 2455
    :pswitch_8
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x60

    sub-int/2addr p1, v6

    rem-int/lit16 v1, p1, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_11

    .line 2470
    goto :goto_14

    :cond_11
    move v6, v4

    :goto_14
    packed-switch v6, :pswitch_data_a

    .line 2489
    const/16 v2, 0x20

    goto :goto_15

    .line 2455
    :pswitch_9
    nop

    .line 2492
    :goto_15
    :pswitch_a
    goto :goto_18

    :goto_16
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, p1, 0x57

    or-int/lit8 p1, p1, 0x57

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_12

    .line 2470
    move v5, v3

    goto :goto_17

    :cond_12
    nop

    :goto_17
    packed-switch v5, :pswitch_data_b

    .line 2492
    goto :goto_15

    .line 2489
    :goto_18
    aput-byte v2, v0, v4

    .line 2490
    const/16 p1, 0xaa

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 2492
    const/16 p1, 0x5a

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x48

    and-int/lit8 v1, v0, -0x1

    or-int/lit8 v0, v0, -0x1

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    return p1

    :pswitch_data_0
    .packed-switch 0xb
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x60
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x42
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x34
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x12
        :pswitch_3
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1a
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x7
        :pswitch_a
    .end packed-switch
.end method

.method private operationVALIDATE_DATA(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 7

    .line 2430
    nop

    .line 2426
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x2

    and-int/lit8 p1, p1, 0x2

    const/4 v1, 0x1

    shl-int/2addr p1, v1

    add-int/2addr v0, p1

    sub-int/2addr v0, v1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    .line 2422
    :cond_0
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    const-string v0, "KV.MANDATORY_CARD_DATA"

    invoke-virtual {p1, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/lang/String;

    const-string v0, ","

    invoke-virtual {p1, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    .line 2423
    array-length v0, p1

    .line 2426
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x23

    xor-int/lit8 v2, v2, 0x23

    or-int/2addr v2, v3

    xor-int v4, v3, v2

    and-int/2addr v2, v3

    shl-int/2addr v2, v1

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    const/16 v2, 0x5a

    if-eqz v4, :cond_1

    move v3, v2

    goto :goto_0

    :cond_1
    const/16 v3, 0x2a

    :goto_0
    packed-switch v3, :pswitch_data_0

    goto :goto_1

    .line 2430
    :pswitch_0
    nop

    .line 2423
    :goto_1
    const/4 v3, 0x0

    move v4, v3

    :cond_2
    :goto_2
    if-ge v4, v0, :cond_3

    .line 2426
    const/16 v5, 0x27

    goto :goto_3

    :cond_3
    const/16 v5, 0x62

    :goto_3
    packed-switch v5, :pswitch_data_1

    .line 2430
    goto/16 :goto_8

    .line 2426
    :pswitch_1
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v6, v5, 0x1b

    shl-int/2addr v6, v1

    xor-int/lit8 v5, v5, 0x1b

    sub-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_4

    .line 2423
    :cond_4
    aget-object v5, p1, v4

    .line 2424
    sget-object v6, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig:Landroid/util/ArrayMap;

    invoke-virtual {v6, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/String;

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig(Ljava/lang/String;)[B

    move-result-object v5

    if-nez v5, :cond_5

    .line 2426
    move v5, v1

    goto :goto_4

    :cond_5
    move v5, v3

    :goto_4
    packed-switch v5, :pswitch_data_2

    .line 2423
    or-int/lit8 v5, v4, -0xc

    shl-int/2addr v5, v1

    and-int/lit8 v6, v4, 0xb

    not-int v4, v4

    and-int/lit8 v4, v4, -0xc

    or-int/2addr v4, v6

    sub-int/2addr v5, v4

    add-int/lit8 v5, v5, 0xe

    and-int/lit8 v4, v5, -0x1

    or-int/lit8 v5, v5, -0x1

    add-int/2addr v4, v5

    goto :goto_7

    .line 2430
    :pswitch_2
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x5d

    sub-int/2addr p1, v1

    and-int/lit8 v0, p1, -0x1

    or-int/lit8 p1, p1, -0x1

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_6

    .line 2426
    const/16 p1, 0x4c

    goto :goto_5

    :cond_6
    const/16 p1, 0x41

    :goto_5
    packed-switch p1, :pswitch_data_3

    const/16 p1, 0x40

    goto :goto_6

    :pswitch_3
    const/16 p1, -0x5b

    .line 2430
    :goto_6
    return p1

    :goto_7
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v6, v5, 0x17

    and-int/lit8 v5, v5, 0x17

    shl-int/2addr v5, v1

    neg-int v5, v5

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v6, v5

    sub-int/2addr v6, v1

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_2

    goto :goto_2

    .line 2426
    :goto_8
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x3b

    not-int v4, v0

    or-int/lit8 p1, p1, 0x3b

    and-int/2addr p1, v4

    shl-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr p1, v0

    sub-int/2addr p1, v1

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_7

    goto :goto_9

    :cond_7
    move v1, v3

    :goto_9
    packed-switch v1, :pswitch_data_4

    goto :goto_a

    .line 2430
    :pswitch_4
    return v2

    .line 2426
    :goto_a
    const/16 p1, 0x47

    :try_start_0
    div-int/2addr p1, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return v2

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x2a
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x27
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x41
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch
.end method

.method private operationVERIFY_AFL(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 9
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 2451
    nop

    .line 2438
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p1, 0x11

    or-int/lit8 p1, p1, 0x11

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    const/4 v0, 0x1

    shl-int/2addr p1, v0

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/16 p1, 0x49

    if-eqz v1, :cond_0

    .line 2435
    const/16 v1, 0x9

    goto :goto_0

    :cond_0
    move v1, p1

    :goto_0
    const/16 v2, 0x1e

    const/16 v3, 0x4c

    const/16 v4, 0x94

    const/4 v5, 0x0

    packed-switch v1, :pswitch_data_0

    const/16 v1, 0x7a72

    invoke-virtual {p0, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v1

    if-eqz v1, :cond_2

    goto :goto_2

    :pswitch_0
    invoke-virtual {p0, v4}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object v1

    if-eqz v1, :cond_1

    goto :goto_1

    :cond_1
    move v3, v2

    :goto_1
    packed-switch v3, :pswitch_data_1

    goto :goto_3

    :cond_2
    const/16 v3, 0x18

    :goto_2
    packed-switch v3, :pswitch_data_2

    :goto_3
    goto :goto_6

    :pswitch_1
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_3

    move p1, v5

    goto :goto_4

    :cond_3
    move p1, v0

    :goto_4
    packed-switch p1, :pswitch_data_3

    goto :goto_5

    .line 2451
    :pswitch_2
    nop

    .line 2435
    :goto_5
    move p1, v5

    goto :goto_9

    .line 2451
    :goto_6
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, p1, 0x2d

    and-int/lit8 v3, p1, 0x2d

    or-int/2addr v1, v3

    shl-int/2addr v1, v0

    not-int v3, v3

    or-int/lit8 p1, p1, 0x2d

    and-int/2addr p1, v3

    neg-int p1, p1

    and-int v3, v1, p1

    or-int/2addr p1, v1

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_4

    .line 2435
    const/16 p1, 0x4d

    goto :goto_7

    :cond_4
    const/16 p1, 0x60

    :goto_7
    packed-switch p1, :pswitch_data_4

    .line 2451
    move p1, v5

    goto :goto_8

    .line 2435
    :pswitch_3
    move p1, v0

    .line 2451
    :goto_8
    nop

    .line 2435
    :goto_9
    const/16 v1, 0x27

    const/16 v3, 0x5f

    if-eqz p1, :cond_5

    move p1, v1

    goto :goto_a

    :cond_5
    move p1, v3

    :goto_a
    const/16 v6, -0x5b

    packed-switch p1, :pswitch_data_5

    .line 2446
    goto :goto_e

    .line 2449
    :pswitch_4
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, p1, 0x21

    or-int/lit8 p1, p1, 0x21

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_6

    .line 2435
    move p1, v0

    goto :goto_b

    :cond_6
    move p1, v5

    :goto_b
    packed-switch p1, :pswitch_data_6

    .line 2437
    const/16 p1, 0x2655

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    .line 2438
    if-eqz p1, :cond_8

    goto :goto_c

    .line 2437
    :pswitch_5
    invoke-virtual {p0, v4}, Lcom/visa/vac/tc/emvconverter/CAL;->getFirstGenData(S)[B

    move-result-object p1

    .line 2438
    if-eqz p1, :cond_8

    .line 2442
    :goto_c
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration([B)B

    move-result p1

    .line 2451
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v4, 0x59

    and-int/lit8 v7, v3, -0x5a

    not-int v8, v3

    and-int/2addr v8, v4

    or-int/2addr v7, v8

    and-int/2addr v3, v4

    shl-int/2addr v3, v0

    neg-int v3, v3

    neg-int v3, v3

    or-int v4, v7, v3

    shl-int/2addr v4, v0

    xor-int/2addr v3, v7

    sub-int/2addr v4, v3

    rem-int/lit16 v3, v4, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_7

    .line 2435
    const/16 v3, 0x31

    goto :goto_d

    :cond_7
    const/16 v3, 0x5e

    :goto_d
    packed-switch v3, :pswitch_data_7

    .line 2451
    :pswitch_6
    goto :goto_11

    .line 2439
    :cond_8
    const-string p1, "TERMINATE::AFL TLV Contains No Value."

    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2440
    new-instance v0, Ljava/lang/Exception;

    invoke-direct {v0, p1}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2438
    :goto_e
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v4, p1, 0x69

    shl-int/2addr v4, v0

    xor-int/lit8 p1, p1, 0x69

    sub-int/2addr v4, p1

    rem-int/lit16 p1, v4, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_9

    .line 2435
    goto :goto_f

    :cond_9
    const/16 v3, 0x3c

    :goto_f
    packed-switch v3, :pswitch_data_8

    .line 2451
    goto :goto_10

    .line 2438
    :pswitch_7
    nop

    .line 2448
    :goto_10
    move p1, v6

    :goto_11
    if-ne p1, v6, :cond_a

    .line 2435
    goto :goto_12

    :cond_a
    const/16 v2, 0x47

    :goto_12
    const/4 v3, 0x0

    packed-switch v2, :pswitch_data_9

    goto :goto_15

    .line 2451
    :pswitch_8
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v2, 0x27

    or-int/2addr v1, v2

    add-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_b

    .line 2435
    move v1, v5

    goto :goto_13

    :cond_b
    move v1, v0

    :goto_13
    packed-switch v1, :pswitch_data_a

    .line 2449
    invoke-virtual {p0, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    goto :goto_14

    :pswitch_9
    invoke-virtual {p0, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 2451
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v1, 0x6d

    xor-int/lit8 v1, v1, 0x6d

    or-int/2addr v1, v2

    neg-int v1, v1

    neg-int v1, v1

    and-int v4, v2, v1

    or-int/2addr v1, v2

    add-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_c

    goto :goto_15

    .line 2449
    :goto_14
    :try_start_0
    throw v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2451
    :catchall_0
    move-exception p1

    throw p1

    :cond_c
    :goto_15
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v1, 0x79

    shl-int/2addr v2, v0

    xor-int/lit8 v1, v1, 0x79

    sub-int/2addr v2, v1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_d

    .line 2435
    move v0, v5

    goto :goto_16

    :cond_d
    nop

    :goto_16
    packed-switch v0, :pswitch_data_b

    .line 2451
    return p1

    :pswitch_a
    :try_start_1
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x49
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1e
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x18
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x60
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x27
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x5e
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x5f
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1e
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_a
    .end packed-switch
.end method

.method private setTerminate(Lcom/visa/vac/tc/emvconverter/ApduScript;)B
    .locals 20

    move-object/from16 v1, p0

    .line 2850
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x3b

    const/16 v3, 0x3b

    or-int/2addr v0, v3

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v4, 0x2

    rem-int/2addr v2, v4

    if-eqz v2, :cond_0

    .line 2750
    :cond_0
    nop

    .line 2752
    nop

    .line 2754
    nop

    .line 2755
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    const-string v5, "SE.GEN_AC2"

    invoke-virtual {v2, v5}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 2812
    const/16 v2, 0x5c

    goto :goto_0

    :cond_1
    const/16 v2, 0x12

    :goto_0
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    packed-switch v2, :pswitch_data_0

    move-object v2, v6

    goto :goto_4

    .line 2850
    :pswitch_0
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v9, v2, 0x67

    and-int/lit8 v2, v2, 0x67

    shl-int/2addr v2, v8

    add-int/2addr v9, v2

    rem-int/lit16 v2, v9, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_2

    .line 2812
    const/16 v2, 0x63

    goto :goto_1

    :cond_2
    const/16 v2, 0x2e

    :goto_1
    packed-switch v2, :pswitch_data_1

    .line 2756
    const-string v2, "KV.NEXT_AUTH_STATUS"

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    goto :goto_2

    :pswitch_1
    const-string v2, "KV.NEXT_AUTH_STATUS"

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    const/16 v9, 0x55

    :try_start_0
    div-int/2addr v9, v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_2

    .line 2850
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    :goto_2
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v9, v9, 0x43

    rem-int/lit16 v10, v9, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_3

    .line 2812
    move v9, v8

    goto :goto_3

    :cond_3
    move v9, v7

    :goto_3
    packed-switch v9, :pswitch_data_2

    .line 2850
    :pswitch_2
    nop

    .line 2758
    :goto_4
    if-nez v2, :cond_4

    .line 2812
    const/16 v9, 0x53

    goto :goto_5

    :cond_4
    const/16 v9, 0x19

    :goto_5
    const/16 v10, 0x37

    packed-switch v9, :pswitch_data_3

    .line 2850
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v9, v2, 0x37

    and-int/lit8 v11, v2, 0x37

    or-int/2addr v9, v11

    shl-int/2addr v9, v8

    not-int v11, v11

    or-int/2addr v2, v10

    and-int/2addr v2, v11

    sub-int/2addr v9, v2

    rem-int/lit16 v2, v9, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_5

    .line 2759
    :cond_5
    const-string v2, "KV.AUTH_STATUS"

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 2790
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v11, v9, 0x71

    or-int/lit8 v9, v9, 0x71

    neg-int v9, v9

    neg-int v9, v9

    and-int v12, v11, v9

    or-int/2addr v9, v11

    add-int/2addr v12, v9

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v4

    .line 2761
    :pswitch_3
    const-string v9, "LV.AUTH_STATUS"

    invoke-static {v9, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2762
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getHasDependancy()Ljava/lang/Boolean;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    if-eqz v2, :cond_6

    .line 2812
    move v2, v8

    goto :goto_6

    :cond_6
    move v2, v7

    :goto_6
    const/4 v9, 0x3

    packed-switch v2, :pswitch_data_4

    .line 2802
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v11, v2, -0x4

    not-int v12, v2

    and-int/2addr v12, v9

    or-int/2addr v11, v12

    and-int/2addr v2, v9

    shl-int/2addr v2, v8

    add-int/2addr v11, v2

    rem-int/lit16 v2, v11, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v11, v4

    if-nez v11, :cond_7

    goto :goto_7

    .line 2812
    :pswitch_4
    move-object/from16 v2, p1

    goto :goto_a

    :goto_7
    move v2, v8

    goto :goto_8

    :cond_7
    move v2, v7

    :goto_8
    packed-switch v2, :pswitch_data_5

    .line 2763
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v2

    goto :goto_9

    :pswitch_5
    invoke-virtual/range {p0 .. p1}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    :try_start_1
    invoke-super {v6}, Ljava/lang/Object;->hashCode()I

    throw v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 2802
    :catchall_1
    move-exception v0

    throw v0

    .line 2790
    :goto_9
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v11, v11, 0x57

    rem-int/lit16 v12, v11, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v11, v4

    if-eqz v11, :cond_8

    .line 2850
    :cond_8
    nop

    .line 2765
    :goto_a
    new-instance v11, Lcom/visa/vac/tc/emvconverter/ApduCommand;

    invoke-direct {v11, v2}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 2767
    :try_start_2
    new-instance v12, Ljava/lang/StringBuilder;

    const-string v13, "\n\n\n\n "

    invoke-direct {v12, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v13

    invoke-static {v13}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, "\n\n\n"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2768
    iget-object v12, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v11

    invoke-virtual {v12, v11}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v11

    .line 2769
    new-instance v12, Ljava/lang/StringBuilder;

    const-string v13, "\n\n\n\n "

    invoke-direct {v12, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, "\n\n\n"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 2771
    invoke-static {}, Lcom/visa/vac/tc/emvconverter/TagDataList;->resetFirstGenDataCDO()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 2773
    const/16 v12, 0x2d

    const/16 v13, 0x5a

    if-eqz v11, :cond_9

    .line 2812
    move v14, v12

    goto :goto_b

    :cond_9
    move v14, v13

    :goto_b
    packed-switch v14, :pswitch_data_6

    .line 2756
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v16, 0x5

    add-int/lit8 v14, v14, 0x5

    rem-int/lit16 v0, v14, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v4

    if-nez v14, :cond_a

    .line 2812
    move v0, v7

    goto :goto_c

    :cond_a
    move v0, v8

    :goto_c
    const/16 v14, 0x2a

    const/16 v17, 0x15

    packed-switch v0, :pswitch_data_7

    .line 2774
    :try_start_3
    array-length v0, v11

    goto :goto_e

    :pswitch_6
    array-length v0, v11

    if-lt v0, v4, :cond_b

    .line 2812
    move/from16 v0, v17

    goto :goto_d

    :cond_b
    const/16 v0, 0x1d

    :goto_d
    packed-switch v0, :pswitch_data_8

    goto :goto_10

    .line 2774
    :goto_e
    if-lt v0, v9, :cond_c

    .line 2812
    move v0, v7

    goto :goto_f

    :cond_c
    move v0, v8

    :goto_f
    packed-switch v0, :pswitch_data_9

    :pswitch_7
    goto :goto_11

    .line 2777
    :goto_10
    :pswitch_8
    move-object v0, v6

    goto :goto_13

    .line 2775
    :goto_11
    invoke-virtual {v1, v11}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v0
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    .line 2763
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v18, v9, 0x2a

    and-int/2addr v9, v14

    shl-int/2addr v9, v8

    add-int v18, v18, v9

    add-int/lit8 v18, v18, 0x0

    add-int/lit8 v9, v18, -0x1

    rem-int/lit16 v3, v9, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_d

    .line 2812
    move v3, v7

    goto :goto_12

    :cond_d
    move v3, v8

    :goto_12
    packed-switch v3, :pswitch_data_a

    .line 2763
    goto :goto_13

    .line 2850
    :pswitch_9
    nop

    .line 2777
    :goto_13
    if-eqz v0, :cond_e

    .line 2812
    move v3, v8

    goto :goto_14

    :cond_e
    move v3, v7

    :goto_14
    packed-switch v3, :pswitch_data_b

    goto/16 :goto_5b

    .line 2790
    :pswitch_a
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v3, v3, 0x48

    sub-int/2addr v3, v7

    sub-int/2addr v3, v8

    rem-int/lit16 v9, v3, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-nez v3, :cond_48

    .line 2777
    :try_start_4
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-interface {v2, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    if-eqz v0, :cond_f

    .line 2812
    move v0, v8

    goto :goto_15

    :cond_f
    move v0, v7

    :goto_15
    packed-switch v0, :pswitch_data_c

    goto/16 :goto_5b

    .line 2774
    :pswitch_b
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x50

    sub-int/2addr v0, v8

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    const/4 v2, -0x2

    if-eqz v0, :cond_10

    .line 2778
    :try_start_5
    array-length v0, v11

    const/4 v3, -0x4

    xor-int/lit8 v9, v0, -0x4

    and-int/lit8 v19, v0, -0x4

    or-int v9, v9, v19

    shl-int/2addr v9, v8

    and-int/lit8 v19, v0, 0x3

    not-int v0, v0

    and-int/2addr v0, v3

    or-int v0, v19, v0

    neg-int v0, v0

    or-int v3, v9, v0

    shl-int/2addr v3, v8

    xor-int/2addr v0, v9

    sub-int/2addr v3, v0

    invoke-static {v11, v3}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v0

    .line 2779
    array-length v3, v0

    const/4 v9, 0x4

    if-le v3, v9, :cond_49

    goto :goto_16

    .line 2778
    :cond_10
    array-length v0, v11

    and-int/lit8 v3, v0, 0x1

    not-int v9, v0

    and-int/2addr v9, v2

    or-int/2addr v3, v9

    and-int/2addr v0, v2

    shl-int/2addr v0, v8

    neg-int v0, v0

    neg-int v0, v0

    or-int v9, v3, v0

    shl-int/2addr v9, v8

    xor-int/2addr v0, v3

    sub-int/2addr v9, v0

    invoke-static {v11, v9}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v0

    .line 2779
    array-length v3, v0

    if-le v3, v4, :cond_49

    .line 2781
    :goto_16
    new-instance v3, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v9, v0

    int-to-short v9, v9

    invoke-direct {v3, v0, v7, v9}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSS)V

    .line 2785
    const-string v9, "LV.QUICK_CHIP_DONE"

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    const-string v11, "True"

    invoke-virtual {v9, v11}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    const/4 v11, 0x6

    const/16 v14, -0x60da

    const/16 v15, -0x60ca

    const/16 v10, 0x16

    const/16 v5, 0x80

    if-eqz v9, :cond_3d

    .line 2834
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x1b

    rem-int/lit16 v9, v0, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    if-eqz v0, :cond_11

    .line 2812
    const/16 v0, 0x23

    goto :goto_17

    :cond_11
    const/16 v0, 0x3f

    :goto_17
    packed-switch v0, :pswitch_data_d

    .line 2787
    :try_start_6
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0

    goto :goto_19

    :pswitch_c
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    const/16 v5, 0x7244

    if-ne v0, v5, :cond_12

    .line 2812
    const/16 v0, 0x2c

    goto :goto_18

    :cond_12
    const/16 v0, 0x1a

    :goto_18
    packed-switch v0, :pswitch_data_e

    :pswitch_d
    goto :goto_1b

    .line 2787
    :goto_19
    if-ne v0, v5, :cond_13

    .line 2812
    const/16 v0, 0x3d

    goto :goto_1a

    :cond_13
    move/from16 v0, v16

    :goto_1a
    packed-switch v0, :pswitch_data_f

    goto/16 :goto_23

    .line 2779
    :goto_1b
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x1f

    or-int/lit8 v0, v0, 0x1f

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_14

    .line 2812
    move v0, v8

    goto :goto_1c

    :cond_14
    move v0, v7

    :goto_1c
    packed-switch v0, :pswitch_data_10

    .line 2789
    :try_start_7
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    goto :goto_1e

    :pswitch_e
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    .line 2790
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-lt v2, v10, :cond_15

    .line 2812
    move v2, v8

    goto :goto_1d

    :cond_15
    move v2, v7

    :goto_1d
    packed-switch v2, :pswitch_data_11

    goto/16 :goto_22

    .line 2789
    :goto_1e
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    .line 2790
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    const/16 v3, 0x32

    if-lt v2, v3, :cond_1a

    .line 2850
    :pswitch_f
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x5e

    shl-int/2addr v3, v8

    xor-int/lit8 v2, v2, 0x5e

    sub-int/2addr v3, v2

    xor-int/lit8 v2, v3, -0x1

    and-int/lit8 v3, v3, -0x1

    shl-int/2addr v3, v8

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_16

    .line 2791
    :cond_16
    :try_start_8
    const-string v2, "emv.card.FinalFirstGenDataCDO.CID"

    invoke-virtual {v0, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2792
    const-string v2, "emv.card.FinalFirstGenDataCDO.ATC"

    invoke-virtual {v0, v4, v11}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2793
    const-string v2, "emv.card.FinalFirstGenDataCDO.CardBlob"

    invoke-virtual {v0, v11, v10}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 2794
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    if-le v2, v10, :cond_17

    .line 2812
    move v2, v8

    goto :goto_1f

    :cond_17
    move v2, v7

    :goto_1f
    packed-switch v2, :pswitch_data_12

    .line 2834
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x51

    shl-int/2addr v3, v8

    xor-int/lit8 v2, v2, 0x51

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_18

    .line 2795
    :cond_18
    :try_start_9
    const-string v2, "emv.card.FinalFirstGenDataCDO.IAD"

    invoke-virtual {v0, v10}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    .line 2834
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x15

    and-int/lit8 v0, v0, 0x15

    shl-int/2addr v0, v8

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_19

    .line 2812
    move v7, v8

    goto :goto_20

    :cond_19
    nop

    :goto_20
    packed-switch v7, :pswitch_data_13

    .line 2834
    goto :goto_21

    .line 2850
    :pswitch_10
    nop

    .line 2797
    :goto_21
    :pswitch_11
    nop

    .line 2790
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v2, 0x6f

    xor-int/lit8 v3, v0, 0x6f

    and-int/lit8 v5, v0, 0x6f

    or-int/2addr v3, v5

    shl-int/2addr v3, v8

    and-int/lit8 v5, v0, -0x70

    not-int v0, v0

    and-int/2addr v0, v2

    or-int/2addr v0, v5

    neg-int v0, v0

    or-int v2, v3, v0

    shl-int/2addr v2, v8

    xor-int/2addr v0, v3

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    .line 2850
    return v13

    .line 2797
    :cond_1a
    :goto_22
    nop

    .line 2790
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x2d

    xor-int/2addr v0, v12

    or-int/2addr v0, v2

    and-int v3, v2, v0

    or-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v4

    if-nez v3, :cond_1b

    .line 2850
    :cond_1b
    goto :goto_25

    .line 2797
    :goto_23
    :pswitch_12
    :try_start_a
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v0
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0

    const/16 v5, 0x77

    if-ne v0, v5, :cond_1c

    .line 2812
    move v0, v7

    goto :goto_24

    :cond_1c
    move v0, v8

    :goto_24
    packed-switch v0, :pswitch_data_14

    .line 2834
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x50

    or-int/lit8 v5, v0, -0x1

    shl-int/2addr v5, v8

    xor-int/lit8 v0, v0, -0x1

    sub-int/2addr v5, v0

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v4

    if-eqz v5, :cond_1e

    goto :goto_28

    .line 2823
    :goto_25
    :pswitch_13
    const/16 v0, -0x5b

    .line 2763
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x51

    not-int v5, v3

    or-int/lit8 v2, v2, 0x51

    and-int/2addr v2, v5

    shl-int/2addr v3, v8

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_1d

    .line 2812
    const/16 v2, 0x17

    goto :goto_26

    :cond_1d
    const/16 v2, 0x1d

    :goto_26
    packed-switch v2, :pswitch_data_15

    .line 2763
    goto :goto_27

    .line 2850
    :pswitch_14
    return v0

    .line 2763
    :goto_27
    :try_start_b
    throw v6
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    .line 2800
    :cond_1e
    :goto_28
    const/16 v0, 0x77

    :try_start_c
    invoke-virtual {v3, v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    .line 2801
    invoke-virtual {v0, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_0

    if-eqz v3, :cond_1f

    .line 2812
    const/16 v3, 0x1c

    goto :goto_29

    :cond_1f
    const/16 v3, 0x23

    :goto_29
    packed-switch v3, :pswitch_data_16

    .line 2803
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v3, v3, 0x42

    sub-int/2addr v3, v8

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_20

    .line 2812
    const/16 v5, 0x5c

    goto :goto_2a

    :cond_20
    const/16 v5, 0x37

    :goto_2a
    packed-switch v5, :pswitch_data_17

    .line 2801
    nop

    .line 2802
    :try_start_d
    invoke-virtual {v0, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    goto :goto_2c

    .line 2803
    :pswitch_15
    const/16 v3, 0x7228

    .line 2802
    invoke-virtual {v0, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v3

    if-eqz v3, :cond_21

    .line 2812
    const/16 v3, 0x35

    goto :goto_2b

    :cond_21
    const/16 v3, 0x47

    :goto_2b
    packed-switch v3, :pswitch_data_18

    goto :goto_2e

    .line 2802
    :goto_2c
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v3
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_0

    if-eqz v3, :cond_22

    .line 2812
    const/16 v17, 0xd

    goto :goto_2d

    :cond_22
    nop

    :goto_2d
    packed-switch v17, :pswitch_data_19

    goto/16 :goto_34

    .line 2828
    :goto_2e
    :pswitch_16
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    sub-int/2addr v3, v2

    xor-int/lit8 v2, v3, -0x1

    and-int/lit8 v3, v3, -0x1

    shl-int/2addr v3, v8

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_23

    .line 2812
    move v2, v8

    goto :goto_2f

    :cond_23
    move v2, v7

    :goto_2f
    packed-switch v2, :pswitch_data_1a

    .line 2828
    const/16 v2, 0x7261

    .line 2803
    :try_start_e
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2

    goto :goto_31

    .line 2802
    :pswitch_17
    nop

    .line 2803
    invoke-virtual {v0, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    array-length v2, v2

    if-eqz v2, :cond_24

    .line 2812
    const/16 v2, 0x30

    goto :goto_30

    :cond_24
    const/16 v2, 0x48

    :goto_30
    packed-switch v2, :pswitch_data_1b

    goto :goto_34

    .line 2803
    :goto_31
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    array-length v2, v2

    if-eqz v2, :cond_25

    .line 2812
    move v2, v7

    goto :goto_32

    :cond_25
    move v2, v8

    :goto_32
    packed-switch v2, :pswitch_data_1c

    .line 2804
    :pswitch_18
    const-string v2, "emv.card.FinalFirstGenDataCDO.CardBlob"

    invoke-virtual {v0, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v3

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_0

    .line 2790
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x21

    xor-int/lit8 v2, v2, 0x21

    or-int/2addr v2, v3

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_26

    .line 2812
    const/16 v2, 0x4b

    goto :goto_33

    :cond_26
    const/16 v2, 0x42

    :goto_33
    packed-switch v2, :pswitch_data_1d

    .line 2790
    goto :goto_34

    .line 2850
    :pswitch_19
    nop

    .line 2806
    :goto_34
    :pswitch_1a
    :try_start_f
    invoke-virtual {v0, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_0

    if-eqz v2, :cond_27

    .line 2812
    move v2, v7

    goto :goto_35

    :cond_27
    move v2, v8

    :goto_35
    packed-switch v2, :pswitch_data_1e

    :goto_36
    goto/16 :goto_39

    .line 2790
    :pswitch_1b
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x75

    shl-int/2addr v3, v8

    xor-int/lit8 v2, v2, 0x75

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_28

    .line 2806
    :cond_28
    nop

    .line 2807
    :try_start_10
    invoke-virtual {v0, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_0

    if-eqz v2, :cond_29

    .line 2812
    move v2, v8

    goto :goto_37

    :cond_29
    move v2, v7

    :goto_37
    packed-switch v2, :pswitch_data_1f

    goto :goto_36

    .line 2850
    :pswitch_1c
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x68

    and-int/lit8 v2, v2, 0x68

    shl-int/2addr v2, v8

    add-int/2addr v3, v2

    xor-int/lit8 v2, v3, -0x1

    and-int/lit8 v3, v3, -0x1

    shl-int/2addr v3, v8

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_2a

    .line 2807
    :cond_2a
    nop

    .line 2808
    :try_start_11
    invoke-virtual {v0, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    array-length v2, v2
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_11} :catch_0

    if-eqz v2, :cond_2d

    .line 2803
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x29

    and-int/lit8 v5, v2, 0x29

    or-int/2addr v3, v5

    shl-int/2addr v3, v8

    not-int v5, v5

    or-int/lit8 v2, v2, 0x29

    and-int/2addr v2, v5

    neg-int v2, v2

    xor-int v5, v3, v2

    and-int/2addr v2, v3

    shl-int/2addr v2, v8

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v4

    if-eqz v5, :cond_2b

    .line 2809
    :cond_2b
    :try_start_12
    const-string v2, "emv.card.FinalFirstGenDataCDO.ATC"

    invoke-virtual {v0, v15}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v3

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_0

    .line 2790
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x1f

    and-int/lit8 v5, v2, 0x1f

    or-int/2addr v3, v5

    shl-int/2addr v3, v8

    not-int v5, v5

    or-int/lit8 v2, v2, 0x1f

    and-int/2addr v2, v5

    neg-int v2, v2

    or-int v5, v3, v2

    shl-int/2addr v5, v8

    xor-int/2addr v2, v3

    sub-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v4

    if-eqz v5, :cond_2c

    .line 2812
    move v2, v8

    goto :goto_38

    :cond_2c
    move v2, v7

    :goto_38
    packed-switch v2, :pswitch_data_20

    .line 2850
    goto :goto_39

    .line 2790
    :pswitch_1d
    nop

    .line 2811
    :cond_2d
    :goto_39
    const/16 v2, -0x60d9

    :try_start_13
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3
    :try_end_13
    .catch Ljava/lang/Exception; {:try_start_13 .. :try_end_13} :catch_0

    if-eqz v3, :cond_2e

    .line 2812
    move v2, v7

    goto :goto_3a

    :cond_2e
    move v2, v8

    :goto_3a
    packed-switch v2, :pswitch_data_21

    .line 2763
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x69

    shl-int/2addr v3, v8

    xor-int/lit8 v2, v2, 0x69

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_2f

    .line 2812
    const/16 v2, 0x3b

    goto :goto_3b

    :cond_2f
    const/16 v2, 0x38

    :goto_3b
    packed-switch v2, :pswitch_data_22

    .line 2763
    const/16 v2, 0x4d44

    .line 2812
    :try_start_14
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v2

    goto :goto_3d

    .line 2811
    :pswitch_1e
    nop

    .line 2812
    const/16 v2, -0x60d9

    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    if-eqz v2, :cond_30

    move v2, v7

    goto :goto_3c

    :cond_30
    move v2, v8

    :goto_3c
    packed-switch v2, :pswitch_data_23

    goto :goto_40

    :goto_3d
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_0

    if-eqz v2, :cond_35

    .line 2790
    :pswitch_1f
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x9

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_31

    .line 2812
    :cond_31
    nop

    .line 2813
    const/16 v2, -0x60d9

    :try_start_15
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    array-length v2, v2
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_15} :catch_0

    if-eqz v2, :cond_32

    .line 2812
    move v2, v7

    goto :goto_3e

    :cond_32
    move v2, v8

    :goto_3e
    packed-switch v2, :pswitch_data_24

    .line 2850
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x37

    const/16 v5, 0x37

    or-int/2addr v2, v5

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_33

    .line 2814
    :cond_33
    :try_start_16
    const-string v2, "emv.card.FinalFirstGenDataCDO.CID"

    const/16 v3, -0x60d9

    invoke-virtual {v0, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v3

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_16
    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_16} :catch_0

    .line 2774
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x5

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_34

    .line 2812
    move v2, v8

    goto :goto_3f

    :cond_34
    move v2, v7

    :goto_3f
    packed-switch v2, :pswitch_data_25

    .line 2850
    goto :goto_40

    .line 2774
    :pswitch_20
    nop

    .line 2816
    :cond_35
    :goto_40
    :pswitch_21
    const/16 v2, -0x60f0

    :try_start_17
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_0

    if-eqz v3, :cond_36

    .line 2812
    const/16 v2, 0x34

    goto :goto_41

    :cond_36
    const/16 v2, 0x58

    :goto_41
    packed-switch v2, :pswitch_data_26

    :goto_42
    :pswitch_22
    goto/16 :goto_4a

    .line 2790
    :pswitch_23
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x47

    const/16 v5, 0x47

    xor-int/2addr v2, v5

    or-int/2addr v2, v3

    not-int v2, v2

    sub-int/2addr v3, v2

    sub-int/2addr v3, v8

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_37

    .line 2816
    :cond_37
    nop

    .line 2817
    const/16 v2, -0x60f0

    :try_start_18
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2
    :try_end_18
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_18} :catch_0

    if-eqz v2, :cond_38

    .line 2812
    move v2, v8

    goto :goto_43

    :cond_38
    move v2, v7

    :goto_43
    packed-switch v2, :pswitch_data_27

    .line 2828
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x49

    and-int/lit8 v2, v2, 0x49

    shl-int/2addr v2, v8

    and-int v5, v3, v2

    or-int/2addr v2, v3

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v4

    if-eqz v5, :cond_39

    .line 2817
    :cond_39
    nop

    .line 2818
    const/16 v2, -0x60f0

    :try_start_19
    invoke-virtual {v0, v2}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v3

    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v2

    array-length v2, v2
    :try_end_19
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_19} :catch_0

    if-eqz v2, :cond_3a

    .line 2812
    const/16 v2, 0xb

    goto :goto_44

    :cond_3a
    const/16 v2, 0x3b

    :goto_44
    packed-switch v2, :pswitch_data_28

    goto :goto_42

    .line 2790
    :pswitch_24
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x53

    xor-int/lit8 v2, v2, 0x53

    or-int/2addr v2, v3

    xor-int v5, v3, v2

    and-int/2addr v2, v3

    shl-int/2addr v2, v8

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v5, v4

    if-eqz v5, :cond_3b

    .line 2812
    move v7, v8

    goto :goto_45

    :cond_3b
    nop

    :goto_45
    packed-switch v7, :pswitch_data_29

    .line 2819
    :try_start_1a
    const-string v2, "emv.card.FinalFirstGenDataCDO.IAD"

    goto :goto_47

    :pswitch_25
    const-string v2, "emv.card.FinalFirstGenDataCDO.IAD"

    const/16 v3, -0x60f0

    invoke-virtual {v0, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    :goto_46
    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_48

    :goto_47
    const/16 v3, 0x74ac

    invoke-virtual {v0, v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0
    :try_end_1a
    .catch Ljava/lang/Exception; {:try_start_1a .. :try_end_1a} :catch_0

    goto :goto_46

    .line 2850
    :goto_48
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x2d

    or-int/2addr v0, v12

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_3c

    .line 2812
    const/16 v3, 0x3b

    goto :goto_49

    :cond_3c
    const/16 v3, 0x26

    :goto_49
    packed-switch v3, :pswitch_data_2a

    .line 2850
    :pswitch_26
    nop

    .line 2821
    :goto_4a
    nop

    .line 2812
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x4e

    sub-int/2addr v0, v8

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    .line 2850
    return v13

    .line 2825
    :cond_3d
    :try_start_1b
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v6
    :try_end_1b
    .catch Ljava/lang/Exception; {:try_start_1b .. :try_end_1b} :catch_0

    if-ne v6, v5, :cond_3e

    .line 2812
    const/16 v5, 0x5c

    goto :goto_4b

    :cond_3e
    const/16 v5, 0x60

    :goto_4b
    packed-switch v5, :pswitch_data_2b

    .line 2787
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x7f

    sub-int/2addr v0, v8

    xor-int/lit8 v2, v0, -0x1

    and-int/lit8 v0, v0, -0x1

    shl-int/2addr v0, v8

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_41

    goto :goto_50

    .line 2836
    :pswitch_27
    :try_start_1c
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v5
    :try_end_1c
    .catch Ljava/lang/Exception; {:try_start_1c .. :try_end_1c} :catch_0

    const/16 v6, 0x77

    if-ne v5, v6, :cond_3f

    .line 2812
    move v5, v8

    goto :goto_4c

    :cond_3f
    move v5, v7

    :goto_4c
    packed-switch v5, :pswitch_data_2c

    goto/16 :goto_5b

    .line 2819
    :pswitch_28
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v6, 0x45

    xor-int/lit8 v9, v5, 0x45

    and-int/lit8 v10, v5, 0x45

    or-int/2addr v9, v10

    shl-int/2addr v9, v8

    and-int/lit8 v10, v5, -0x46

    not-int v5, v5

    and-int/2addr v5, v6

    or-int/2addr v5, v10

    neg-int v5, v5

    or-int v6, v9, v5

    shl-int/2addr v6, v8

    xor-int/2addr v5, v9

    sub-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v4

    if-eqz v6, :cond_40

    .line 2812
    goto :goto_4d

    :cond_40
    move v7, v8

    :goto_4d
    packed-switch v7, :pswitch_data_2d

    .line 2839
    :try_start_1d
    array-length v0, v0

    goto :goto_4e

    :pswitch_29
    array-length v0, v0

    xor-int/lit8 v5, v0, -0x2

    and-int/2addr v0, v2

    shl-int/2addr v0, v8

    add-int/2addr v5, v0

    int-to-short v0, v5

    invoke-virtual {v1, v3, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;

    .line 2840
    move v0, v13

    goto :goto_4f

    .line 2839
    :goto_4e
    xor-int/lit8 v2, v0, 0x2

    and-int/lit8 v5, v0, 0x2

    or-int/2addr v2, v5

    shl-int/2addr v2, v8

    not-int v5, v5

    or-int/2addr v0, v4

    and-int/2addr v0, v5

    neg-int v0, v0

    xor-int v5, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v8

    add-int/2addr v5, v0

    int-to-short v0, v5

    invoke-virtual {v1, v3, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;

    .line 2840
    const/16 v0, 0x62

    .line 2850
    :goto_4f
    goto/16 :goto_5c

    .line 2827
    :goto_50
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    .line 2828
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    const/16 v3, 0x52

    if-lt v2, v3, :cond_43

    goto :goto_52

    .line 2827
    :cond_41
    invoke-virtual {v3}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0

    .line 2828
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2
    :try_end_1d
    .catch Ljava/lang/Exception; {:try_start_1d .. :try_end_1d} :catch_0

    if-lt v2, v10, :cond_42

    .line 2812
    const/16 v2, 0x1e

    goto :goto_51

    :cond_42
    const/16 v2, 0x2a

    :goto_51
    packed-switch v2, :pswitch_data_2e

    goto :goto_52

    .line 2836
    :cond_43
    :pswitch_2a
    const/16 v0, -0x5b

    goto/16 :goto_5a

    .line 2834
    :goto_52
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v2, 0x35

    or-int/lit8 v2, v2, 0x35

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_44

    .line 2829
    :cond_44
    :try_start_1e
    invoke-virtual {v0, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v2

    .line 2830
    const/16 v3, -0x60d9

    invoke-virtual {v1, v3, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V

    .line 2831
    invoke-virtual {v0, v4, v11}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v2

    invoke-virtual {v1, v15, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V

    .line 2832
    invoke-virtual {v0, v11, v10}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v2

    invoke-virtual {v1, v14, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V

    .line 2833
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_1e .. :try_end_1e} :catch_0

    if-le v2, v10, :cond_45

    .line 2812
    const/16 v2, 0x4f

    goto :goto_53

    :cond_45
    const/16 v2, 0x21

    :goto_53
    packed-switch v2, :pswitch_data_2f

    goto :goto_57

    .line 2840
    :pswitch_2b
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v2, v2, 0x56

    and-int/lit8 v3, v2, -0x1

    or-int/lit8 v2, v2, -0x1

    add-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v3, v4

    if-nez v3, :cond_46

    .line 2812
    const/16 v14, 0x3d

    goto :goto_54

    :cond_46
    const/16 v14, 0x2a

    :goto_54
    packed-switch v14, :pswitch_data_30

    .line 2834
    :try_start_1f
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    goto :goto_55

    :pswitch_2c
    const/16 v2, 0x7e4b

    const/16 v3, 0x14

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v5

    invoke-virtual {v0, v3, v5}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    invoke-virtual {v1, v2, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V

    goto :goto_56

    :goto_55
    invoke-virtual {v0, v10, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v0

    const/16 v2, -0x60f0

    invoke-virtual {v1, v2, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(S[B)V
    :try_end_1f
    .catch Ljava/lang/Exception; {:try_start_1f .. :try_end_1f} :catch_0

    .line 2850
    :goto_56
    nop

    .line 2836
    :goto_57
    nop

    .line 2790
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x2f

    not-int v3, v2

    or-int/lit8 v0, v0, 0x2f

    and-int/2addr v0, v3

    shl-int/2addr v2, v8

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    if-eqz v0, :cond_47

    .line 2812
    const/16 v0, 0x4a

    goto :goto_58

    :cond_47
    const/16 v0, 0x3d

    :goto_58
    packed-switch v0, :pswitch_data_31

    .line 2790
    goto :goto_59

    .line 2850
    :pswitch_2d
    nop

    .line 2836
    :goto_59
    move v0, v13

    .line 2787
    :goto_5a
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x11

    not-int v5, v3

    or-int/lit8 v2, v2, 0x11

    and-int/2addr v2, v5

    shl-int/2addr v3, v8

    or-int v5, v2, v3

    shl-int/2addr v5, v8

    xor-int/2addr v2, v3

    sub-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v4

    if-nez v5, :cond_4a

    goto :goto_5d

    .line 2790
    :cond_48
    :try_start_20
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-interface {v2, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
    :try_end_20
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_20} :catch_0

    :try_start_21
    invoke-super {v6}, Ljava/lang/Object;->hashCode()I

    throw v6
    :try_end_21
    .catch Ljava/lang/Exception; {:try_start_21 .. :try_end_21} :catch_0
    .catchall {:try_start_21 .. :try_end_21} :catchall_3

    :catchall_3
    move-exception v0

    throw v0

    .line 2840
    :cond_49
    :goto_5b
    :pswitch_2e
    const/16 v0, -0x5b

    :goto_5c
    nop

    .line 2790
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x47

    const/16 v5, 0x47

    and-int/2addr v2, v5

    shl-int/2addr v2, v8

    neg-int v2, v2

    neg-int v2, v2

    not-int v2, v2

    sub-int/2addr v3, v2

    sub-int/2addr v3, v8

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_4a

    .line 2850
    :cond_4a
    :goto_5d
    goto :goto_5e

    .line 2846
    :catch_0
    move-exception v0

    .line 2847
    const/4 v0, -0x1

    .line 2850
    :goto_5e
    nop

    .line 2802
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v2, 0x59

    and-int/lit8 v5, v2, 0x59

    or-int/2addr v3, v5

    shl-int/2addr v3, v8

    not-int v5, v5

    or-int/lit8 v2, v2, 0x59

    and-int/2addr v2, v5

    neg-int v2, v2

    and-int v5, v3, v2

    or-int/2addr v2, v3

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v5, v4

    .line 2850
    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x5c
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x63
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x19
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x5a
        :pswitch_2e
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x15
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x23
        :pswitch_c
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x1a
        :pswitch_12
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x3d
        :pswitch_d
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_13
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x1d
        :pswitch_14
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x23
        :pswitch_1a
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x5c
        :pswitch_15
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x47
        :pswitch_1a
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0xd
        :pswitch_16
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x0
        :pswitch_17
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x30
        :pswitch_18
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x1
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x42
        :pswitch_19
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x0
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x1
        :pswitch_1c
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x1
        :pswitch_1d
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x1
        :pswitch_21
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0x38
        :pswitch_1e
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x0
        :pswitch_1f
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x1
        :pswitch_21
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x1
        :pswitch_20
    .end packed-switch

    :pswitch_data_26
    .packed-switch 0x34
        :pswitch_23
    .end packed-switch

    :pswitch_data_27
    .packed-switch 0x0
        :pswitch_22
    .end packed-switch

    :pswitch_data_28
    .packed-switch 0xb
        :pswitch_24
    .end packed-switch

    :pswitch_data_29
    .packed-switch 0x0
        :pswitch_25
    .end packed-switch

    :pswitch_data_2a
    .packed-switch 0x3b
        :pswitch_26
    .end packed-switch

    :pswitch_data_2b
    .packed-switch 0x60
        :pswitch_27
    .end packed-switch

    :pswitch_data_2c
    .packed-switch 0x1
        :pswitch_28
    .end packed-switch

    :pswitch_data_2d
    .packed-switch 0x1
        :pswitch_29
    .end packed-switch

    :pswitch_data_2e
    .packed-switch 0x2a
        :pswitch_2a
    .end packed-switch

    :pswitch_data_2f
    .packed-switch 0x4f
        :pswitch_2b
    .end packed-switch

    :pswitch_data_30
    .packed-switch 0x3d
        :pswitch_2c
    .end packed-switch

    :pswitch_data_31
    .packed-switch 0x3d
        :pswitch_2d
    .end packed-switch
.end method


# virtual methods
.method BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;
    .locals 7

    .line 953
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x33

    not-int v2, v1

    or-int/lit8 v0, v0, 0x33

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    not-int v1, v1

    sub-int/2addr v0, v1

    sub-int/2addr v0, v2

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 941
    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    const-string v3, "V."

    packed-switch v0, :pswitch_data_0

    .line 939
    nop

    .line 941
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getP1()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_1

    goto :goto_1

    .line 939
    :pswitch_0
    nop

    .line 941
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getP1()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p1, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 953
    :catchall_0
    move-exception p1

    throw p1

    .line 941
    :goto_1
    const/16 v0, 0x5a

    goto :goto_2

    :cond_1
    const/16 v0, 0x4d

    :goto_2
    packed-switch v0, :pswitch_data_1

    goto :goto_3

    .line 953
    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v4, 0x67

    or-int/lit8 v5, v0, 0x67

    shl-int/2addr v5, v2

    and-int/lit8 v6, v0, -0x68

    not-int v0, v0

    and-int/2addr v0, v4

    or-int/2addr v0, v6

    neg-int v0, v0

    or-int v4, v5, v0

    shl-int/2addr v4, v2

    xor-int/2addr v0, v5

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_2

    .line 942
    :cond_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getP1()Ljava/lang/String;

    move-result-object v0

    .line 943
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {p1, v0}, Lcom/visa/vac/tc/emvconverter/ApduScript;->setP1(Ljava/lang/String;)V

    .line 953
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v0, 0x71

    and-int/lit8 v5, v0, 0x71

    or-int/2addr v4, v5

    shl-int/2addr v4, v2

    not-int v5, v5

    or-int/lit8 v0, v0, 0x71

    and-int/2addr v0, v5

    neg-int v0, v0

    or-int v5, v4, v0

    shl-int/2addr v5, v2

    xor-int/2addr v0, v4

    sub-int/2addr v5, v0

    rem-int/lit16 v0, v5, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_3

    .line 945
    :cond_3
    :goto_3
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getP2()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_4

    .line 941
    goto :goto_4

    :cond_4
    move v1, v2

    :goto_4
    packed-switch v1, :pswitch_data_2

    .line 953
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x19

    xor-int/lit8 v0, v0, 0x19

    or-int/2addr v0, v1

    or-int v4, v1, v0

    shl-int/2addr v4, v2

    xor-int/2addr v0, v1

    sub-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_5

    .line 946
    :cond_5
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getP2()Ljava/lang/String;

    move-result-object v0

    .line 947
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {p1, v0}, Lcom/visa/vac/tc/emvconverter/ApduScript;->setP2(Ljava/lang/String;)V

    .line 941
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x65

    not-int v4, v1

    or-int/lit8 v0, v0, 0x65

    and-int/2addr v0, v4

    shl-int/2addr v1, v2

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_6

    .line 953
    :cond_6
    nop

    .line 949
    :pswitch_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getDATA()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 941
    const/16 v0, 0x3e

    goto :goto_5

    :cond_7
    const/16 v0, 0x12

    :goto_5
    packed-switch v0, :pswitch_data_3

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x18

    and-int/lit8 v0, v0, 0x18

    shl-int/2addr v0, v2

    add-int/2addr v1, v0

    and-int/lit8 v0, v1, -0x1

    or-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_8

    .line 950
    :cond_8
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getDATA()Ljava/lang/String;

    move-result-object v0

    .line 951
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    invoke-virtual {p1, v0}, Lcom/visa/vac/tc/emvconverter/ApduScript;->setDATA(Ljava/lang/String;)V

    .line 953
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v1, v0, 0x37

    shl-int/2addr v1, v2

    and-int/lit8 v3, v0, -0x38

    not-int v0, v0

    and-int/lit8 v0, v0, 0x37

    or-int/2addr v0, v3

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_9

    :cond_9
    :pswitch_3
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x58

    shl-int/2addr v1, v2

    xor-int/lit8 v0, v0, 0x58

    sub-int/2addr v1, v0

    and-int/lit8 v0, v1, -0x1

    or-int/lit8 v1, v1, -0x1

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    return-object p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x5a
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x12
        :pswitch_3
    .end packed-switch
.end method

.method BuildConfig(Ljava/lang/String;)V
    .locals 3

    .line 1317
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x7d

    xor-int/lit8 v0, v0, 0x7d

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    or-int v2, v1, v0

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    const/16 v0, 0x4b

    goto :goto_0

    :cond_0
    const/16 v0, 0x10

    :goto_0
    const-string v1, "emv.tx.cal.ErrorCode"

    invoke-static {v1, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    packed-switch v0, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :goto_1
    return-void

    :pswitch_data_0
    .packed-switch 0x4b
        :pswitch_0
    .end packed-switch
.end method

.method ContactlessConfiguration([B)B
    .locals 16

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    .line 429
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x21

    not-int v4, v3

    or-int/lit8 v5, v2, 0x21

    and-int/2addr v4, v5

    const/4 v5, 0x1

    shl-int/2addr v3, v5

    neg-int v3, v3

    neg-int v3, v3

    or-int v6, v4, v3

    shl-int/2addr v6, v5

    xor-int/2addr v3, v4

    sub-int/2addr v6, v3

    rem-int/lit16 v3, v6, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v4, 0x2

    rem-int/2addr v6, v4

    const/4 v7, 0x0

    if-nez v6, :cond_0

    .line 395
    move v6, v5

    goto :goto_0

    :cond_0
    move v6, v7

    :goto_0
    const/16 v8, 0x5a

    const/4 v9, -0x1

    packed-switch v6, :pswitch_data_0

    .line 390
    nop

    .line 392
    goto :goto_3

    .line 390
    :pswitch_0
    nop

    .line 392
    if-eqz v0, :cond_1

    .line 395
    move v6, v5

    goto :goto_1

    :cond_1
    move v6, v7

    :goto_1
    packed-switch v6, :pswitch_data_1

    :goto_2
    move v8, v9

    goto/16 :goto_2a

    .line 392
    :goto_3
    const/16 v6, 0x28

    :try_start_0
    div-int/2addr v6, v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-eqz v0, :cond_2

    .line 395
    move v6, v5

    goto :goto_4

    :cond_2
    move v6, v7

    :goto_4
    packed-switch v6, :pswitch_data_2

    goto :goto_2

    .line 393
    :pswitch_1
    nop

    .line 394
    array-length v6, v0

    const/4 v10, 0x4

    rem-int/2addr v6, v10

    if-eqz v6, :cond_3

    .line 395
    move v6, v7

    goto :goto_5

    :cond_3
    move v6, v5

    :goto_5
    packed-switch v6, :pswitch_data_3

    .line 399
    nop

    .line 400
    goto :goto_8

    .line 403
    :pswitch_2
    add-int/lit8 v2, v2, 0x73

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_4

    .line 395
    goto :goto_6

    :cond_4
    move v7, v5

    :goto_6
    packed-switch v7, :pswitch_data_4

    const/16 v2, -0x5b

    move v8, v2

    goto :goto_7

    :pswitch_3
    move v8, v4

    .line 392
    :goto_7
    and-int/lit8 v2, v0, -0xc

    not-int v3, v0

    const/16 v6, 0xb

    and-int/2addr v3, v6

    or-int/2addr v2, v3

    and-int/2addr v0, v6

    shl-int/2addr v0, v5

    neg-int v0, v0

    neg-int v0, v0

    or-int v3, v2, v0

    shl-int/2addr v3, v5

    xor-int/2addr v0, v2

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_5

    .line 429
    :cond_5
    goto/16 :goto_2a

    .line 392
    :goto_8
    xor-int/lit8 v2, v3, 0x26

    and-int/lit8 v3, v3, 0x26

    shl-int/2addr v3, v5

    add-int/2addr v2, v3

    or-int/lit8 v3, v2, -0x1

    shl-int/2addr v3, v5

    xor-int/2addr v2, v9

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    const/16 v2, 0x1f

    if-eqz v3, :cond_6

    .line 395
    move v3, v2

    goto :goto_9

    :cond_6
    const/16 v3, 0x3b

    :goto_9
    packed-switch v3, :pswitch_data_5

    .line 392
    goto :goto_a

    .line 429
    :pswitch_4
    nop

    .line 401
    :goto_a
    move v3, v7

    :goto_b
    array-length v6, v0

    if-ge v3, v6, :cond_7

    .line 395
    move v6, v5

    goto :goto_c

    :cond_7
    move v6, v7

    :goto_c
    const/16 v11, 0x49

    packed-switch v6, :pswitch_data_6

    .line 392
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v12, v6, 0x17

    and-int/lit8 v6, v6, 0x17

    shl-int/2addr v6, v5

    xor-int v13, v12, v6

    and-int/2addr v6, v12

    shl-int/2addr v6, v5

    add-int/2addr v13, v6

    rem-int/lit16 v6, v13, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v13, v4

    if-nez v13, :cond_8

    goto :goto_d

    .line 395
    :pswitch_5
    move v0, v7

    goto/16 :goto_26

    :goto_d
    move v12, v5

    goto :goto_e

    :cond_8
    move v12, v7

    :goto_e
    const/16 v13, 0x32

    packed-switch v12, :pswitch_data_7

    .line 402
    aget-byte v12, v0, v3

    ushr-int/lit8 v12, v12, 0x3

    int-to-byte v12, v12

    and-int/2addr v12, v2

    int-to-byte v12, v12

    .line 403
    if-lez v12, :cond_a

    goto :goto_10

    .line 402
    :pswitch_6
    aget-byte v12, v0, v3

    shl-int/lit8 v12, v12, 0x3

    int-to-byte v12, v12

    xor-int/lit8 v14, v12, 0x41

    and-int/lit8 v12, v12, 0x41

    or-int/2addr v12, v14

    int-to-byte v12, v12

    .line 403
    if-lez v12, :cond_9

    .line 395
    move v14, v7

    goto :goto_f

    :cond_9
    move v14, v5

    :goto_f
    packed-switch v14, :pswitch_data_8

    goto :goto_12

    :goto_10
    const/16 v14, 0x11

    goto :goto_11

    :cond_a
    move v14, v13

    :goto_11
    packed-switch v14, :pswitch_data_9

    :goto_12
    :pswitch_7
    goto/16 :goto_24

    .line 392
    :pswitch_8
    or-int/lit8 v14, v6, 0x78

    shl-int/2addr v14, v5

    xor-int/lit8 v15, v6, 0x78

    sub-int/2addr v14, v15

    xor-int/lit8 v15, v14, -0x1

    and-int/2addr v14, v9

    shl-int/2addr v14, v5

    add-int/2addr v15, v14

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v15, v4

    if-eqz v15, :cond_b

    .line 395
    move v14, v7

    goto :goto_13

    :cond_b
    move v14, v5

    :goto_13
    packed-switch v14, :pswitch_data_a

    .line 403
    const/16 v14, 0x1e

    if-le v12, v14, :cond_d

    goto :goto_15

    .line 392
    :pswitch_9
    if-le v12, v8, :cond_c

    .line 395
    move v12, v7

    goto :goto_14

    :cond_c
    move v12, v5

    :goto_14
    packed-switch v12, :pswitch_data_b

    :pswitch_a
    goto :goto_17

    :goto_15
    move v12, v7

    goto :goto_16

    :cond_d
    move v12, v5

    :goto_16
    packed-switch v12, :pswitch_data_c

    goto :goto_12

    .line 407
    :goto_17
    and-int/lit8 v6, v3, -0x3

    not-int v12, v3

    and-int/2addr v12, v4

    or-int/2addr v6, v12

    and-int/lit8 v12, v3, 0x2

    shl-int/2addr v12, v5

    and-int v14, v6, v12

    or-int/2addr v6, v12

    add-int/2addr v14, v6

    aget-byte v6, v0, v14

    .line 408
    or-int/lit8 v12, v3, 0x1

    shl-int/2addr v12, v5

    xor-int/lit8 v14, v3, 0x1

    sub-int/2addr v12, v14

    aget-byte v12, v0, v12

    .line 409
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v14

    const/16 v15, 0x10

    invoke-static {v14, v15}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    move-result v14

    .line 410
    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v2

    invoke-static {v2, v15}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    move-result v2

    .line 411
    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v6, v15}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    move-result v6

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-static {v8, v15}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    move-result v8

    neg-int v8, v8

    and-int/lit8 v15, v8, 0x0

    not-int v8, v8

    and-int/2addr v8, v9

    or-int/2addr v8, v15

    neg-int v8, v8

    and-int v15, v6, v8

    or-int/2addr v6, v8

    add-int/2addr v15, v6

    sub-int/2addr v15, v7

    sub-int/2addr v15, v5

    and-int/lit8 v6, v15, 0x1

    or-int/lit8 v8, v15, 0x1

    add-int/2addr v6, v8

    .line 412
    if-eqz v12, :cond_e

    .line 395
    move v8, v11

    goto :goto_18

    :cond_e
    const/16 v8, 0x4c

    :goto_18
    packed-switch v8, :pswitch_data_d

    .line 403
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v12, v8, 0x63

    not-int v15, v12

    or-int/lit8 v8, v8, 0x63

    and-int/2addr v8, v15

    shl-int/2addr v12, v5

    xor-int v15, v8, v12

    and-int/2addr v8, v12

    shl-int/2addr v8, v5

    add-int/2addr v15, v8

    rem-int/lit16 v8, v15, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v15, v4

    if-nez v15, :cond_f

    .line 412
    :cond_f
    const/16 v12, 0x58

    if-ge v2, v14, :cond_10

    .line 395
    goto :goto_19

    :cond_10
    move v13, v12

    :goto_19
    packed-switch v13, :pswitch_data_e

    .line 416
    xor-int/lit8 v2, v3, 0x3

    and-int/lit8 v13, v3, 0x3

    shl-int/2addr v13, v5

    add-int/2addr v2, v13

    aget-byte v2, v0, v2

    .line 417
    if-eqz v2, :cond_11

    goto :goto_1a

    .line 413
    :pswitch_b
    nop

    .line 392
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x67

    shl-int/2addr v2, v5

    xor-int/lit8 v0, v0, 0x67

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_17

    goto/16 :goto_25

    .line 395
    :goto_1a
    goto :goto_1b

    :cond_11
    const/16 v12, 0x4a

    :goto_1b
    packed-switch v12, :pswitch_data_f

    :goto_1c
    :pswitch_c
    goto :goto_23

    .line 429
    :pswitch_d
    and-int/lit8 v12, v8, 0xb

    xor-int/lit8 v13, v8, 0xb

    or-int/2addr v13, v12

    and-int v14, v12, v13

    or-int/2addr v12, v13

    add-int/2addr v14, v12

    rem-int/lit16 v12, v14, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v14, v4

    if-eqz v14, :cond_12

    .line 395
    move v12, v5

    goto :goto_1d

    :cond_12
    const/4 v12, 0x6

    :goto_1d
    packed-switch v12, :pswitch_data_10

    .line 417
    if-le v2, v6, :cond_14

    goto :goto_1f

    .line 429
    :pswitch_e
    const/4 v12, 0x2

    :try_start_1
    div-int/2addr v12, v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-le v2, v6, :cond_13

    .line 395
    move v2, v5

    goto :goto_1e

    :cond_13
    move v2, v7

    :goto_1e
    packed-switch v2, :pswitch_data_11

    goto :goto_1c

    .line 429
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 395
    :goto_1f
    const/16 v2, 0x39

    goto :goto_20

    :cond_14
    const/16 v2, 0x1c

    :goto_20
    packed-switch v2, :pswitch_data_12

    .line 418
    :pswitch_f
    nop

    .line 392
    and-int/lit8 v0, v8, 0x65

    xor-int/lit8 v2, v8, 0x65

    or-int/2addr v2, v0

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    if-eqz v0, :cond_15

    .line 395
    move v0, v5

    goto :goto_21

    :cond_15
    move v0, v7

    :goto_21
    packed-switch v0, :pswitch_data_13

    .line 429
    goto :goto_22

    .line 392
    :pswitch_10
    nop

    .line 422
    :goto_22
    move v0, v5

    goto :goto_26

    .line 401
    :goto_23
    xor-int/lit8 v2, v3, -0x27

    and-int/lit8 v3, v3, -0x27

    shl-int/2addr v3, v5

    add-int/2addr v2, v3

    and-int/lit8 v3, v2, -0x1

    or-int/2addr v2, v9

    add-int/2addr v3, v2

    xor-int/lit8 v2, v3, 0x2c

    and-int/lit8 v6, v3, 0x2c

    or-int/2addr v2, v6

    shl-int/2addr v2, v5

    not-int v6, v6

    or-int/lit8 v3, v3, 0x2c

    and-int/2addr v3, v6

    neg-int v3, v3

    or-int v6, v2, v3

    shl-int/2addr v6, v5

    xor-int/2addr v2, v3

    sub-int v3, v6, v2

    .line 395
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v2, 0x7e

    and-int/lit8 v2, v2, 0x7e

    shl-int/2addr v2, v5

    add-int/2addr v6, v2

    and-int/lit8 v2, v6, -0x1

    or-int/2addr v6, v9

    add-int/2addr v2, v6

    rem-int/lit16 v6, v2, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_16

    .line 429
    :cond_16
    const/16 v2, 0x1f

    const/16 v8, 0x5a

    goto/16 :goto_b

    .line 404
    :goto_24
    nop

    .line 392
    add-int/lit8 v6, v6, 0x3f

    sub-int/2addr v6, v5

    sub-int/2addr v6, v7

    sub-int/2addr v6, v5

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v4

    if-eqz v6, :cond_17

    .line 429
    :cond_17
    :goto_25
    move v0, v5

    .line 422
    :goto_26
    if-nez v0, :cond_18

    .line 395
    move v0, v7

    goto :goto_27

    :cond_18
    move v0, v5

    :goto_27
    packed-switch v0, :pswitch_data_14

    goto/16 :goto_2

    .line 392
    :pswitch_11
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x49

    not-int v3, v2

    or-int/2addr v0, v11

    and-int/2addr v0, v3

    shl-int/2addr v2, v5

    add-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v4

    if-nez v0, :cond_19

    .line 423
    :cond_19
    nop

    .line 424
    const-string v0, "LV.RN_LIST"

    const-string v2, ""

    invoke-virtual {v1, v0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 425
    const-string v0, "LV.RCP_LIST"

    invoke-virtual {v1, v0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 392
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x5

    sub-int/2addr v0, v5

    sub-int/2addr v0, v7

    sub-int/2addr v0, v5

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v4

    if-nez v0, :cond_1a

    .line 395
    const/16 v10, 0x40

    goto :goto_28

    :cond_1a
    nop

    :goto_28
    packed-switch v10, :pswitch_data_15

    .line 429
    goto :goto_29

    .line 392
    :pswitch_12
    nop

    .line 429
    :goto_29
    const/16 v8, 0x5a

    :goto_2a
    nop

    .line 403
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x6b

    and-int/lit8 v3, v0, 0x6b

    or-int/2addr v2, v3

    shl-int/2addr v2, v5

    not-int v3, v3

    or-int/lit8 v0, v0, 0x6b

    and-int/2addr v0, v3

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    .line 429
    return v8

    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x3b
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x11
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x0
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x4c
        :pswitch_b
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x32
        :pswitch_b
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x58
        :pswitch_d
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x1
        :pswitch_e
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x1c
        :pswitch_c
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x1
        :pswitch_10
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x40
        :pswitch_12
    .end packed-switch
.end method

.method ContactlessConfiguration()V
    .locals 3

    .line 682
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x79

    not-int v2, v1

    or-int/lit8 v0, v0, 0x79

    and-int/2addr v0, v2

    shl-int/lit8 v1, v1, 0x1

    neg-int v1, v1

    neg-int v1, v1

    not-int v1, v1

    sub-int/2addr v0, v1

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    :cond_0
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/AbstractCollection;->clear()V

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x63

    xor-int/lit8 v0, v0, 0x63

    or-int/2addr v0, v1

    not-int v0, v0

    sub-int/2addr v1, v0

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    return-void
.end method

.method public cancelTxn()Z
    .locals 6

    .line 1505
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x6b

    not-int v2, v1

    or-int/lit8 v3, v0, 0x6b

    and-int/2addr v2, v3

    const/4 v3, 0x1

    shl-int/2addr v1, v3

    neg-int v1, v1

    neg-int v1, v1

    xor-int v4, v2, v1

    and-int/2addr v1, v2

    shl-int/2addr v1, v3

    add-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_0

    .line 1502
    :cond_0
    iget v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 1505
    move v4, v3

    goto :goto_0

    :cond_1
    move v4, v2

    :goto_0
    packed-switch v4, :pswitch_data_0

    xor-int/lit8 v4, v0, 0x11

    and-int/lit8 v5, v0, 0x11

    shl-int/2addr v5, v3

    add-int/2addr v4, v5

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_2

    .line 1502
    :cond_2
    const/16 v4, 0x12

    if-eq v1, v4, :cond_3

    .line 1505
    move v1, v2

    goto :goto_1

    :cond_3
    move v1, v3

    :goto_1
    packed-switch v1, :pswitch_data_1

    and-int/lit8 v1, v0, 0x15

    xor-int/lit8 v0, v0, 0x15

    or-int/2addr v0, v1

    xor-int v4, v1, v0

    and-int/2addr v0, v1

    shl-int/2addr v0, v3

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_4

    goto :goto_2

    :pswitch_0
    and-int/lit8 v1, v0, 0x2e

    or-int/lit8 v0, v0, 0x2e

    add-int/2addr v1, v0

    sub-int/2addr v1, v2

    sub-int/2addr v1, v3

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return v2

    .line 1503
    :cond_4
    :goto_2
    nop

    .line 1505
    add-int/lit8 v0, v0, 0x5f

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_5

    move v0, v2

    goto :goto_3

    :cond_5
    move v0, v3

    :goto_3
    packed-switch v0, :pswitch_data_2

    return v3

    :pswitch_1
    const/16 v0, 0x4e

    :try_start_0
    div-int/2addr v0, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return v3

    :catchall_0
    move-exception v0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch
.end method

.method public doMatch([BSLjava/lang/String;)Z
    .locals 30
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move/from16 v3, p2

    .line 907
    nop

    .line 3740
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v4, v0, 0xa

    const/4 v5, 0x1

    sub-int/2addr v4, v5

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_0

    .line 875
    :cond_0
    nop

    .line 876
    const/4 v4, 0x3

    new-array v6, v4, [S

    .line 3760
    or-int/lit8 v7, v0, 0x1f

    shl-int/2addr v7, v5

    const/16 v8, 0x1f

    xor-int/2addr v0, v8

    sub-int/2addr v7, v0

    rem-int/lit16 v0, v7, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    const/4 v9, 0x0

    if-eqz v7, :cond_1

    .line 3755
    move v0, v9

    goto :goto_0

    :cond_1
    move v0, v5

    :goto_0
    packed-switch v0, :pswitch_data_0

    .line 907
    goto :goto_1

    .line 3760
    :pswitch_0
    nop

    .line 878
    :goto_1
    move v7, v9

    :goto_2
    array-length v0, v2

    if-ge v7, v0, :cond_2

    .line 3755
    const/4 v0, 0x4

    goto :goto_3

    :cond_2
    const/16 v0, 0x41

    :goto_3
    packed-switch v0, :pswitch_data_1

    .line 907
    iget-boolean v0, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getData:Z

    goto/16 :goto_59

    .line 3746
    :pswitch_1
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v10, v0, 0x20

    const/16 v11, 0x20

    and-int/2addr v0, v11

    shl-int/2addr v0, v5

    add-int/2addr v10, v0

    sub-int/2addr v10, v9

    sub-int/2addr v10, v5

    rem-int/lit16 v0, v10, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v10, v10, 0x2

    const/16 v12, 0x61

    if-eqz v10, :cond_3

    .line 3755
    move v10, v12

    goto :goto_4

    :cond_3
    const/16 v10, 0x1a

    :goto_4
    const/4 v13, -0x1

    const/16 v14, 0x9

    const/16 v15, 0xa5

    packed-switch v10, :pswitch_data_2

    .line 879
    invoke-static {v2, v7, v6}, Lcom/visa/vac/tc/emvconverter/TLVParser;->$$a([BS[S)S

    move-result v10

    .line 880
    aget-short v0, v6, v5

    const/16 v11, 0x6e92

    if-eq v0, v11, :cond_5

    goto :goto_6

    .line 879
    :pswitch_2
    invoke-static {v2, v7, v6}, Lcom/visa/vac/tc/emvconverter/TLVParser;->$$a([BS[S)S

    move-result v10

    .line 880
    aget-short v0, v6, v9

    if-eq v0, v15, :cond_4

    .line 3755
    const/16 v0, 0x49

    goto :goto_5

    :cond_4
    move v0, v14

    :goto_5
    packed-switch v0, :pswitch_data_3

    :pswitch_3
    goto/16 :goto_e

    :goto_6
    move v0, v9

    goto :goto_7

    :cond_5
    move v0, v5

    :goto_7
    packed-switch v0, :pswitch_data_4

    .line 880
    :pswitch_4
    aget-short v0, v6, v9

    const/16 v11, -0x40f4

    if-eq v0, v11, :cond_6

    .line 3755
    const/16 v17, 0x3b

    goto :goto_8

    :cond_6
    const/16 v17, 0x16

    :goto_8
    packed-switch v17, :pswitch_data_5

    .line 3740
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v18, v4, 0x44

    and-int/lit8 v19, v4, 0x44

    shl-int/lit8 v19, v19, 0x1

    add-int v18, v18, v19

    add-int/lit8 v18, v18, 0x0

    add-int/lit8 v9, v18, -0x1

    rem-int/lit16 v11, v9, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_7

    .line 880
    :cond_7
    const/16 v9, 0x70

    if-eq v0, v9, :cond_8

    .line 3755
    move v9, v5

    goto :goto_9

    :cond_8
    const/4 v9, 0x0

    :goto_9
    packed-switch v9, :pswitch_data_6

    xor-int/lit8 v9, v4, 0x71

    and-int/lit8 v11, v4, 0x71

    or-int/2addr v9, v11

    shl-int/2addr v9, v5

    and-int/lit8 v11, v4, -0x72

    not-int v15, v4

    const/16 v21, 0x71

    and-int v15, v21, v15

    or-int/2addr v11, v15

    neg-int v11, v11

    or-int v15, v9, v11

    shl-int/2addr v15, v5

    xor-int/2addr v9, v11

    sub-int/2addr v15, v9

    rem-int/lit16 v9, v15, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_9

    const/16 v9, 0x1e

    goto :goto_a

    :cond_9
    const/16 v9, 0x46

    :goto_a
    const/16 v11, 0x6f

    packed-switch v9, :pswitch_data_7

    .line 880
    if-ne v0, v11, :cond_e

    goto :goto_c

    .line 3755
    :pswitch_5
    if-ne v0, v12, :cond_a

    move v9, v5

    goto :goto_b

    :cond_a
    const/4 v9, 0x0

    :goto_b
    packed-switch v9, :pswitch_data_8

    .line 3760
    :goto_c
    or-int/lit8 v9, v4, 0x63

    shl-int/2addr v9, v5

    xor-int/lit8 v15, v4, 0x63

    neg-int v15, v15

    or-int v22, v9, v15

    shl-int/lit8 v22, v22, 0x1

    xor-int/2addr v9, v15

    sub-int v9, v22, v9

    rem-int/lit16 v15, v9, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_b

    .line 880
    :cond_b
    if-eq v11, v3, :cond_c

    .line 3755
    const/4 v9, 0x0

    goto :goto_d

    :cond_c
    move v9, v5

    :goto_d
    packed-switch v9, :pswitch_data_9

    goto :goto_12

    .line 884
    :goto_e
    neg-int v0, v10

    neg-int v0, v0

    and-int v4, v7, v0

    xor-int/2addr v0, v7

    or-int/2addr v0, v4

    neg-int v0, v0

    neg-int v0, v0

    or-int v7, v4, v0

    shl-int/2addr v7, v5

    xor-int/2addr v0, v4

    sub-int/2addr v7, v0

    int-to-short v7, v7

    .line 3760
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x5e

    and-int/lit8 v0, v0, 0x5e

    shl-int/2addr v0, v5

    add-int/2addr v4, v0

    or-int/lit8 v0, v4, -0x1

    shl-int/2addr v0, v5

    xor-int/2addr v4, v13

    sub-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_d

    .line 3755
    const/16 v0, 0xf

    goto :goto_f

    :cond_d
    const/16 v0, 0x54

    :goto_f
    packed-switch v0, :pswitch_data_a

    .line 907
    goto :goto_10

    .line 3760
    :pswitch_6
    nop

    .line 878
    :goto_10
    const/4 v4, 0x3

    :goto_11
    const/4 v9, 0x0

    goto/16 :goto_2

    .line 887
    :cond_e
    :goto_12
    :pswitch_7
    if-nez v0, :cond_f

    .line 3755
    move v9, v5

    goto :goto_13

    :cond_f
    const/4 v9, 0x0

    :goto_13
    packed-switch v9, :pswitch_data_b

    .line 891
    if-ne v0, v3, :cond_51

    goto :goto_14

    .line 3797
    :pswitch_8
    and-int/lit8 v0, v4, -0x20

    not-int v9, v4

    and-int/2addr v9, v8

    or-int/2addr v0, v9

    and-int/lit8 v4, v4, 0x1f

    shl-int/2addr v4, v5

    neg-int v4, v4

    neg-int v4, v4

    not-int v4, v4

    sub-int/2addr v0, v4

    sub-int/2addr v0, v5

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_10

    .line 888
    :cond_10
    add-int/lit8 v7, v7, 0x3

    sub-int/2addr v7, v5

    sub-int/2addr v7, v5

    int-to-short v7, v7

    .line 3760
    xor-int/lit8 v0, v4, 0x32

    and-int/lit8 v4, v4, 0x32

    shl-int/2addr v4, v5

    add-int/2addr v0, v4

    sub-int/2addr v0, v5

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_11

    .line 907
    :cond_11
    const/4 v4, 0x3

    const/4 v9, 0x0

    goto/16 :goto_2

    .line 893
    :goto_14
    :try_start_0
    new-instance v0, Lcom/visa/vac/tc/emvconverter/BERTLV;

    aget-short v4, v6, v5

    and-int v9, v7, v4

    not-int v15, v9

    or-int/2addr v4, v7

    and-int/2addr v4, v15

    shl-int/2addr v9, v5

    neg-int v9, v9

    neg-int v9, v9

    not-int v9, v9

    sub-int/2addr v4, v9

    sub-int/2addr v4, v5

    int-to-short v4, v4

    invoke-direct {v0, v2, v7, v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSS)V

    .line 897
    nop

    .line 3723
    nop

    .line 3724
    nop

    .line 3725
    nop

    .line 3730
    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v4
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    if-ne v4, v11, :cond_12

    .line 3755
    move v4, v5

    goto :goto_15

    :cond_12
    const/4 v4, 0x0

    :goto_15
    const/16 v9, 0x37

    const/4 v15, 0x0

    packed-switch v4, :pswitch_data_c

    .line 3797
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v8, v4, 0x9

    and-int/2addr v4, v14

    shl-int/2addr v4, v5

    add-int/2addr v8, v4

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_18

    goto/16 :goto_1c

    .line 3744
    :pswitch_9
    :try_start_1
    invoke-virtual {v0}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v4
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    if-ne v4, v12, :cond_17

    .line 907
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v14, v4, 0x13

    shl-int/lit8 v18, v14, 0x1

    and-int/lit8 v4, v4, 0x13

    not-int v4, v4

    and-int/2addr v4, v14

    neg-int v4, v4

    and-int v14, v18, v4

    or-int v4, v18, v4

    add-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_13

    .line 3755
    move v4, v9

    goto :goto_16

    :cond_13
    const/16 v4, 0x57

    :goto_16
    packed-switch v4, :pswitch_data_d

    .line 3745
    const/16 v4, 0x4f

    :try_start_2
    invoke-virtual {v0, v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v4

    goto :goto_19

    :pswitch_a
    const/16 v4, 0x3c

    invoke-virtual {v0, v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v4

    .line 3746
    if-eqz v4, :cond_14

    .line 3755
    const/16 v14, 0x4c

    goto :goto_17

    :cond_14
    const/16 v14, 0x13

    :goto_17
    packed-switch v14, :pswitch_data_e

    :goto_18
    goto :goto_1b

    .line 3746
    :goto_19
    if-eqz v4, :cond_15

    .line 3755
    const/16 v14, 0x29

    goto :goto_1a

    :cond_15
    const/16 v14, 0x5d

    :goto_1a
    packed-switch v14, :pswitch_data_f

    goto :goto_18

    .line 3747
    :goto_1b
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v4
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 3760
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v18, 0x5d

    xor-int/lit8 v20, v14, 0x5d

    and-int/lit8 v22, v14, 0x5d

    or-int v20, v20, v22

    shl-int/lit8 v20, v20, 0x1

    and-int/lit8 v22, v14, -0x5e

    not-int v14, v14

    and-int v14, v18, v14

    or-int v14, v22, v14

    neg-int v14, v14

    not-int v14, v14

    sub-int v20, v20, v14

    add-int/lit8 v14, v20, -0x1

    rem-int/lit16 v8, v14, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_16

    .line 907
    :cond_16
    const/4 v14, 0x3

    goto/16 :goto_25

    .line 3752
    :cond_17
    :pswitch_b
    move-object v4, v15

    const/4 v14, 0x3

    goto/16 :goto_25

    .line 3731
    :goto_1c
    const/16 v4, 0x4c9b

    :try_start_3
    invoke-virtual {v0, v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v4

    .line 3732
    if-eqz v4, :cond_1a

    goto :goto_1e

    .line 3731
    :cond_18
    const/16 v4, 0x84

    invoke-virtual {v0, v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v4

    .line 3732
    if-eqz v4, :cond_19

    .line 3755
    const/16 v8, 0x2a

    goto :goto_1d

    :cond_19
    const/16 v8, 0x42

    :goto_1d
    packed-switch v8, :pswitch_data_10

    goto :goto_1e

    .line 3735
    :cond_1a
    :pswitch_c
    move-object v4, v15

    goto :goto_1f

    .line 3733
    :goto_1e
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v4
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1

    .line 907
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v8, 0x47

    or-int/lit8 v8, v8, 0x47

    add-int/2addr v14, v8

    rem-int/lit16 v8, v14, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_1b

    .line 3735
    :cond_1b
    :goto_1f
    const/16 v8, 0xa5

    :try_start_4
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v14
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_1

    if-eqz v14, :cond_1c

    .line 3755
    move v8, v5

    goto :goto_20

    :cond_1c
    const/4 v8, 0x0

    :goto_20
    packed-switch v8, :pswitch_data_11

    .line 3776
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v14, v8, 0x5b

    and-int/lit8 v11, v8, 0x5b

    or-int/2addr v14, v11

    shl-int/2addr v14, v5

    not-int v11, v11

    or-int/lit8 v8, v8, 0x5b

    and-int/2addr v8, v11

    neg-int v8, v8

    or-int v11, v14, v8

    shl-int/2addr v11, v5

    xor-int/2addr v8, v14

    sub-int/2addr v11, v8

    rem-int/lit16 v8, v11, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_1d

    goto :goto_21

    .line 3755
    :pswitch_d
    const/4 v14, 0x3

    goto :goto_25

    .line 3736
    :cond_1d
    :goto_21
    const/16 v8, 0xa5

    :try_start_5
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    .line 3737
    const/16 v8, -0x40f4

    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v11
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_1

    if-eqz v11, :cond_1e

    .line 3755
    move v8, v5

    goto :goto_22

    :cond_1e
    const/4 v8, 0x0

    :goto_22
    packed-switch v8, :pswitch_data_12

    .line 3760
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v11, v8, 0x3

    const/4 v14, 0x3

    xor-int/2addr v8, v14

    or-int/2addr v8, v11

    add-int/2addr v11, v8

    rem-int/lit16 v8, v11, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_1f

    .line 3738
    :cond_1f
    const/16 v8, -0x40f4

    :try_start_6
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    .line 3739
    invoke-virtual {v0, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v8
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_1

    if-eqz v8, :cond_20

    .line 3755
    const/4 v8, 0x0

    goto :goto_23

    :cond_20
    move v8, v5

    :goto_23
    packed-switch v8, :pswitch_data_13

    goto :goto_25

    .line 3732
    :pswitch_e
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v11, v8, 0x6b

    xor-int/lit8 v8, v8, 0x6b

    or-int/2addr v8, v11

    neg-int v8, v8

    neg-int v8, v8

    not-int v8, v8

    sub-int/2addr v11, v8

    sub-int/2addr v11, v5

    rem-int/lit16 v8, v11, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_21

    .line 3740
    const/4 v8, 0x0

    :try_start_7
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0

    goto :goto_24

    :cond_21
    invoke-virtual {v0, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v0
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_1

    .line 880
    :goto_24
    sget v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v11, v8, 0xb

    or-int/lit8 v8, v8, 0xb

    add-int/2addr v11, v8

    rem-int/lit16 v8, v11, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v11, v11, 0x2

    if-eqz v11, :cond_22

    .line 907
    :cond_22
    nop

    .line 3752
    :goto_25
    const/16 v8, 0x87

    :try_start_8
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v8
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_1

    .line 3753
    if-eqz v8, :cond_2b

    .line 3776
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v12, v11, 0x15

    not-int v14, v12

    or-int/lit8 v11, v11, 0x15

    and-int/2addr v11, v14

    shl-int/2addr v12, v5

    and-int v14, v11, v12

    or-int/2addr v11, v12

    add-int/2addr v14, v11

    rem-int/lit16 v11, v14, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_23

    .line 3755
    const/4 v11, 0x0

    goto :goto_26

    :cond_23
    move v11, v5

    :goto_26
    packed-switch v11, :pswitch_data_14

    .line 3754
    :try_start_9
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    goto/16 :goto_2e

    :pswitch_f
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v11
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_1

    .line 3755
    if-eqz v11, :cond_24

    const/16 v12, 0x1f

    goto :goto_27

    :cond_24
    const/16 v12, 0x3e

    :goto_27
    packed-switch v12, :pswitch_data_15

    .line 3760
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v12, v12, 0x35

    sub-int/2addr v12, v5

    const/4 v14, 0x0

    sub-int/2addr v12, v14

    sub-int/2addr v12, v5

    rem-int/lit16 v14, v12, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_25

    :try_start_a
    array-length v12, v11

    if-nez v12, :cond_2a

    goto :goto_28

    .line 3755
    :cond_25
    array-length v12, v11

    if-ne v12, v5, :cond_2a

    .line 3758
    :goto_28
    :pswitch_10
    const/16 v12, 0x87

    invoke-virtual {v8, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v8
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_1

    .line 3759
    if-eqz v8, :cond_26

    .line 3755
    const/16 v12, 0x25

    goto :goto_29

    :cond_26
    const/16 v12, 0x5a

    :goto_29
    packed-switch v12, :pswitch_data_16

    .line 3760
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v14, v12, 0x18

    xor-int/lit8 v20, v14, -0x1

    and-int/2addr v14, v13

    shl-int/2addr v14, v5

    add-int v14, v20, v14

    rem-int/lit16 v13, v14, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_27

    .line 3755
    const/4 v13, 0x0

    goto :goto_2a

    :cond_27
    move v13, v5

    :goto_2a
    packed-switch v13, :pswitch_data_17

    .line 3759
    if-eqz v11, :cond_28

    goto :goto_2b

    .line 3760
    :pswitch_11
    :try_start_b
    throw v15
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_1
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 3755
    :goto_2b
    const/4 v13, 0x0

    goto :goto_2c

    :cond_28
    move v13, v5

    :goto_2c
    packed-switch v13, :pswitch_data_18

    .line 3759
    :try_start_c
    array-length v13, v11
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_1

    if-ne v13, v5, :cond_2c

    .line 880
    and-int/lit8 v11, v12, 0x1

    xor-int/lit8 v12, v12, 0x1

    or-int/2addr v12, v11

    neg-int v12, v12

    neg-int v12, v12

    and-int v13, v11, v12

    or-int/2addr v11, v12

    add-int/2addr v13, v11

    rem-int/lit16 v11, v13, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_29

    .line 3760
    :try_start_d
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v8
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_1

    const/16 v11, 0x38

    const/4 v12, 0x0

    :try_start_e
    div-int/2addr v11, v12
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_1
    .catchall {:try_start_e .. :try_end_e} :catchall_1

    goto :goto_2d

    .line 880
    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    .line 3760
    :cond_29
    :try_start_f
    invoke-virtual {v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v8

    :goto_2d
    move-object v11, v8

    .line 907
    goto :goto_2f

    .line 3756
    :cond_2a
    new-instance v0, Ljava/lang/Exception;

    const-string v4, "API wrong length"

    invoke-direct {v0, v4}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_1

    .line 3755
    :goto_2e
    :try_start_10
    invoke-super {v15}, Ljava/lang/Object;->hashCode()I

    throw v15
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_1
    .catchall {:try_start_10 .. :try_end_10} :catchall_2

    .line 3776
    :catchall_2
    move-exception v0

    throw v0

    .line 3753
    :cond_2b
    move-object v11, v15

    .line 3764
    :cond_2c
    :goto_2f
    :pswitch_12
    const/16 v8, 0x50

    :try_start_11
    invoke-virtual {v0, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v12
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_11} :catch_1

    .line 3765
    if-eqz v12, :cond_2d

    .line 3755
    const/4 v13, 0x0

    goto :goto_30

    :cond_2d
    move v13, v5

    :goto_30
    packed-switch v13, :pswitch_data_19

    goto/16 :goto_38

    .line 3797
    :pswitch_13
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v14, v13, 0x3b

    and-int/lit8 v15, v13, 0x3b

    or-int/2addr v14, v15

    shl-int/2addr v14, v5

    and-int/lit8 v15, v13, -0x3c

    not-int v13, v13

    const/16 v16, 0x3b

    and-int v13, v16, v13

    or-int/2addr v13, v15

    sub-int/2addr v14, v13

    rem-int/lit16 v13, v14, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_2e

    .line 3766
    :cond_2e
    :try_start_12
    invoke-virtual {v12, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v13
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_1

    if-eqz v13, :cond_2f

    .line 3755
    const/16 v13, 0x43

    goto :goto_31

    :cond_2f
    const/16 v13, 0x34

    :goto_31
    packed-switch v13, :pswitch_data_1a

    .line 3740
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v13, v13, 0x65

    rem-int/lit16 v14, v13, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_31

    const/16 v13, 0x31

    :try_start_13
    invoke-virtual {v12, v13}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v13

    if-eqz v13, :cond_30

    .line 3755
    const/4 v13, 0x0

    goto :goto_32

    :cond_30
    move v13, v5

    :goto_32
    packed-switch v13, :pswitch_data_1b

    goto :goto_34

    .line 3766
    :cond_31
    invoke-virtual {v12, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v13

    if-eqz v13, :cond_32

    .line 3755
    move v13, v5

    goto :goto_33

    :cond_32
    const/4 v13, 0x0

    :goto_33
    packed-switch v13, :pswitch_data_1c

    goto :goto_36

    .line 3767
    :goto_34
    :pswitch_14
    invoke-virtual {v12, v8}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v12
    :try_end_13
    .catch Ljava/lang/Exception; {:try_start_13 .. :try_end_13} :catch_1

    .line 3755
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v13, 0x71

    xor-int/lit8 v13, v13, 0x71

    or-int/2addr v13, v14

    add-int/2addr v14, v13

    rem-int/lit16 v13, v14, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_33

    move v13, v5

    goto :goto_35

    :cond_33
    const/4 v13, 0x0

    :goto_35
    packed-switch v13, :pswitch_data_1d

    .line 3770
    :goto_36
    :pswitch_15
    :try_start_14
    invoke-virtual {v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v15
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_1

    .line 3740
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v13, v12, 0x79

    not-int v14, v13

    or-int/lit8 v12, v12, 0x79

    and-int/2addr v12, v14

    shl-int/2addr v13, v5

    or-int v14, v12, v13

    shl-int/2addr v14, v5

    xor-int/2addr v12, v13

    sub-int/2addr v14, v12

    rem-int/lit16 v12, v14, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_34

    .line 3755
    const/16 v12, 0x53

    goto :goto_37

    :cond_34
    const/16 v12, 0x1a

    :goto_37
    packed-switch v12, :pswitch_data_1e

    .line 3740
    goto :goto_38

    .line 907
    :pswitch_16
    nop

    .line 3773
    :goto_38
    const/16 v12, -0x60ee

    :try_start_15
    invoke-virtual {v0, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v13
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_15} :catch_1

    .line 3774
    if-eqz v13, :cond_35

    .line 3755
    const/4 v14, 0x0

    goto :goto_39

    :cond_35
    move v14, v5

    :goto_39
    packed-switch v14, :pswitch_data_1f

    .line 3740
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v15, v14, 0x2d

    and-int/lit8 v14, v14, 0x2d

    shl-int/2addr v14, v5

    neg-int v14, v14

    neg-int v14, v14

    not-int v14, v14

    sub-int/2addr v15, v14

    sub-int/2addr v15, v5

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_36

    goto :goto_3a

    .line 3755
    :pswitch_17
    move-object/from16 v25, v15

    goto/16 :goto_44

    :goto_3a
    const/4 v14, 0x0

    goto :goto_3b

    :cond_36
    move v14, v5

    :goto_3b
    packed-switch v14, :pswitch_data_20

    .line 3776
    const/16 v14, 0x2759

    :try_start_16
    invoke-virtual {v13, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v14

    goto :goto_3d

    :pswitch_18
    invoke-virtual {v13, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData(S)Z

    move-result v14
    :try_end_16
    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_16} :catch_1

    if-eqz v14, :cond_37

    .line 3755
    const/4 v14, 0x0

    goto :goto_3c

    :cond_37
    move v14, v5

    :goto_3c
    packed-switch v14, :pswitch_data_21

    goto :goto_3e

    .line 3776
    :goto_3d
    if-eqz v14, :cond_3c

    .line 3760
    :goto_3e
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v15, v14, 0xb

    or-int/lit8 v14, v14, 0xb

    add-int/2addr v15, v14

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_38

    .line 3755
    move v14, v5

    goto :goto_3f

    :cond_38
    const/4 v14, 0x0

    :goto_3f
    packed-switch v14, :pswitch_data_22

    .line 3776
    :try_start_17
    invoke-virtual {v13, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v14

    goto :goto_41

    .line 3760
    :pswitch_19
    const/16 v14, 0x7e3a

    invoke-virtual {v13, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v14

    if-eqz v14, :cond_39

    .line 3755
    const/4 v14, 0x0

    goto :goto_40

    :cond_39
    move v14, v5

    :goto_40
    packed-switch v14, :pswitch_data_23

    goto :goto_43

    .line 3776
    :goto_41
    if-eqz v14, :cond_3a

    .line 3755
    const/16 v14, 0x5c

    goto :goto_42

    :cond_3a
    const/16 v14, 0x48

    :goto_42
    packed-switch v14, :pswitch_data_24

    .line 3777
    :pswitch_1a
    invoke-virtual {v13, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v13
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_1

    .line 3740
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v12, -0x5c

    not-int v15, v12

    and-int/lit8 v15, v15, 0x5b

    or-int/2addr v14, v15

    and-int/lit8 v12, v12, 0x5b

    shl-int/2addr v12, v5

    neg-int v12, v12

    neg-int v12, v12

    and-int v15, v14, v12

    or-int/2addr v12, v14

    add-int/2addr v15, v12

    rem-int/lit16 v12, v15, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_3b

    .line 907
    :cond_3b
    nop

    .line 3780
    :cond_3c
    :goto_43
    :pswitch_1b
    :try_start_18
    invoke-virtual {v13}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v12
    :try_end_18
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_18} :catch_1

    .line 3797
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v13, 0x79

    or-int/lit8 v13, v13, 0x79

    neg-int v13, v13

    neg-int v13, v13

    xor-int v15, v14, v13

    and-int/2addr v13, v14

    shl-int/2addr v13, v5

    add-int/2addr v15, v13

    rem-int/lit16 v13, v15, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    .line 3783
    move-object/from16 v25, v12

    :goto_44
    const/16 v12, -0x60d7

    :try_start_19
    invoke-virtual {v0, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v12
    :try_end_19
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_19} :catch_1

    .line 3784
    if-eqz v12, :cond_3f

    .line 907
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v13, v13, 0x70

    sub-int/2addr v13, v5

    rem-int/lit16 v14, v13, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_3d

    .line 3784
    :cond_3d
    :try_start_1a
    invoke-virtual {v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B
    :try_end_1a
    .catch Ljava/lang/Exception; {:try_start_1a .. :try_end_1a} :catch_1

    .line 3760
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v12, 0x1d

    xor-int/lit8 v12, v12, 0x1d

    or-int/2addr v12, v13

    neg-int v12, v12

    neg-int v12, v12

    xor-int v14, v13, v12

    and-int/2addr v12, v13

    shl-int/2addr v12, v5

    add-int/2addr v14, v12

    rem-int/lit16 v12, v14, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_3e

    .line 3755
    const/16 v12, 0x4a

    goto :goto_45

    :cond_3e
    const/16 v12, 0x25

    :goto_45
    packed-switch v12, :pswitch_data_25

    .line 907
    goto :goto_46

    .line 3760
    :pswitch_1c
    nop

    .line 3785
    :cond_3f
    :goto_46
    const/16 v12, -0x60d6

    :try_start_1b
    invoke-virtual {v0, v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->searchTag(S)Lcom/visa/vac/tc/emvconverter/BERTLV;

    move-result-object v12
    :try_end_1b
    .catch Ljava/lang/Exception; {:try_start_1b .. :try_end_1b} :catch_1

    .line 3786
    if-eqz v12, :cond_42

    .line 907
    sget v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v14, v13, 0x37

    xor-int/2addr v13, v9

    or-int/2addr v13, v14

    not-int v13, v13

    sub-int/2addr v14, v13

    sub-int/2addr v14, v5

    rem-int/lit16 v13, v14, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_40

    .line 3786
    :cond_40
    :try_start_1c
    invoke-virtual {v12}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B
    :try_end_1c
    .catch Ljava/lang/Exception; {:try_start_1c .. :try_end_1c} :catch_1

    .line 3755
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v13, v12, 0xa

    shl-int/2addr v13, v5

    xor-int/lit8 v12, v12, 0xa

    sub-int/2addr v13, v12

    xor-int/lit8 v12, v13, -0x1

    const/4 v14, -0x1

    and-int/2addr v13, v14

    shl-int/2addr v13, v5

    add-int/2addr v12, v13

    rem-int/lit16 v13, v12, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_41

    .line 907
    :cond_41
    nop

    .line 3789
    :cond_42
    if-eqz v4, :cond_43

    .line 3755
    const/16 v12, 0x58

    goto :goto_47

    :cond_43
    const/16 v12, 0x4a

    :goto_47
    packed-switch v12, :pswitch_data_26

    move-object/from16 v12, p3

    goto/16 :goto_55

    .line 3760
    :pswitch_1d
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v13, v12, 0x10

    and-int/lit8 v12, v12, 0x10

    shl-int/2addr v12, v5

    add-int/2addr v13, v12

    const/4 v12, 0x0

    sub-int/2addr v13, v12

    sub-int/2addr v13, v5

    rem-int/lit16 v12, v13, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v13, v13, 0x2

    if-eqz v13, :cond_44

    .line 3790
    :cond_44
    move-object/from16 v12, p3

    :try_start_1d
    invoke-direct {v1, v4, v12}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BLjava/lang/String;)I

    move-result v13
    :try_end_1d
    .catch Ljava/lang/Exception; {:try_start_1d .. :try_end_1d} :catch_0

    .line 3791
    const/4 v14, -0x1

    if-eq v13, v14, :cond_45

    .line 3755
    const/4 v14, 0x0

    goto :goto_48

    :cond_45
    move v14, v5

    :goto_48
    packed-switch v14, :pswitch_data_27

    goto/16 :goto_55

    .line 3760
    :pswitch_1e
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v14, v14, 0x4b

    sub-int/2addr v14, v5

    const/4 v15, 0x0

    sub-int/2addr v14, v15

    sub-int/2addr v14, v5

    rem-int/lit16 v15, v14, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_46

    .line 3755
    const/4 v14, 0x0

    goto :goto_49

    :cond_46
    move v14, v5

    :goto_49
    packed-switch v14, :pswitch_data_28

    .line 3795
    nop

    .line 3797
    if-eqz v11, :cond_47

    goto :goto_4a

    .line 3795
    :pswitch_1f
    nop

    .line 3797
    if-eqz v11, :cond_4a

    goto :goto_4c

    .line 3755
    :goto_4a
    const/16 v8, 0x1c

    goto :goto_4b

    :cond_47
    nop

    :goto_4b
    packed-switch v8, :pswitch_data_29

    .line 907
    :goto_4c
    or-int/lit8 v8, v15, 0x37

    shl-int/2addr v8, v5

    and-int/lit8 v14, v15, -0x38

    not-int v5, v15

    and-int/2addr v5, v9

    or-int/2addr v5, v14

    neg-int v5, v5

    not-int v5, v5

    sub-int/2addr v8, v5

    const/4 v5, 0x1

    sub-int/2addr v8, v5

    rem-int/lit16 v5, v8, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v8, v8, 0x2

    if-eqz v8, :cond_48

    .line 3797
    :cond_48
    const/4 v5, 0x0

    :try_start_1e
    aget-byte v8, v11, v5
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_1e .. :try_end_1e} :catch_0

    and-int/lit8 v5, v8, -0x71

    int-to-byte v5, v5

    if-nez v5, :cond_49

    .line 3755
    const/16 v5, 0x22

    goto :goto_4d

    :cond_49
    const/16 v5, 0x58

    :goto_4d
    packed-switch v5, :pswitch_data_2a

    goto :goto_4e

    .line 3800
    :pswitch_20
    and-int/lit8 v5, v8, 0xf

    int-to-byte v5, v5

    .line 3801
    nop

    .line 3760
    and-int/lit8 v8, v15, 0x32

    or-int/lit8 v9, v15, 0x32

    add-int/2addr v8, v9

    or-int/lit8 v9, v8, -0x1

    const/4 v14, 0x1

    shl-int/2addr v9, v14

    const/4 v14, -0x1

    xor-int/2addr v8, v14

    sub-int/2addr v9, v8

    rem-int/lit16 v8, v9, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    .line 3803
    move v8, v5

    goto :goto_4f

    .line 3798
    :cond_4a
    :goto_4e
    :pswitch_21
    :try_start_1f
    sget-object v5, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/AbstractCollection;->size()I

    move-result v5
    :try_end_1f
    .catch Ljava/lang/Exception; {:try_start_1f .. :try_end_1f} :catch_0

    and-int/lit8 v8, v5, 0x11

    or-int/lit8 v5, v5, 0x11

    add-int/2addr v8, v5

    const/4 v5, 0x0

    sub-int/2addr v8, v5

    const/4 v5, 0x1

    sub-int/2addr v8, v5

    int-to-byte v8, v8

    .line 3760
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v14, v9, 0x6f

    shl-int/2addr v14, v5

    const/16 v5, 0x6f

    xor-int/2addr v5, v9

    sub-int/2addr v14, v5

    rem-int/lit16 v5, v14, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_4b

    .line 907
    :cond_4b
    move v5, v8

    const/4 v8, 0x0

    .line 3803
    :goto_4f
    if-eqz v11, :cond_4c

    .line 3755
    const/4 v9, 0x0

    goto :goto_50

    :cond_4c
    const/4 v9, 0x1

    :goto_50
    packed-switch v9, :pswitch_data_2b

    goto :goto_53

    .line 3760
    :pswitch_22
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v14, v9, 0x65

    shl-int/lit8 v15, v14, 0x1

    and-int/lit8 v9, v9, 0x65

    not-int v9, v9

    and-int/2addr v9, v14

    neg-int v9, v9

    and-int v14, v15, v9

    or-int/2addr v9, v15

    add-int/2addr v14, v9

    rem-int/lit16 v9, v14, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_4d

    .line 3755
    const/4 v9, 0x0

    goto :goto_51

    :cond_4d
    const/4 v9, 0x1

    :goto_51
    packed-switch v9, :pswitch_data_2c

    .line 3803
    const/4 v9, 0x0

    :try_start_20
    aget-byte v11, v11, v9

    goto :goto_52

    .line 3760
    :pswitch_23
    const/4 v9, 0x1

    aget-byte v11, v11, v9

    and-int/lit8 v9, v11, 0x12

    not-int v14, v9

    or-int/lit8 v11, v11, 0x12

    and-int/2addr v11, v14

    xor-int v14, v11, v9

    and-int/2addr v9, v11

    or-int/2addr v9, v14

    int-to-byte v9, v9

    const/16 v11, 0x15

    if-eq v9, v11, :cond_4f

    goto :goto_53

    .line 3803
    :goto_52
    and-int/lit8 v9, v11, -0x80

    int-to-byte v9, v9

    const/16 v11, -0x80

    if-eq v9, v11, :cond_4f

    .line 3807
    :goto_53
    new-instance v9, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;

    int-to-byte v11, v8

    int-to-byte v5, v5

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    move-object/from16 v23, v9

    move-object/from16 v24, v4

    move/from16 v26, v11

    move/from16 v27, v5

    move-object/from16 v28, v0

    move/from16 v29, v13

    invoke-direct/range {v23 .. v29}, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;-><init>([B[BBB[BI)V

    invoke-static {v9}, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration(Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;)V

    .line 3808
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v5, "candidate added ["

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v5, "]: "

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_20
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_20} :catch_0

    .line 907
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v0, 0x1d

    or-int/lit8 v0, v0, 0x1d

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_4e

    .line 3755
    const/16 v0, 0x8

    goto :goto_54

    :cond_4e
    const/16 v0, 0x35

    :goto_54
    packed-switch v0, :pswitch_data_2d

    .line 907
    :pswitch_24
    goto :goto_55

    .line 899
    :catch_0
    move-exception v0

    goto :goto_57

    .line 3808
    :cond_4f
    :goto_55
    nop

    .line 3755
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v0, 0x18

    and-int/lit8 v0, v0, 0x18

    const/4 v5, 0x1

    shl-int/2addr v0, v5

    add-int/2addr v4, v0

    xor-int/lit8 v0, v4, -0x1

    const/4 v8, -0x1

    and-int/2addr v4, v8

    shl-int/2addr v4, v5

    add-int/2addr v0, v4

    rem-int/lit16 v4, v0, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_50

    const/16 v11, 0x61

    goto :goto_56

    :cond_50
    const/16 v11, 0x20

    :goto_56
    packed-switch v11, :pswitch_data_2e

    goto :goto_58

    .line 907
    :pswitch_25
    goto :goto_58

    .line 899
    :catch_1
    move-exception v0

    move-object/from16 v12, p3

    :goto_57
    invoke-virtual {v0}, Ljava/lang/Throwable;->printStackTrace()V

    goto :goto_58

    .line 891
    :cond_51
    move-object/from16 v12, p3

    .line 904
    :goto_58
    const/4 v4, 0x1

    aget-short v0, v6, v4

    neg-int v0, v0

    neg-int v0, v0

    xor-int v5, v7, v0

    and-int v8, v7, v0

    or-int/2addr v5, v8

    shl-int/2addr v5, v4

    not-int v8, v8

    or-int/2addr v0, v7

    and-int/2addr v0, v8

    neg-int v0, v0

    or-int v7, v5, v0

    shl-int/2addr v7, v4

    xor-int/2addr v0, v5

    sub-int/2addr v7, v0

    int-to-short v0, v7

    .line 905
    neg-int v5, v10

    neg-int v5, v5

    xor-int v7, v0, v5

    and-int v8, v0, v5

    or-int/2addr v7, v8

    shl-int/2addr v7, v4

    not-int v8, v5

    and-int/2addr v8, v0

    not-int v0, v0

    and-int/2addr v0, v5

    or-int/2addr v0, v8

    neg-int v0, v0

    xor-int v5, v7, v0

    and-int/2addr v0, v7

    shl-int/2addr v0, v4

    add-int/2addr v5, v0

    int-to-short v7, v5

    .line 3740
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v5, v0, 0x3b

    and-int/lit8 v8, v0, 0x3b

    or-int/2addr v5, v8

    shl-int/2addr v5, v4

    and-int/lit8 v4, v0, -0x3c

    not-int v0, v0

    const/16 v8, 0x3b

    and-int/2addr v0, v8

    or-int/2addr v0, v4

    neg-int v0, v0

    and-int v4, v5, v0

    or-int/2addr v0, v5

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    .line 878
    const/4 v4, 0x3

    const/4 v5, 0x1

    const/16 v8, 0x1f

    goto/16 :goto_11

    .line 907
    :goto_59
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x65

    not-int v4, v3

    or-int/lit8 v2, v2, 0x65

    and-int/2addr v2, v4

    const/4 v4, 0x1

    shl-int/2addr v3, v4

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_52

    .line 3755
    move v5, v4

    goto :goto_5a

    :cond_52
    const/4 v5, 0x0

    :goto_5a
    packed-switch v5, :pswitch_data_2f

    .line 907
    goto :goto_5b

    :pswitch_26
    return v0

    :goto_5b
    const/16 v2, 0x36

    const/4 v3, 0x0

    :try_start_21
    div-int/2addr v2, v3
    :try_end_21
    .catchall {:try_start_21 .. :try_end_21} :catchall_3

    return v0

    :catchall_3
    move-exception v0

    move-object v2, v0

    throw v2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x4
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1a
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x49
        :pswitch_4
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x16
        :pswitch_3
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1e
        :pswitch_5
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0xf
        :pswitch_6
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x0
        :pswitch_9
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x37
        :pswitch_a
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x13
        :pswitch_b
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x5d
        :pswitch_b
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x42
        :pswitch_c
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_d
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_d
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_f
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x3e
        :pswitch_10
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x5a
        :pswitch_12
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x1
        :pswitch_12
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x34
        :pswitch_15
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x1
        :pswitch_14
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x1
        :pswitch_15
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x1a
        :pswitch_16
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x1
        :pswitch_17
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x1
        :pswitch_18
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x1
        :pswitch_1b
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0x1
        :pswitch_19
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x0
        :pswitch_1a
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x48
        :pswitch_1b
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x4a
        :pswitch_1c
    .end packed-switch

    :pswitch_data_26
    .packed-switch 0x58
        :pswitch_1d
    .end packed-switch

    :pswitch_data_27
    .packed-switch 0x0
        :pswitch_1e
    .end packed-switch

    :pswitch_data_28
    .packed-switch 0x1
        :pswitch_1f
    .end packed-switch

    :pswitch_data_29
    .packed-switch 0x50
        :pswitch_21
    .end packed-switch

    :pswitch_data_2a
    .packed-switch 0x58
        :pswitch_20
    .end packed-switch

    :pswitch_data_2b
    .packed-switch 0x0
        :pswitch_22
    .end packed-switch

    :pswitch_data_2c
    .packed-switch 0x0
        :pswitch_23
    .end packed-switch

    :pswitch_data_2d
    .packed-switch 0x8
        :pswitch_24
    .end packed-switch

    :pswitch_data_2e
    .packed-switch 0x20
        :pswitch_25
    .end packed-switch

    :pswitch_data_2f
    .packed-switch 0x0
        :pswitch_26
    .end packed-switch
.end method

.method public getActionRest(Lcom/visa/vac/tc/emvconverter/ActionEngine;)Ljava/lang/String;
    .locals 11

    .line 1553
    nop

    .line 1529
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x10

    const/4 v1, 0x0

    sub-int/2addr v0, v1

    const/4 v2, 0x1

    sub-int/2addr v0, v2

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    .line 1510
    :cond_0
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ActionEngine;->getInstance()Ljava/lang/String;

    move-result-object v0

    .line 1511
    const-string v3, ""

    invoke-virtual {v0, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 1529
    const/16 v4, 0x57

    goto :goto_0

    :cond_1
    const/16 v4, 0x38

    :goto_0
    const/4 v5, 0x0

    packed-switch v4, :pswitch_data_0

    .line 1553
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v0, p1, 0x27

    and-int/lit8 v3, p1, 0x27

    or-int/2addr v0, v3

    shl-int/2addr v0, v2

    not-int v3, v3

    const/16 v4, 0x27

    or-int/2addr p1, v4

    and-int/2addr p1, v3

    neg-int p1, p1

    and-int v3, v0, p1

    or-int/2addr p1, v0

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_e

    goto/16 :goto_f

    .line 1514
    :pswitch_0
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ActionEngine;->getTerminalData()Ljava/lang/String;

    move-result-object v4

    const-string v6, "ACTION."

    invoke-virtual {v4, v6, v3}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

    move-result-object v3

    .line 1515
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ActionEngine;->BuildConfig()Ljava/lang/String;

    move-result-object p1

    .line 1516
    nop

    .line 1520
    :try_start_0
    new-instance v4, Lcom/visa/vac/tc/emvconverter/model/PostRest;

    invoke-direct {v4}, Lcom/visa/vac/tc/emvconverter/model/PostRest;-><init>()V

    .line 1523
    const-string v6, "************ _____________******************* _REST CALL for "

    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v6, v3}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1524
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->ContactlessConfiguration(Ljava/lang/String;)V

    .line 1525
    const-string p1, ","

    invoke-virtual {v0, p1}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object p1

    .line 1526
    array-length v0, p1

    new-array v0, v0, [Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    .line 1527
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 1528
    nop

    .line 1529
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v7, v6, 0x21

    shl-int/2addr v7, v2

    xor-int/lit8 v6, v6, 0x21

    sub-int/2addr v7, v6

    rem-int/lit16 v6, v7, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_2

    .line 1553
    :cond_2
    move v6, v1

    .line 1528
    :goto_1
    :try_start_1
    array-length v7, p1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    if-ge v6, v7, :cond_3

    .line 1529
    const/16 v7, 0x5d

    goto :goto_2

    :cond_3
    const/16 v7, 0x41

    :goto_2
    packed-switch v7, :pswitch_data_1

    .line 1512
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v8, v7, 0x6b

    or-int/lit8 v7, v7, 0x6b

    not-int v7, v7

    sub-int/2addr v8, v7

    sub-int/2addr v8, v2

    rem-int/lit16 v7, v8, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_5

    goto :goto_3

    .line 1543
    :pswitch_1
    :try_start_2
    invoke-virtual {v4, v3}, Lcom/visa/vac/tc/emvconverter/model/PostRest;->setEvntLst(Ljava/util/ArrayList;)V

    .line 1544
    new-instance p1, Lcom/google/gson/Gson;

    invoke-direct {p1}, Lcom/google/gson/Gson;-><init>()V

    .line 1546
    const-class v0, Lcom/visa/vac/tc/emvconverter/model/PostRest;

    invoke-virtual {p1, v4, v0}, Lcom/google/gson/Gson;->toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/String;

    move-result-object v5

    .line 1547
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    .line 1512
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v0, 0x23

    and-int/lit8 v1, p1, -0x24

    not-int v3, p1

    and-int/2addr v3, v0

    or-int/2addr v1, v3

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_4

    .line 1553
    :cond_4
    goto/16 :goto_e

    .line 1529
    :goto_3
    move v7, v2

    goto :goto_4

    :cond_5
    const/16 v7, 0x42

    :goto_4
    const-string v8, "OPENED_AND_RECEIVE"

    packed-switch v7, :pswitch_data_2

    :try_start_3
    aget-object p1, p1, v6

    goto/16 :goto_d

    :pswitch_2
    aget-object v7, p1, v6

    invoke-virtual {v7, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_6

    const/16 v7, 0x49

    goto :goto_5

    :cond_6
    const/16 v7, 0x36

    :goto_5
    packed-switch v7, :pswitch_data_3

    goto :goto_8

    .line 1533
    :pswitch_3
    aget-object v7, p1, v6

    const-string v8, "RECEIVE_DATA"

    invoke-virtual {v7, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    if-eqz v7, :cond_7

    .line 1529
    const/16 v7, 0x25

    goto :goto_6

    :cond_7
    const/16 v7, 0x19

    :goto_6
    packed-switch v7, :pswitch_data_4

    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v7, v7, 0x63

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_8

    .line 1534
    :cond_8
    :try_start_4
    const-string v7, "emv.card.CDOL2"

    invoke-virtual {p0, v7}, Lcom/visa/vac/tc/emvconverter/CAL;->getCardData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v7

    iget v8, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    invoke-static {v7, v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->buildDoltoKdil(Ljava/lang/Object;I)V
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_0

    .line 1529
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v8, 0x3f

    and-int/lit8 v9, v7, -0x40

    not-int v10, v7

    and-int/2addr v10, v8

    or-int/2addr v9, v10

    and-int/2addr v7, v8

    shl-int/2addr v7, v2

    and-int v8, v9, v7

    or-int/2addr v7, v9

    add-int/2addr v8, v7

    rem-int/lit16 v7, v8, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v8, v8, 0x2

    if-nez v8, :cond_9

    move v7, v2

    goto :goto_7

    :cond_9
    move v7, v1

    :goto_7
    packed-switch v7, :pswitch_data_5

    goto :goto_a

    .line 1530
    :goto_8
    :try_start_5
    iget-boolean v7, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    if-eqz v7, :cond_a

    .line 1529
    move v7, v1

    goto :goto_9

    :cond_a
    move v7, v2

    :goto_9
    packed-switch v7, :pswitch_data_6

    :goto_a
    :pswitch_4
    goto :goto_c

    .line 1553
    :pswitch_5
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v8, v7, 0x6f

    and-int/lit8 v9, v7, 0x6f

    or-int/2addr v8, v9

    shl-int/2addr v8, v2

    not-int v9, v9

    or-int/lit8 v7, v7, 0x6f

    and-int/2addr v7, v9

    neg-int v7, v7

    or-int v9, v8, v7

    shl-int/2addr v9, v2

    xor-int/2addr v7, v8

    sub-int/2addr v9, v7

    rem-int/lit16 v7, v9, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_b

    .line 1531
    :cond_b
    :try_start_6
    const-string v7, "emv.card.CDOL1"

    invoke-virtual {p0, v7}, Lcom/visa/vac/tc/emvconverter/CAL;->getCardData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v7

    iget v8, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    invoke-static {v7, v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->buildDoltoKdil(Ljava/lang/Object;I)V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 1529
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v7, v7, 0x5c

    sub-int/2addr v7, v2

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_c

    const/16 v7, 0x4c

    goto :goto_b

    :cond_c
    const/16 v7, 0x11

    :goto_b
    packed-switch v7, :pswitch_data_7

    goto :goto_a

    .line 1553
    :pswitch_6
    nop

    .line 1536
    :goto_c
    :try_start_7
    new-instance v7, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-direct {v7}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;-><init>()V

    aput-object v7, v0, v6

    .line 1537
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v7

    new-instance v8, Ljava/lang/StringBuilder;

    const-string v9, "set"

    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    aget-object v9, p1, v6

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v8

    new-array v9, v1, [Ljava/lang/Class;

    invoke-virtual {v7, v8, v9}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v7

    .line 1538
    aget-object v8, v0, v6

    new-array v9, v1, [Ljava/lang/Object;

    invoke-virtual {v7, v8, v9}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    .line 1539
    aget-object v7, v0, v6

    invoke-virtual {v3, v7}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    .line 1528
    add-int/lit8 v6, v6, 0x2

    and-int/lit8 v7, v6, -0x1

    or-int/lit8 v6, v6, -0x1

    add-int/2addr v6, v7

    .line 1529
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v7, v7, 0x43

    sub-int/2addr v7, v2

    sub-int/2addr v7, v2

    rem-int/lit16 v8, v7, 0x80

    sput v8, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_d

    .line 1553
    :cond_d
    goto/16 :goto_1

    .line 1529
    :goto_d
    :try_start_8
    invoke-virtual {p1, v8}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    :try_start_9
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    .line 1512
    :catchall_0
    move-exception p1

    throw p1

    .line 1549
    :catch_0
    move-exception p1

    .line 1550
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 1551
    invoke-virtual {p1}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1553
    :goto_e
    nop

    .line 1529
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v0, p1, 0x37

    shl-int/lit8 v1, v0, 0x1

    and-int/lit8 p1, p1, 0x37

    not-int p1, p1

    and-int/2addr p1, v0

    neg-int p1, p1

    or-int v0, v1, p1

    shl-int/2addr v0, v2

    xor-int/2addr p1, v1

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    .line 1553
    return-object v5

    .line 1529
    :goto_f
    move v2, v1

    goto :goto_10

    :cond_e
    nop

    :goto_10
    packed-switch v2, :pswitch_data_8

    .line 1512
    goto :goto_12

    :goto_11
    :pswitch_7
    goto :goto_13

    :goto_12
    :try_start_a
    div-int/2addr v4, v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    goto :goto_11

    .line 1553
    :goto_13
    and-int/lit8 v0, p1, 0x4b

    or-int/lit8 p1, p1, 0x4b

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    return-object v5

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x38
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x41
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x42
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x36
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x19
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x11
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_7
    .end packed-switch
.end method

.method public getActiveReader(Lcom/visa/vac/tc/emvconverter/EmvReader;)Z
    .locals 7

    .line 1375
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x4f

    xor-int/lit8 v2, v0, 0x4f

    or-int/2addr v2, v1

    neg-int v2, v2

    neg-int v2, v2

    or-int v3, v1, v2

    const/4 v4, 0x1

    shl-int/2addr v3, v4

    xor-int/2addr v1, v2

    sub-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_0

    .line 1372
    :cond_0
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 1375
    const/16 v3, 0x60

    goto :goto_0

    :cond_1
    move v3, v2

    :goto_0
    packed-switch v3, :pswitch_data_0

    :goto_1
    goto :goto_5

    :pswitch_0
    xor-int/lit8 v3, v0, 0x45

    and-int/lit8 v5, v0, 0x45

    or-int/2addr v3, v5

    shl-int/2addr v3, v4

    not-int v5, v5

    or-int/lit8 v6, v0, 0x45

    and-int/2addr v5, v6

    sub-int/2addr v3, v5

    rem-int/lit16 v5, v3, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_2

    .line 1372
    :cond_2
    if-ne p1, v1, :cond_3

    .line 1375
    const/16 p1, 0x5f

    goto :goto_2

    :cond_3
    const/4 p1, 0x7

    :goto_2
    packed-switch p1, :pswitch_data_1

    goto :goto_1

    :pswitch_1
    add-int/lit8 v5, v5, 0x28

    or-int/lit8 p1, v5, -0x1

    shl-int/2addr p1, v4

    xor-int/lit8 v0, v5, -0x1

    sub-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_4

    const/16 p1, 0x53

    goto :goto_3

    :cond_4
    const/16 p1, 0x2c

    :goto_3
    packed-switch p1, :pswitch_data_2

    goto :goto_4

    :pswitch_2
    return v2

    :goto_4
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    .line 1373
    :goto_5
    nop

    .line 1375
    add-int/lit8 v0, v0, 0x45

    sub-int/2addr v0, v4

    xor-int/lit8 p1, v0, -0x1

    and-int/lit8 v0, v0, -0x1

    shl-int/2addr v0, v4

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    return v4

    nop

    :pswitch_data_0
    .packed-switch 0x60
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x7
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x2c
        :pswitch_2
    .end packed-switch
.end method

.method public getCalListener()Lcom/visa/vac/tc/emvconverter/CAL$CALListener;
    .locals 6

    .line 150
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x21

    xor-int/lit8 v2, v0, 0x21

    or-int/2addr v2, v1

    not-int v2, v2

    sub-int/2addr v1, v2

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v2, v1, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_0

    const/16 v1, 0x38

    goto :goto_0

    :cond_0
    const/16 v1, 0x29

    :goto_0
    const/4 v2, 0x0

    packed-switch v1, :pswitch_data_0

    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    goto :goto_1

    :pswitch_0
    :try_start_0
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    throw v0

    :goto_1
    const/16 v3, 0x43

    and-int/lit8 v4, v0, -0x44

    not-int v5, v0

    and-int/2addr v5, v3

    or-int/2addr v4, v5

    and-int/2addr v0, v3

    shl-int/lit8 v0, v0, 0x1

    add-int/2addr v4, v0

    rem-int/lit16 v0, v4, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_1

    const/16 v0, 0x41

    goto :goto_2

    :cond_1
    const/16 v0, 0x23

    :goto_2
    packed-switch v0, :pswitch_data_1

    goto :goto_3

    :pswitch_1
    return-object v1

    :goto_3
    :try_start_1
    throw v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception v0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x38
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x23
        :pswitch_1
    .end packed-switch
.end method

.method public getCardData(Ljava/lang/String;)Ljava/lang/Object;
    .locals 3

    .line 530
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x9

    xor-int/lit8 v0, v0, 0x9

    or-int/2addr v0, v1

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v0, 0x2

    rem-int/2addr v1, v0

    const/4 v2, 0x0

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    packed-switch v1, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    :try_start_0
    div-int/2addr v0, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception p1

    throw p1

    :goto_1
    return-object p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method public getFirstCandidate()B
    .locals 8
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 718
    nop

    .line 714
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x31

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    .line 686
    const/16 v0, 0x1c

    goto :goto_0

    :cond_0
    const/16 v0, 0x5f

    :goto_0
    const/4 v1, 0x1

    const/4 v2, 0x0

    packed-switch v0, :pswitch_data_0

    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/AbstractCollection;->size()I

    move-result v0

    if-lez v0, :cond_3

    :goto_1
    goto :goto_2

    :pswitch_0
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/AbstractCollection;->size()I

    move-result v0

    const/16 v3, 0x3e

    :try_start_0
    div-int/2addr v3, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-lez v0, :cond_3

    goto :goto_1

    .line 714
    :catchall_0
    move-exception v0

    throw v0

    .line 688
    :goto_2
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;

    .line 689
    iget-object v3, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->BuildConfig:[B

    array-length v3, v3

    new-array v3, v3, [B

    .line 690
    iget-object v4, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->BuildConfig:[B

    iget-object v5, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->BuildConfig:[B

    array-length v5, v5

    invoke-static {v4, v2, v3, v2, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 691
    new-instance v4, Ljava/lang/StringBuilder;

    const-string v5, "first candidate: "

    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 693
    const/16 v4, 0x87

    new-array v5, v1, [B

    iget-byte v6, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->getTerminalData:B

    aput-byte v6, v5, v2

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 694
    const/16 v4, 0x4f

    iget-object v5, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->BuildConfig:[B

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 695
    const/16 v4, 0x50

    iget-object v5, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->ContactlessConfiguration:[B

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 696
    const/16 v4, 0x61

    iget-object v5, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->$$a:[B

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 697
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v3

    const-string v4, "LV.AID"

    invoke-static {v4, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 698
    const/16 v3, 0x84

    iget-object v4, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->BuildConfig:[B

    invoke-static {v3, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 701
    const-string v3, "emv.tx.cal.ActiveInterfaceID"

    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    .line 702
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v5, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->clear:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ":"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    .line 703
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v0, v0, Lcom/visa/vac/tc/emvconverter/CAL$getTerminalData;->clear:Ljava/lang/String;

    const/16 v7, 0xa

    invoke-virtual {v0, v2, v7}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v0

    .line 705
    sget-object v5, Lcom/visa/vac/tc/emvconverter/CAL;->getKernelData:Landroid/util/ArrayMap;

    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    sput-object v4, Lcom/visa/vac/tc/emvconverter/CAL;->convertToArrayMap:Landroid/util/ArrayMap;

    .line 706
    sget-object v4, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    sget-object v5, Lcom/visa/vac/tc/emvconverter/CAL;->convertToArrayMap:Landroid/util/ArrayMap;

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V

    .line 709
    new-instance v4, Landroid/util/ArrayMap;

    invoke-direct {v4}, Landroid/util/ArrayMap;-><init>()V

    iput-object v4, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    .line 710
    sget-object v4, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    const-string v5, "ANY:"

    invoke-virtual {v5, v3}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    iput-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    .line 711
    sget-object v4, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    const-string v5, "ANY:ANY"

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V

    .line 713
    sget-object v3, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 686
    goto :goto_3

    :cond_1
    move v2, v1

    :goto_3
    packed-switch v2, :pswitch_data_1

    goto :goto_6

    .line 718
    :pswitch_1
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x56

    or-int/lit8 v2, v2, 0x56

    add-int/2addr v3, v2

    sub-int/2addr v3, v1

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_2

    .line 686
    const/16 v2, 0x21

    goto :goto_4

    :cond_2
    const/16 v2, 0x42

    :goto_4
    packed-switch v2, :pswitch_data_2

    .line 714
    iget-object v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    sget-object v3, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V

    goto :goto_5

    :pswitch_2
    iget-object v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    sget-object v2, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V

    const/4 v0, 0x0

    :try_start_1
    throw v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 718
    :catchall_1
    move-exception v0

    throw v0

    :goto_5
    nop

    .line 716
    :goto_6
    const/16 v0, 0x5a

    .line 686
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v3, v2, 0x6f

    and-int/lit8 v4, v2, 0x6f

    or-int/2addr v3, v4

    shl-int/2addr v3, v1

    not-int v4, v4

    or-int/lit8 v2, v2, 0x6f

    and-int/2addr v2, v4

    neg-int v2, v2

    not-int v2, v2

    sub-int/2addr v3, v2

    sub-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    .line 718
    return v0

    :cond_3
    const/16 v0, -0x5b

    .line 686
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v2, v2, 0x3

    sub-int/2addr v2, v1

    or-int/lit8 v3, v2, -0x1

    shl-int/lit8 v1, v3, 0x1

    xor-int/lit8 v2, v2, -0x1

    sub-int/2addr v1, v2

    rem-int/lit16 v2, v1, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    .line 718
    return v0

    :pswitch_data_0
    .packed-switch 0x1c
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x21
        :pswitch_2
    .end packed-switch
.end method

.method public getFirstGenData(S)[B
    .locals 4

    .line 533
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, -0x32

    not-int v2, v0

    and-int/lit8 v2, v2, 0x31

    or-int/2addr v1, v2

    and-int/lit8 v0, v0, 0x31

    shl-int/lit8 v0, v0, 0x1

    or-int v2, v1, v0

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    :cond_0
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S)[B

    move-result-object p1

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v1, 0x6f

    and-int/lit8 v2, v0, -0x70

    not-int v3, v0

    and-int/2addr v3, v1

    or-int/2addr v2, v3

    and-int/2addr v0, v1

    shl-int/lit8 v0, v0, 0x1

    and-int v1, v2, v0

    or-int/2addr v0, v2

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1

    const/16 v0, 0x30

    goto :goto_0

    :cond_1
    const/16 v0, 0x59

    :goto_0
    packed-switch v0, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    return-object p1

    :goto_1
    const/16 v0, 0x38

    :try_start_0
    div-int/lit8 v0, v0, 0x0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    return-object p1

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x59
        :pswitch_0
    .end packed-switch
.end method

.method getInstance([BZLjava/lang/String;)B
    .locals 3

    .line 211
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x75

    or-int/lit8 v0, v0, 0x75

    or-int v2, v1, v0

    shl-int/lit8 v2, v2, 0x1

    xor-int/2addr v0, v1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    :cond_0
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([BZLjava/lang/String;Z)B

    move-result p1

    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p2, p2, 0x45

    add-int/lit8 p2, p2, -0x1

    xor-int/lit8 p3, p2, -0x1

    and-int/lit8 p2, p2, -0x1

    shl-int/lit8 p2, p2, 0x1

    add-int/2addr p3, p2

    rem-int/lit16 p2, p3, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p3, p3, 0x2

    if-nez p3, :cond_1

    const/16 p2, 0xa

    goto :goto_0

    :cond_1
    const/16 p2, 0x1d

    :goto_0
    packed-switch p2, :pswitch_data_0

    return p1

    :pswitch_0
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0xa
        :pswitch_0
    .end packed-switch
.end method

.method getInstance([BZLjava/lang/String;Z)B
    .locals 24

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move-object/from16 v2, p3

    .line 287
    nop

    .line 220
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, v3, 0x2b

    const/16 v5, 0x2b

    xor-int/2addr v3, v5

    or-int/2addr v3, v4

    or-int v6, v4, v3

    const/4 v7, 0x1

    shl-int/2addr v6, v7

    xor-int/2addr v3, v4

    sub-int/2addr v6, v3

    rem-int/lit16 v3, v6, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v4, 0x2

    rem-int/2addr v6, v4

    if-nez v6, :cond_0

    .line 218
    const/16 v6, 0x28

    goto :goto_0

    :cond_0
    const/16 v6, 0x24

    :goto_0
    const/16 v10, 0x6f

    const-string v13, "LV.DOL_LIST"

    const/4 v5, 0x3

    const-string v8, "LV.CONSTRUCTED_DOL"

    const/16 v17, -0x1

    const/16 v18, 0x0

    const/4 v11, 0x0

    packed-switch v6, :pswitch_data_0

    .line 214
    nop

    .line 215
    nop

    .line 218
    if-eqz v0, :cond_2

    goto :goto_2

    .line 214
    :pswitch_0
    nop

    .line 215
    nop

    .line 218
    if-eqz v0, :cond_1

    move v6, v7

    goto :goto_1

    :cond_1
    move v6, v11

    :goto_1
    packed-switch v6, :pswitch_data_1

    move v6, v7

    goto/16 :goto_11

    :goto_2
    move v6, v11

    goto :goto_3

    :cond_2
    move v6, v7

    :goto_3
    packed-switch v6, :pswitch_data_2

    move v6, v11

    goto/16 :goto_11

    .line 275
    :pswitch_1
    if-nez p2, :cond_3

    .line 218
    move v0, v7

    goto :goto_4

    :cond_3
    move v0, v11

    :goto_4
    packed-switch v0, :pswitch_data_3

    :goto_5
    goto/16 :goto_e

    .line 236
    :pswitch_2
    const/16 v0, 0x31

    xor-int/lit8 v6, v3, 0x31

    and-int/lit8 v16, v3, 0x31

    or-int v6, v6, v16

    shl-int/2addr v6, v7

    and-int/lit8 v16, v3, -0x32

    not-int v3, v3

    and-int/2addr v0, v3

    or-int v0, v16, v0

    neg-int v0, v0

    or-int v3, v6, v0

    shl-int/2addr v3, v7

    xor-int/2addr v0, v6

    sub-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_4

    .line 218
    const/16 v14, 0x48

    goto :goto_6

    :cond_4
    const/16 v14, 0x5e

    :goto_6
    packed-switch v14, :pswitch_data_4

    .line 275
    goto :goto_7

    .line 236
    :pswitch_3
    :try_start_0
    invoke-virtual {v2, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    invoke-super/range {v18 .. v18}, Ljava/lang/Object;->hashCode()I

    throw v18
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception v0

    throw v0

    .line 275
    :goto_7
    :try_start_2
    invoke-virtual {v2, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    if-eqz v0, :cond_5

    .line 218
    const/16 v0, 0x21

    goto :goto_8

    :cond_5
    const/16 v0, 0x49

    :goto_8
    packed-switch v0, :pswitch_data_5

    goto :goto_5

    .line 228
    :pswitch_4
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, v0, 0x6f

    xor-int/2addr v0, v10

    or-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v7

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_6

    .line 218
    move v11, v7

    goto :goto_9

    :cond_6
    nop

    :goto_9
    const-string v0, "8300"

    packed-switch v11, :pswitch_data_6

    .line 280
    goto :goto_a

    :pswitch_5
    :try_start_3
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 281
    const/16 v9, 0x5a

    goto :goto_b

    .line 280
    :goto_a
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    .line 281
    const/16 v9, 0x2f

    .line 253
    :goto_b
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x2d

    and-int/lit8 v3, v0, 0x2d

    or-int/2addr v2, v3

    shl-int/2addr v2, v7

    not-int v3, v3

    or-int/lit8 v0, v0, 0x2d

    and-int/2addr v0, v3

    neg-int v0, v0

    and-int v3, v2, v0

    or-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_7

    .line 218
    goto :goto_c

    :cond_7
    const/16 v5, 0x39

    :goto_c
    packed-switch v5, :pswitch_data_7

    .line 253
    goto :goto_d

    .line 287
    :pswitch_6
    nop

    .line 281
    :goto_d
    move v12, v9

    goto :goto_f

    :goto_e
    move/from16 v12, v17

    .line 220
    :goto_f
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v2, 0x37

    and-int/lit8 v3, v0, -0x38

    not-int v5, v0

    and-int/2addr v5, v2

    or-int/2addr v3, v5

    and-int/2addr v0, v2

    shl-int/2addr v0, v7

    not-int v0, v0

    sub-int/2addr v3, v0

    sub-int/2addr v3, v7

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_8

    .line 287
    :cond_8
    :goto_10
    goto/16 :goto_4f

    .line 233
    :goto_11
    and-int/lit8 v19, v3, 0x65

    xor-int/lit8 v3, v3, 0x65

    or-int v3, v3, v19

    or-int v20, v19, v3

    shl-int/lit8 v20, v20, 0x1

    xor-int v3, v19, v3

    sub-int v3, v20, v3

    rem-int/lit16 v10, v3, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_9

    .line 218
    const/16 v3, 0x14

    goto :goto_12

    :cond_9
    const/16 v3, 0x50

    :goto_12
    packed-switch v3, :pswitch_data_8

    .line 220
    const/16 v5, -0x5b

    :try_start_4
    invoke-static/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_1

    goto/16 :goto_4d

    :pswitch_7
    :try_start_5
    invoke-static/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v3
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0

    const/16 v10, 0x41

    if-eqz v3, :cond_a

    .line 218
    const/16 v3, 0x5e

    goto :goto_13

    :cond_a
    move v3, v10

    :goto_13
    packed-switch v3, :pswitch_data_9

    :goto_14
    :pswitch_8
    goto/16 :goto_4b

    .line 253
    :pswitch_9
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v20, v3, -0x8

    not-int v14, v3

    and-int/lit8 v14, v14, 0x7

    or-int v14, v20, v14

    and-int/lit8 v20, v3, 0x7

    shl-int/lit8 v20, v20, 0x1

    and-int v22, v14, v20

    or-int v14, v14, v20

    add-int v14, v22, v14

    rem-int/lit16 v15, v14, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v4

    if-nez v14, :cond_b

    .line 218
    const/16 v14, 0x5e

    goto :goto_15

    :cond_b
    const/16 v14, 0x47

    :goto_15
    packed-switch v14, :pswitch_data_a

    .line 223
    :try_start_6
    new-array v14, v5, [S

    goto :goto_16

    :pswitch_a
    new-array v14, v5, [S

    aput-short v11, v14, v11

    aput-short v11, v14, v7

    aput-short v11, v14, v4

    .line 224
    const/16 v15, 0xff

    new-array v15, v15, [B

    .line 227
    nop

    .line 228
    move/from16 v21, v11

    goto :goto_17

    .line 223
    :goto_16
    aput-short v11, v14, v11

    aput-short v11, v14, v7

    aput-short v11, v14, v4

    .line 224
    const/16 v15, 0x2ab5

    new-array v15, v15, [B
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 227
    nop

    .line 228
    move/from16 v21, v7

    .line 287
    :goto_17
    and-int/lit8 v5, v3, 0x6d

    not-int v12, v5

    or-int/lit8 v3, v3, 0x6d

    and-int/2addr v3, v12

    shl-int/2addr v5, v7

    or-int v12, v3, v5

    shl-int/2addr v12, v7

    xor-int/2addr v3, v5

    sub-int/2addr v12, v3

    rem-int/lit16 v3, v12, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v4

    if-nez v12, :cond_c

    .line 218
    move v3, v11

    goto :goto_18

    :cond_c
    move v3, v7

    :goto_18
    packed-switch v3, :pswitch_data_b

    .line 287
    :pswitch_b
    nop

    .line 230
    move v5, v11

    move/from16 v3, v21

    :goto_19
    :try_start_7
    array-length v12, v0
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    if-ge v5, v12, :cond_d

    .line 218
    const/16 v12, 0x35

    goto :goto_1a

    :cond_d
    const/16 v12, 0x2b

    :goto_1a
    const/16 v21, 0x11

    packed-switch v12, :pswitch_data_c

    .line 242
    if-eqz p2, :cond_15

    goto/16 :goto_25

    .line 253
    :pswitch_c
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v23, v12, 0x3d

    xor-int/lit8 v12, v12, 0x3d

    or-int v12, v12, v23

    not-int v12, v12

    sub-int v23, v23, v12

    add-int/lit8 v12, v23, -0x1

    rem-int/lit16 v9, v12, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v4

    if-nez v12, :cond_e

    .line 231
    :cond_e
    :try_start_8
    invoke-static {v0, v5, v14}, Lcom/visa/vac/tc/emvconverter/TLVParser;->$$a([BS[S)S

    move-result v9

    .line 232
    aget-short v12, v14, v11
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    const/16 v11, -0x609a

    if-ne v12, v11, :cond_f

    .line 218
    const/4 v11, 0x0

    goto :goto_1b

    :cond_f
    move v11, v7

    :goto_1b
    packed-switch v11, :pswitch_data_d

    goto :goto_1d

    .line 236
    :pswitch_d
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v11, v6, 0x5

    xor-int/lit8 v6, v6, 0x5

    or-int/2addr v6, v11

    xor-int v12, v11, v6

    and-int/2addr v6, v11

    shl-int/2addr v6, v7

    add-int/2addr v12, v6

    rem-int/lit16 v6, v12, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v12, v4

    if-eqz v12, :cond_10

    .line 218
    const/16 v6, 0x1e

    goto :goto_1c

    :cond_10
    const/16 v6, 0x32

    :goto_1c
    packed-switch v6, :pswitch_data_e

    .line 233
    :pswitch_e
    nop

    .line 287
    move v6, v7

    .line 235
    :goto_1d
    if-eqz p4, :cond_11

    .line 218
    const/4 v11, 0x0

    goto :goto_1e

    :cond_11
    move v11, v7

    :goto_1e
    packed-switch v11, :pswitch_data_f

    .line 257
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v11, v11, 0x4

    sub-int/2addr v11, v7

    rem-int/lit16 v12, v11, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v11, v4

    if-eqz v11, :cond_12

    .line 218
    const/16 v11, 0x57

    goto :goto_1f

    :cond_12
    const/16 v11, 0xe

    :goto_1f
    packed-switch v11, :pswitch_data_10

    .line 236
    :try_start_9
    invoke-static {v0, v5, v15, v3, v9}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S

    move-result v3

    goto :goto_20

    :pswitch_f
    invoke-static {v0, v5, v15, v3, v9}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_0

    :try_start_a
    throw v18
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 257
    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    .line 253
    :goto_20
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/2addr v11, v10

    rem-int/lit16 v12, v11, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v11, v4

    if-nez v11, :cond_13

    .line 218
    const/4 v11, 0x0

    goto :goto_21

    :cond_13
    move v11, v7

    :goto_21
    packed-switch v11, :pswitch_data_11

    .line 287
    goto :goto_22

    .line 253
    :pswitch_10
    nop

    .line 239
    :goto_22
    :pswitch_11
    const/4 v11, 0x0

    :try_start_b
    aget-short v12, v14, v11

    aget-short v11, v14, v7

    invoke-direct {v1, v12, v15, v3, v11}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(S[BSS)S

    move-result v11
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_0

    neg-int v11, v11

    neg-int v11, v11

    and-int v12, v3, v11

    xor-int/2addr v3, v11

    or-int/2addr v3, v12

    not-int v3, v3

    sub-int/2addr v12, v3

    sub-int/2addr v12, v7

    int-to-short v3, v12

    .line 240
    neg-int v9, v9

    neg-int v9, v9

    not-int v11, v9

    and-int/2addr v11, v5

    not-int v12, v5

    and-int/2addr v12, v9

    or-int/2addr v11, v12

    and-int/2addr v5, v9

    shl-int/2addr v5, v7

    add-int/2addr v11, v5

    int-to-short v5, v11

    .line 228
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v9, v9, 0x7f

    sub-int/2addr v9, v7

    or-int/lit8 v11, v9, -0x1

    shl-int/2addr v11, v7

    xor-int/lit8 v9, v9, -0x1

    sub-int/2addr v11, v9

    rem-int/lit16 v9, v11, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v11, v4

    if-nez v11, :cond_14

    .line 218
    goto :goto_23

    :cond_14
    const/16 v21, 0x17

    :goto_23
    packed-switch v21, :pswitch_data_12

    .line 228
    goto :goto_24

    .line 287
    :pswitch_12
    nop

    .line 230
    :goto_24
    const/4 v11, 0x0

    goto/16 :goto_19

    .line 218
    :goto_25
    const/16 v11, 0x30

    goto :goto_26

    :cond_15
    const/16 v11, 0x21

    :goto_26
    packed-switch v11, :pswitch_data_13

    .line 228
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v0, -0x24

    not-int v9, v0

    and-int/lit8 v9, v9, 0x23

    or-int/2addr v5, v9

    and-int/lit8 v0, v0, 0x23

    shl-int/2addr v0, v7

    neg-int v0, v0

    neg-int v0, v0

    xor-int v9, v5, v0

    and-int/2addr v0, v5

    shl-int/2addr v0, v7

    add-int/2addr v9, v0

    rem-int/lit16 v0, v9, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_16

    goto :goto_27

    .line 218
    :pswitch_13
    const/16 v5, -0x5b

    goto :goto_2b

    .line 242
    :cond_16
    :goto_27
    if-nez v6, :cond_17

    .line 218
    move v5, v7

    goto :goto_28

    :cond_17
    const/4 v5, 0x0

    :goto_28
    packed-switch v5, :pswitch_data_14

    const/16 v5, -0x5b

    goto :goto_2b

    .line 257
    :pswitch_14
    const/16 v2, 0x73

    xor-int/lit8 v3, v0, 0x73

    and-int/lit8 v5, v0, 0x73

    or-int/2addr v3, v5

    shl-int/2addr v3, v7

    and-int/lit8 v5, v0, -0x74

    not-int v0, v0

    and-int/2addr v0, v2

    or-int/2addr v0, v5

    neg-int v0, v0

    xor-int v2, v3, v0

    and-int/2addr v0, v3

    shl-int/2addr v0, v7

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_18

    .line 243
    :cond_18
    nop

    .line 287
    or-int/lit8 v2, v0, 0x2f

    shl-int/2addr v2, v7

    const/16 v3, 0x2f

    xor-int/2addr v0, v3

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_19

    .line 218
    const/16 v0, 0x52

    goto :goto_29

    :cond_19
    const/16 v0, 0x2e

    :goto_29
    packed-switch v0, :pswitch_data_15

    .line 287
    goto :goto_2a

    :pswitch_15
    const/16 v5, -0x5b

    return v5

    :goto_2a
    :try_start_c
    invoke-super/range {v18 .. v18}, Ljava/lang/Object;->hashCode()I

    throw v18
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    :catchall_2
    move-exception v0

    throw v0

    .line 247
    :goto_2b
    nop

    .line 249
    if-eqz p4, :cond_1a

    .line 218
    move v0, v7

    goto :goto_2c

    :cond_1a
    const/16 v0, 0x43

    :goto_2c
    packed-switch v0, :pswitch_data_16

    .line 255
    goto :goto_32

    .line 287
    :pswitch_16
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x3

    and-int/lit8 v6, v0, 0x3

    or-int/2addr v2, v6

    shl-int/2addr v2, v7

    and-int/lit8 v6, v0, -0x4

    not-int v0, v0

    const/4 v9, 0x3

    and-int/2addr v0, v9

    or-int/2addr v0, v6

    neg-int v0, v0

    xor-int v6, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v7

    add-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v4

    if-eqz v6, :cond_1b

    .line 218
    const/16 v21, 0x30

    goto :goto_2d

    :cond_1b
    nop

    :goto_2d
    packed-switch v21, :pswitch_data_17

    .line 250
    :try_start_d
    new-array v0, v3, [B

    goto :goto_2e

    :pswitch_17
    new-array v0, v3, [B

    .line 251
    const/4 v2, 0x0

    invoke-static {v15, v7, v0, v2, v3}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S

    .line 252
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 253
    const/16 v15, 0x10

    goto :goto_2f

    .line 251
    :goto_2e
    const/4 v2, 0x0

    invoke-static {v15, v2, v0, v2, v3}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S

    .line 252
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_1

    .line 253
    const/16 v15, 0x5a

    .line 287
    :goto_2f
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x5b

    and-int/lit8 v3, v0, 0x5b

    or-int/2addr v2, v3

    shl-int/2addr v2, v7

    and-int/lit8 v3, v0, -0x5c

    not-int v0, v0

    and-int/lit8 v0, v0, 0x5b

    or-int/2addr v0, v3

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v2, v0

    sub-int/2addr v2, v7

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_1c

    .line 218
    const/4 v7, 0x0

    goto :goto_30

    :cond_1c
    nop

    :goto_30
    packed-switch v7, :pswitch_data_18

    .line 287
    goto :goto_31

    :pswitch_18
    return v15

    :goto_31
    :try_start_e
    invoke-super/range {v18 .. v18}, Ljava/lang/Object;->hashCode()I

    throw v18
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    :catchall_3
    move-exception v0

    throw v0

    .line 256
    :goto_32
    :try_start_f
    invoke-virtual {v2, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 218
    const/16 v0, 0x18

    goto :goto_33

    :cond_1d
    const/16 v0, 0x62

    :goto_33
    packed-switch v0, :pswitch_data_19

    .line 268
    new-array v2, v3, [B
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_1

    goto/16 :goto_40

    .line 275
    :pswitch_19
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, -0x2

    not-int v6, v0

    and-int/2addr v6, v7

    or-int/2addr v2, v6

    and-int/lit8 v6, v0, 0x1

    shl-int/2addr v6, v7

    add-int/2addr v2, v6

    rem-int/lit16 v6, v2, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v2, v4

    if-nez v2, :cond_1e

    .line 218
    move v2, v7

    goto :goto_34

    :cond_1e
    const/4 v2, 0x0

    :goto_34
    packed-switch v2, :pswitch_data_1a

    .line 257
    const/16 v2, 0x6e

    if-le v3, v2, :cond_20

    goto :goto_37

    :pswitch_1a
    const/16 v2, 0x7f

    if-le v3, v2, :cond_1f

    .line 218
    move v2, v7

    goto :goto_35

    :cond_1f
    const/16 v2, 0x34

    :goto_35
    packed-switch v2, :pswitch_data_1b

    :goto_36
    goto :goto_3b

    :goto_37
    move v2, v7

    goto :goto_38

    :cond_20
    const/4 v2, 0x0

    :goto_38
    packed-switch v2, :pswitch_data_1c

    goto :goto_36

    .line 262
    :pswitch_1b
    add-int/lit8 v2, v3, 0x3

    sub-int/2addr v2, v7

    :try_start_10
    new-array v2, v2, [B

    .line 263
    const/16 v6, -0x7d

    const/4 v9, 0x0

    aput-byte v6, v2, v9
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_1

    .line 281
    add-int/lit8 v0, v0, 0x2d

    rem-int/lit16 v6, v0, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v4

    if-nez v0, :cond_21

    .line 218
    const/4 v0, 0x0

    goto :goto_39

    :cond_21
    move v0, v7

    :goto_39
    packed-switch v0, :pswitch_data_1d

    .line 281
    goto :goto_3a

    .line 287
    :pswitch_1c
    nop

    .line 265
    :goto_3a
    move v0, v7

    goto :goto_3e

    .line 258
    :goto_3b
    add-int/lit8 v2, v3, 0x5

    sub-int/2addr v2, v7

    xor-int/lit8 v6, v2, -0x1

    and-int/lit8 v2, v2, -0x1

    shl-int/2addr v2, v7

    add-int/2addr v6, v2

    :try_start_11
    new-array v2, v6, [B

    .line 259
    const/16 v6, -0x7d

    const/4 v9, 0x0

    aput-byte v6, v2, v9

    .line 260
    const/16 v6, -0x7f

    aput-byte v6, v2, v7
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_11} :catch_1

    .line 253
    or-int/lit8 v6, v0, 0x39

    shl-int/2addr v6, v7

    xor-int/lit8 v0, v0, 0x39

    sub-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v6, v4

    if-nez v6, :cond_22

    .line 218
    move v11, v7

    goto :goto_3c

    :cond_22
    const/4 v11, 0x0

    :goto_3c
    packed-switch v11, :pswitch_data_1e

    .line 253
    goto :goto_3d

    .line 287
    :pswitch_1d
    nop

    .line 265
    :goto_3d
    move v0, v4

    :goto_3e
    xor-int/lit8 v6, v0, 0x1

    and-int/lit8 v9, v0, 0x1

    or-int/2addr v6, v9

    shl-int/2addr v6, v7

    and-int/lit8 v9, v0, -0x2

    not-int v10, v0

    and-int/2addr v10, v7

    or-int/2addr v9, v10

    neg-int v9, v9

    or-int v10, v6, v9

    shl-int/2addr v10, v7

    xor-int/2addr v6, v9

    sub-int v11, v10, v6

    and-int/lit16 v6, v3, 0xff

    int-to-byte v6, v6

    :try_start_12
    aput-byte v6, v2, v0
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_1

    .line 220
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v6, v0, 0x51

    and-int/lit8 v9, v0, 0x51

    or-int/2addr v6, v9

    shl-int/2addr v6, v7

    not-int v9, v9

    or-int/lit8 v0, v0, 0x51

    and-int/2addr v0, v9

    neg-int v0, v0

    or-int v9, v6, v0

    shl-int/2addr v9, v7

    xor-int/2addr v0, v6

    sub-int/2addr v9, v0

    rem-int/lit16 v0, v9, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v4

    if-eqz v9, :cond_23

    .line 218
    const/16 v0, 0x32

    goto :goto_3f

    :cond_23
    const/16 v0, 0x3f

    :goto_3f
    packed-switch v0, :pswitch_data_1f

    .line 287
    goto :goto_43

    .line 220
    :pswitch_1e
    goto :goto_43

    .line 253
    :goto_40
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v6, v0, 0x8

    or-int/lit8 v0, v0, 0x8

    add-int/2addr v6, v0

    and-int/lit8 v0, v6, -0x1

    or-int/lit8 v6, v6, -0x1

    add-int/2addr v0, v6

    rem-int/lit16 v6, v0, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v4

    if-eqz v0, :cond_24

    .line 218
    const/4 v11, 0x0

    goto :goto_41

    :cond_24
    move v11, v7

    :goto_41
    packed-switch v11, :pswitch_data_20

    .line 253
    goto :goto_42

    .line 287
    :pswitch_1f
    nop

    .line 270
    :goto_42
    const/4 v11, 0x0

    :goto_43
    int-to-short v0, v11

    const/4 v11, 0x0

    :try_start_13
    invoke-static {v15, v11, v2, v0, v3}, Lcom/visa/vac/tc/emvconverter/Utils;->arrayCopy([BS[BSS)S

    .line 272
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object v0
    :try_end_13
    .catch Ljava/lang/Exception; {:try_start_13 .. :try_end_13} :catch_1

    .line 273
    if-eqz v0, :cond_25

    .line 218
    move v2, v7

    goto :goto_44

    :cond_25
    move v2, v11

    :goto_44
    packed-switch v2, :pswitch_data_21

    goto/16 :goto_14

    .line 257
    :pswitch_20
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x4b

    shl-int/2addr v3, v7

    xor-int/lit8 v2, v2, 0x4b

    sub-int/2addr v3, v2

    rem-int/lit16 v2, v3, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_26

    .line 218
    const/16 v2, 0xa

    goto :goto_45

    :cond_26
    const/16 v2, 0x8

    :goto_45
    packed-switch v2, :pswitch_data_22

    .line 273
    :try_start_14
    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v2

    goto :goto_46

    .line 257
    :pswitch_21
    invoke-virtual {v0}, Ljava/lang/String;->trim()Ljava/lang/String;

    move-result-object v0

    const-string v2, ""

    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_1

    :try_start_15
    invoke-super/range {v18 .. v18}, Ljava/lang/Object;->hashCode()I

    throw v18
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_15} :catch_1
    .catchall {:try_start_15 .. :try_end_15} :catchall_4

    :catchall_4
    move-exception v0

    throw v0

    .line 273
    :goto_46
    :try_start_16
    const-string v3, ""

    invoke-virtual {v2, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2
    :try_end_16
    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_16} :catch_1

    if-nez v2, :cond_27

    .line 218
    goto :goto_47

    :cond_27
    const/16 v21, 0x4c

    :goto_47
    packed-switch v21, :pswitch_data_23

    .line 281
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v3, v2, 0x5a

    shl-int/2addr v3, v7

    const/16 v6, 0x5a

    xor-int/2addr v2, v6

    sub-int/2addr v3, v2

    and-int/lit8 v2, v3, -0x1

    or-int/lit8 v3, v3, -0x1

    add-int/2addr v2, v3

    rem-int/lit16 v3, v2, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_28

    .line 218
    goto :goto_48

    :cond_28
    move v11, v7

    :goto_48
    packed-switch v11, :pswitch_data_24

    .line 274
    :try_start_17
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    goto :goto_49

    :pswitch_22
    invoke-virtual {v1, v8, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_1

    .line 275
    const/16 v10, 0x6f

    goto :goto_4a

    :goto_49
    move v10, v6

    .line 287
    :goto_4a
    move v12, v10

    goto :goto_4c

    .line 275
    :goto_4b
    move/from16 v12, v17

    :goto_4c
    nop

    .line 220
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x1

    and-int/2addr v0, v7

    shl-int/2addr v0, v7

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v2, v4

    if-eqz v2, :cond_8

    goto/16 :goto_10

    .line 283
    :catch_0
    move-exception v0

    const/16 v5, -0x5b

    goto :goto_4e

    .line 220
    :goto_4d
    :try_start_18
    invoke-virtual {v0}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;
    :try_end_18
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_18} :catch_1

    :try_start_19
    throw v18
    :try_end_19
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_19} :catch_1
    .catchall {:try_start_19 .. :try_end_19} :catchall_5

    .line 233
    :catchall_5
    move-exception v0

    move-object v2, v0

    throw v2

    .line 283
    :catch_1
    move-exception v0

    .line 284
    :goto_4e
    move v12, v5

    .line 287
    :goto_4f
    nop

    .line 281
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v2, v0, 0x2d

    and-int/lit8 v0, v0, 0x2d

    shl-int/2addr v0, v7

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, v2, v0

    and-int/2addr v0, v2

    shl-int/2addr v0, v7

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v3, v4

    if-eqz v3, :cond_29

    .line 218
    const/16 v8, 0x28

    goto :goto_50

    :cond_29
    const/16 v8, 0x45

    :goto_50
    packed-switch v8, :pswitch_data_25

    .line 281
    goto :goto_51

    .line 287
    :pswitch_23
    return v12

    .line 281
    :goto_51
    :try_start_1a
    throw v18
    :try_end_1a
    .catchall {:try_start_1a .. :try_end_1a} :catchall_6

    :catchall_6
    move-exception v0

    move-object v2, v0

    throw v2

    :pswitch_data_0
    .packed-switch 0x28
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x48
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x21
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x39
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x50
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x5e
        :pswitch_9
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x47
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_b
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x35
        :pswitch_c
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x0
        :pswitch_d
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x1e
        :pswitch_e
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x1
        :pswitch_11
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x57
        :pswitch_f
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x17
        :pswitch_12
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x21
        :pswitch_13
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_14
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x2e
        :pswitch_15
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x1
        :pswitch_16
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x30
        :pswitch_17
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x1
        :pswitch_18
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x18
        :pswitch_19
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x0
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x34
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x0
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x1
        :pswitch_1c
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x0
        :pswitch_1d
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x32
        :pswitch_1e
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x1
        :pswitch_1f
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x1
        :pswitch_20
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0xa
        :pswitch_21
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x4c
        :pswitch_8
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x0
        :pswitch_22
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x45
        :pswitch_23
    .end packed-switch
.end method

.method getInstance([B)Ljava/lang/String;
    .locals 7

    .line 964
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x73

    xor-int/lit8 v2, v0, 0x73

    or-int/2addr v2, v1

    xor-int v3, v1, v2

    and-int/2addr v1, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v1, 0x2

    rem-int/2addr v3, v1

    if-nez v3, :cond_0

    .line 957
    :cond_0
    array-length v3, p1

    const/4 v4, 0x0

    if-lt v3, v1, :cond_1

    .line 959
    move v3, v2

    goto :goto_0

    :cond_1
    move v3, v4

    :goto_0
    const/4 v5, 0x0

    packed-switch v3, :pswitch_data_0

    .line 964
    add-int/lit8 v0, v0, 0x65

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_2

    .line 959
    move v0, v4

    goto :goto_1

    :cond_2
    move v0, v2

    :goto_1
    packed-switch v0, :pswitch_data_1

    .line 958
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object p1

    .line 959
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v3, 0x4

    if-lt v0, v3, :cond_4

    goto :goto_3

    .line 958
    :pswitch_0
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    move-result-object p1

    .line 959
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v3, 0x5

    if-lt v0, v3, :cond_3

    const/16 v0, 0x51

    goto :goto_2

    :cond_3
    const/16 v0, 0x42

    :goto_2
    packed-switch v0, :pswitch_data_2

    :pswitch_1
    goto :goto_5

    :goto_3
    const/16 v0, 0x4c

    goto :goto_4

    :cond_4
    const/16 v0, 0x2c

    :goto_4
    packed-switch v0, :pswitch_data_3

    goto :goto_7

    .line 964
    :goto_5
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v0, 0x22

    or-int/lit8 v0, v0, 0x22

    add-int/2addr v3, v0

    and-int/lit8 v0, v3, -0x1

    or-int/lit8 v3, v3, -0x1

    add-int/2addr v0, v3

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v0, v1

    if-eqz v0, :cond_5

    .line 960
    :cond_5
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    xor-int/lit8 v3, v0, -0x4

    and-int/lit8 v6, v0, -0x4

    or-int/2addr v3, v6

    shl-int/2addr v3, v2

    not-int v6, v6

    or-int/lit8 v0, v0, -0x4

    and-int/2addr v0, v6

    sub-int/2addr v3, v0

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    invoke-virtual {p1, v3, v0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object p1

    .line 959
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v0, 0x53

    and-int/lit8 v0, v0, 0x53

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    or-int v6, v3, v0

    shl-int/2addr v6, v2

    xor-int/2addr v0, v3

    sub-int/2addr v6, v0

    rem-int/lit16 v0, v6, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v6, v1

    if-eqz v6, :cond_6

    move v2, v4

    :cond_6
    packed-switch v2, :pswitch_data_4

    goto :goto_6

    .line 964
    :pswitch_2
    return-object p1

    .line 959
    :goto_6
    :try_start_0
    invoke-super {v5}, Ljava/lang/Object;->hashCode()I

    throw v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    .line 964
    :goto_7
    :pswitch_3
    nop

    .line 959
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0xb

    xor-int/lit8 p1, p1, 0xb

    or-int/2addr p1, v0

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v0, v1

    if-nez v0, :cond_7

    goto :goto_8

    :cond_7
    move v2, v4

    :goto_8
    packed-switch v2, :pswitch_data_5

    .line 964
    const-string p1, "6F00"

    return-object p1

    .line 959
    :pswitch_4
    :try_start_1
    throw v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x42
        :pswitch_3
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x4c
        :pswitch_1
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch
.end method

.method getInstance(S)[B
    .locals 2

    .line 207
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x16

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_0

    :cond_0
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalValue(S)[B

    move-result-object p1

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x1d

    xor-int/lit8 v0, v0, 0x1d

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v1, v0

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return-object p1
.end method

.method public getLocalConfigs()Landroid/util/ArrayMap;
    .locals 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation

    .line 926
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x15

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    :cond_0
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->setFinalOutcome:Landroid/util/ArrayMap;

    and-int/lit8 v2, v1, 0x49

    xor-int/lit8 v1, v1, 0x49

    or-int/2addr v1, v2

    neg-int v1, v1

    neg-int v1, v1

    not-int v1, v1

    sub-int/2addr v2, v1

    add-int/lit8 v2, v2, -0x1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    return-object v0
.end method

.method getTerminalData(Ljava/lang/String;)Ljava/lang/Object;
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/CloneNotSupportedException;
        }
    .end annotation

    .line 935
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v1, 0x3b

    and-int/lit8 v2, v0, -0x3c

    not-int v3, v0

    and-int/2addr v3, v1

    or-int/2addr v2, v3

    and-int/2addr v0, v1

    const/4 v1, 0x1

    shl-int/2addr v0, v1

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    const/4 v0, 0x0

    if-nez v2, :cond_0

    move v2, v0

    goto :goto_0

    :cond_0
    move v2, v1

    :goto_0
    packed-switch v2, :pswitch_data_0

    .line 934
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/visa/vac/tc/emvconverter/ApduScript;

    .line 935
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->clone()Lcom/visa/vac/tc/emvconverter/ApduScript;

    goto :goto_1

    .line 934
    :pswitch_0
    iget-object v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    invoke-virtual {v2, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/visa/vac/tc/emvconverter/ApduScript;

    .line 935
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->clone()Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object p1

    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v2, v2, 0x7f

    sub-int/2addr v2, v1

    sub-int/2addr v2, v0

    sub-int/2addr v2, v1

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    return-object p1

    :goto_1
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method getTerminalData([BLjava/lang/String;)V
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 870
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x67

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    xor-int/lit8 v0, v0, 0x67

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_0

    :cond_0
    const/16 v0, 0x61

    invoke-virtual {p0, p1, v0, p2}, Lcom/visa/vac/tc/emvconverter/CAL;->doMatch([BSLjava/lang/String;)Z

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 p2, p1, 0x27

    or-int/lit8 p1, p1, 0x27

    add-int/2addr p2, p1

    rem-int/lit16 p1, p2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_1

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    :goto_0
    packed-switch v2, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    return-void

    :goto_1
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method public initDefaultData()V
    .locals 4

    .line 199
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x67

    not-int v2, v1

    or-int/lit8 v0, v0, 0x67

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    xor-int v3, v0, v1

    and-int/2addr v0, v1

    shl-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_0

    const/4 v0, 0x0

    goto :goto_0

    :cond_0
    move v0, v2

    :goto_0
    packed-switch v0, :pswitch_data_0

    :pswitch_0
    invoke-direct {p0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Z)V

    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method public parseKiCResponse(Lcom/visa/vac/tc/emvconverter/model/PostRest;Ljava/lang/String;)Z
    .locals 32

    .line 1276
    move-object/from16 v1, p0

    const-string v2, "emv.tx.sm.CardholderChoiceOrder"

    const-string v3, "emv.tx.sm.CardholderChoiceAvailable"

    .line 988
    move-object/from16 v4, p2

    iput-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    .line 991
    const/4 v4, 0x0

    :try_start_0
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/model/PostRest;->getEvntLst()Ljava/util/ArrayList;

    move-result-object v5

    .line 992
    nop

    .line 994
    const/4 v6, 0x1

    new-array v7, v6, [B

    .line 995
    new-instance v8, Landroid/util/ArrayMap;

    invoke-direct {v8}, Landroid/util/ArrayMap;-><init>()V

    .line 997
    move v10, v4

    const/4 v11, 0x0

    :goto_0
    invoke-virtual {v5}, Ljava/util/AbstractCollection;->size()I

    move-result v12

    if-ge v10, v12, :cond_73

    .line 999
    nop

    .line 1000
    nop

    .line 1002
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 1004
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getDetect_And_Open_And_Send()Lcom/visa/vac/tc/emvconverter/model/DetectAndOpenAndSend;

    move-result-object v15
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2

    if-eqz v15, :cond_0

    .line 1199
    move v15, v6

    goto :goto_1

    :cond_0
    move v15, v4

    :goto_1
    const/16 v16, 0x4b

    const-string v13, "Contactless"

    packed-switch v15, :pswitch_data_0

    .line 1252
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v9, v15, 0x7d

    not-int v14, v9

    or-int/lit8 v15, v15, 0x7d

    and-int/2addr v14, v15

    shl-int/2addr v9, v6

    add-int/2addr v14, v9

    rem-int/lit16 v9, v14, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_3

    goto :goto_2

    .line 1023
    :pswitch_0
    :try_start_1
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getOpen_And_Send()Lcom/visa/vac/tc/emvconverter/model/OpenAndSend;

    move-result-object v15

    if-eqz v15, :cond_1

    .line 1027
    const/16 v15, 0xc

    iput v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1028
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getOpen_And_Send()Lcom/visa/vac/tc/emvconverter/model/OpenAndSend;

    move-result-object v15

    .line 1029
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenAndSend;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;

    move-result-object v15

    .line 1276
    goto/16 :goto_a

    .line 1029
    :cond_1
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getSendData()Lcom/visa/vac/tc/emvconverter/model/SendData;

    move-result-object v15

    if-eqz v15, :cond_2

    .line 1031
    const/16 v15, 0xc

    iput v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1032
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getSendData()Lcom/visa/vac/tc/emvconverter/model/SendData;

    move-result-object v15

    .line 1033
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SendData;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;

    move-result-object v15

    goto/16 :goto_a

    .line 1029
    :cond_2
    const/4 v15, 0x0

    goto/16 :goto_a

    .line 1005
    :cond_3
    :goto_2
    iput v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 1006
    const/16 v9, 0xa

    iput v9, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1007
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getDetect_And_Open_And_Send()Lcom/visa/vac/tc/emvconverter/model/DetectAndOpenAndSend;

    move-result-object v9

    .line 1008
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/DetectAndOpenAndSend;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;

    move-result-object v15

    .line 1009
    const-string v14, "emv.mod.cal.Requester"

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/DetectAndOpenAndSend;->getFrom()Ljava/lang/String;

    move-result-object v9

    invoke-static {v14, v9}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1011
    const-string v9, "emv.mod.cal.RequestType"

    const-string v14, "None"

    invoke-static {v9, v14}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1012
    const-string v9, "emv.mod.cal.RequestType"

    const-string v14, "DetectAndOpenRequest"

    invoke-static {v9, v14}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1013
    const-string v9, "emv.mod.cal.SessionStatus"

    const-string v14, "Started"

    invoke-static {v9, v14}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1015
    const-string v9, "emv.mod.cal.CALDIL"

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_dcm_CALDIL()Ljava/util/ArrayList;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v9, v14}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1017
    const-string v9, "emv.tx.sm.EligibleInterfaceList"

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_sm_EligibleInterfaceList()Ljava/util/ArrayList;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v9, v14}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1018
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_sm_EligibleInterfaceList()Ljava/util/ArrayList;

    move-result-object v9

    .line 1019
    invoke-virtual {v9}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_3
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v14

    if-eqz v14, :cond_b

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_2

    .line 1020
    if-eqz v14, :cond_4

    .line 1199
    move/from16 v18, v4

    goto :goto_4

    :cond_4
    move/from16 v18, v6

    :goto_4
    packed-switch v18, :pswitch_data_1

    goto :goto_5

    .line 1038
    :pswitch_1
    sget v18, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v19, v18, 0x70

    shl-int/lit8 v19, v19, 0x1

    xor-int/lit8 v18, v18, 0x70

    sub-int v19, v19, v18

    add-int/lit8 v19, v19, 0x0

    add-int/lit8 v4, v19, -0x1

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_5

    .line 1020
    :try_start_2
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v4, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_6

    .line 1021
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v4

    invoke-interface {v12, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1276
    const/4 v4, 0x0

    const/4 v6, 0x1

    goto :goto_3

    .line 1038
    :cond_5
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_2

    const/4 v2, 0x0

    :try_start_3
    throw v2
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1022
    :cond_6
    :goto_5
    if-eqz v14, :cond_7

    .line 1199
    const/4 v4, 0x0

    goto :goto_6

    :cond_7
    const/4 v4, 0x1

    :goto_6
    packed-switch v4, :pswitch_data_2

    :goto_7
    goto :goto_9

    .line 1252
    :pswitch_2
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v4, 0x3d

    and-int/lit8 v20, v4, 0x3d

    or-int v6, v6, v20

    const/16 v19, 0x1

    shl-int/lit8 v6, v6, 0x1

    and-int/lit8 v20, v4, -0x3e

    not-int v4, v4

    and-int/lit8 v4, v4, 0x3d

    or-int v4, v20, v4

    neg-int v4, v4

    or-int v20, v6, v4

    shl-int/lit8 v20, v20, 0x1

    xor-int/2addr v4, v6

    sub-int v4, v20, v4

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_8

    .line 1022
    :cond_8
    :try_start_4
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v4

    const-string v6, "Contact"

    invoke-virtual {v4, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_2

    if-eqz v4, :cond_9

    .line 1199
    move/from16 v4, v16

    goto :goto_8

    :cond_9
    const/16 v4, 0x43

    :goto_8
    packed-switch v4, :pswitch_data_3

    goto :goto_7

    .line 1252
    :pswitch_3
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v4, v4, 0x3a

    xor-int/lit8 v6, v4, -0x1

    and-int/lit8 v4, v4, -0x1

    const/16 v19, 0x1

    shl-int/lit8 v4, v4, 0x1

    add-int/2addr v6, v4

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-nez v6, :cond_a

    .line 1023
    :try_start_5
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v4

    invoke-interface {v12, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_9

    :cond_a
    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/EligibleInterfaceList;->getInterfaceID()Ljava/lang/String;

    move-result-object v2

    invoke-interface {v12, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_2

    const/4 v2, 0x0

    :try_start_6
    throw v2
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_2
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 1252
    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1023
    :goto_9
    const/4 v4, 0x0

    const/4 v6, 0x1

    goto/16 :goto_3

    :cond_b
    nop

    .line 1036
    :goto_a
    if-eqz v15, :cond_c

    .line 1199
    const/16 v4, 0x3a

    goto :goto_b

    :cond_c
    const/16 v4, 0x4d

    :goto_b
    packed-switch v4, :pswitch_data_4

    :goto_c
    :pswitch_4
    goto/16 :goto_14

    .line 1181
    :pswitch_5
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v9, v4, 0x9

    or-int/lit8 v4, v4, 0x9

    add-int/2addr v9, v4

    rem-int/lit16 v4, v9, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_d

    .line 1199
    const/4 v4, 0x1

    goto :goto_d

    :cond_d
    const/4 v4, 0x0

    :goto_d
    packed-switch v4, :pswitch_data_5

    .line 1037
    :try_start_7
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_dcm_EncodedMessageList()Ljava/util/ArrayList;

    move-result-object v4

    goto :goto_e

    :pswitch_6
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_dcm_EncodedMessageList()Ljava/util/ArrayList;
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_2

    .line 1038
    const/4 v2, 0x0

    :try_start_8
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_2
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 1181
    :catchall_2
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1038
    :goto_e
    if-eqz v4, :cond_e

    .line 1199
    const/16 v9, 0x45

    goto :goto_f

    :cond_e
    const/16 v9, 0x1c

    :goto_f
    const-string v14, "CDIL"

    packed-switch v9, :pswitch_data_6

    goto/16 :goto_12

    .line 1046
    :pswitch_7
    :try_start_9
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/OpenParameterContainer;->getEmv_tx_dcm_MessageChoiceCDO()Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;

    move-result-object v4

    .line 1047
    if-eqz v4, :cond_f

    .line 1199
    const/16 v9, 0x56

    goto :goto_10

    :cond_f
    const/16 v9, 0xd

    :goto_10
    packed-switch v9, :pswitch_data_7

    .line 1047
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v9
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_2

    if-eqz v9, :cond_10

    .line 1199
    const/4 v9, 0x1

    goto :goto_11

    :cond_10
    const/4 v9, 0x0

    :goto_11
    packed-switch v9, :pswitch_data_8

    goto :goto_c

    .line 1181
    :pswitch_8
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v9, v9, 0x32

    const/4 v15, 0x0

    sub-int/2addr v9, v15

    const/4 v15, 0x1

    sub-int/2addr v9, v15

    rem-int/lit16 v15, v9, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_11

    .line 1047
    :cond_11
    :try_start_a
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v9

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v9
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_2

    if-eqz v9, :cond_15

    .line 1038
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v15, v9, 0x53

    and-int/lit8 v9, v9, 0x53

    const/16 v19, 0x1

    shl-int/lit8 v9, v9, 0x1

    neg-int v9, v9

    neg-int v9, v9

    and-int v20, v15, v9

    or-int/2addr v9, v15

    add-int v9, v20, v9

    rem-int/lit16 v15, v9, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v9, v9, 0x2

    if-nez v9, :cond_12

    .line 1048
    :try_start_b
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v9

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v9

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getUnprotectedALPayloadContainer()Lcom/google/gson/JsonObject;

    move-result-object v9

    invoke-virtual {v9}, Lcom/google/gson/JsonObject;->toString()Ljava/lang/String;

    move-result-object v9

    .line 1050
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getCDIL()Ljava/util/ArrayList;

    move-result-object v4

    invoke-static {v14, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1276
    goto :goto_15

    .line 1048
    :cond_12
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getUnprotectedALPayloadContainer()Lcom/google/gson/JsonObject;

    move-result-object v2

    invoke-virtual {v2}, Lcom/google/gson/JsonObject;->toString()Ljava/lang/String;

    .line 1050
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v2

    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getCDIL()Ljava/util/ArrayList;

    move-result-object v2

    invoke-static {v14, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_2

    const/4 v2, 0x0

    :try_start_c
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_2
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 1038
    :catchall_3
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1181
    :goto_12
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v15, v9, 0x77

    or-int/lit8 v9, v9, 0x77

    add-int/2addr v15, v9

    rem-int/lit16 v9, v15, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_13

    .line 1040
    :cond_13
    :try_start_d
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .line 1276
    const/4 v9, 0x0

    .line 1040
    :goto_13
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v15

    if-eqz v15, :cond_14

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;

    .line 1041
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v15

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v15

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getUnprotectedALPayloadContainer()Lcom/google/gson/JsonObject;

    move-result-object v15

    invoke-virtual {v15}, Lcom/google/gson/JsonObject;->toString()Ljava/lang/String;

    move-result-object v15

    .line 1043
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxDcmEncodedMessageList;->getPayloadContainer()Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;

    move-result-object v9

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/PayloadContainer;->getALMessageCDO()Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;

    move-result-object v9

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/ALMessageCDO;->getCDIL()Ljava/util/ArrayList;

    move-result-object v9

    invoke-static {v14, v9}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    move-object v9, v15

    goto :goto_13

    :cond_14
    goto :goto_15

    .line 1055
    :cond_15
    :goto_14
    const/4 v9, 0x0

    :goto_15
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getCaptureCVM()Lcom/visa/vac/tc/emvconverter/model/CaptureCVM;

    move-result-object v4
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_2

    const/16 v14, 0x10

    if-eqz v4, :cond_1a

    .line 1135
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v21, v4, 0x7b

    xor-int/lit8 v4, v4, 0x7b

    or-int v4, v4, v21

    neg-int v4, v4

    neg-int v4, v4

    and-int v22, v21, v4

    or-int v4, v21, v4

    add-int v4, v22, v4

    rem-int/lit16 v15, v4, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_16

    .line 1056
    :cond_16
    :try_start_e
    iput v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1057
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getCaptureCVM()Lcom/visa/vac/tc/emvconverter/model/CaptureCVM;

    move-result-object v4

    .line 1058
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/CaptureCVM;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/CaptureCVM$ParameterContainer;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/CaptureCVM$ParameterContainer;->getCvmToCapture()Lcom/visa/vac/tc/emvconverter/model/CvmToCaptureCDO;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/CvmToCaptureCDO;->getMethodID()Ljava/lang/String;

    move-result-object v4
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_2

    .line 1059
    if-eqz v4, :cond_19

    .line 1276
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v22, v15, 0x7

    xor-int/lit8 v15, v15, 0x7

    or-int v15, v15, v22

    neg-int v15, v15

    neg-int v15, v15

    or-int v23, v22, v15

    const/16 v19, 0x1

    shl-int/lit8 v23, v23, 0x1

    xor-int v15, v22, v15

    sub-int v15, v23, v15

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_18

    .line 1059
    :try_start_f
    const-string v14, "SignatureAfterTransaction"

    invoke-virtual {v4, v14}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v14

    if-eqz v14, :cond_19

    .line 1060
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-object v4, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_2

    .line 1160
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v4, -0x56

    not-int v15, v4

    and-int/lit8 v15, v15, 0x55

    or-int/2addr v14, v15

    and-int/lit8 v4, v4, 0x55

    const/4 v15, 0x1

    shl-int/2addr v4, v15

    add-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_17

    .line 1276
    :cond_17
    goto :goto_16

    :cond_18
    :try_start_10
    const-string v2, "SignatureAfterTransaction"

    invoke-virtual {v4, v2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_10 .. :try_end_10} :catch_2

    const/4 v2, 0x0

    :try_start_11
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_11
    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_11} :catch_2
    .catchall {:try_start_11 .. :try_end_11} :catchall_4

    :catchall_4
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1060
    :cond_19
    :goto_16
    move-object/from16 v23, v5

    goto/16 :goto_27

    :cond_1a
    :try_start_12
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getTransactionCompletion()Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion;

    move-result-object v4

    if-eqz v4, :cond_1b

    .line 1199
    const/16 v4, 0x2a

    goto :goto_17

    :cond_1b
    const/16 v4, 0x60

    :goto_17
    packed-switch v4, :pswitch_data_9

    .line 1089
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4
    :try_end_12
    .catch Ljava/lang/Exception; {:try_start_12 .. :try_end_12} :catch_2

    goto/16 :goto_20

    .line 1199
    :pswitch_9
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v14, v4, 0x6f

    or-int/lit8 v4, v4, 0x6f

    add-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_1c

    .line 1067
    :cond_1c
    :try_start_13
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getTransactionCompletion()Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion;

    move-result-object v4

    .line 1068
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;

    move-result-object v15

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;->getTransactionStatus()Ljava/lang/String;

    move-result-object v15

    iput-object v15, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 1069
    const-string v14, "FINAL_STATUS"

    iget-object v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v15, v15, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    invoke-static {v14, v15}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1070
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v14, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    .line 1071
    if-eqz v14, :cond_1d

    .line 1199
    const/4 v15, 0x1

    goto :goto_18

    :cond_1d
    const/4 v15, 0x0

    :goto_18
    packed-switch v15, :pswitch_data_a

    :goto_19
    goto :goto_1b

    .line 1071
    :pswitch_a
    const-string v15, "Approve"

    invoke-virtual {v14, v15}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_1e

    .line 1199
    const/4 v14, 0x0

    goto :goto_1a

    :cond_1e
    const/4 v14, 0x1

    :goto_1a
    packed-switch v14, :pswitch_data_b

    goto :goto_19

    .line 1072
    :pswitch_b
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v15, "Approved"

    iput-object v15, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    goto :goto_1c

    .line 1074
    :goto_1b
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/4 v15, 0x0

    iput-object v15, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->cvm:Ljava/lang/String;

    .line 1075
    iget-object v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v15, "Not Authorized"

    iput-object v15, v14, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1078
    :goto_1c
    if-nez v11, :cond_1f

    .line 1079
    new-instance v11, Lcom/visa/vac/tc/emvconverter/Receipt;

    invoke-direct {v11}, Lcom/visa/vac/tc/emvconverter/Receipt;-><init>()V

    .line 1081
    :cond_1f
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;

    move-result-object v14

    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;->getReceipt()Lcom/visa/vac/tc/emvconverter/Receipt;

    move-result-object v14
    :try_end_13
    .catch Ljava/lang/Exception; {:try_start_13 .. :try_end_13} :catch_2

    if-eqz v14, :cond_20

    .line 1199
    const/16 v14, 0x1e

    goto :goto_1d

    :cond_20
    const/16 v14, 0x3a

    :goto_1d
    packed-switch v14, :pswitch_data_c

    goto :goto_1e

    .line 1204
    :pswitch_c
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v14, v11, 0x3f

    and-int/lit8 v15, v11, 0x3f

    or-int/2addr v14, v15

    const/4 v15, 0x1

    shl-int/2addr v14, v15

    and-int/lit8 v19, v11, -0x40

    not-int v11, v11

    and-int/lit8 v11, v11, 0x3f

    or-int v11, v19, v11

    neg-int v11, v11

    or-int v19, v14, v11

    shl-int/lit8 v23, v19, 0x1

    xor-int/2addr v11, v14

    sub-int v11, v23, v11

    rem-int/lit16 v14, v11, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_21

    .line 1082
    :cond_21
    :try_start_14
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/TransactionCompletion$ParameterContainer;->getReceipt()Lcom/visa/vac/tc/emvconverter/Receipt;

    move-result-object v4

    move-object v11, v4

    .line 1085
    :goto_1e
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    new-instance v14, Lcom/google/gson/Gson;

    invoke-direct {v14}, Lcom/google/gson/Gson;-><init>()V

    const-class v15, Lcom/visa/vac/tc/emvconverter/Receipt;

    invoke-virtual {v14, v11, v15}, Lcom/google/gson/Gson;->toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;)Ljava/lang/String;

    move-result-object v14

    iput-object v14, v4, Lcom/visa/vac/tc/emvconverter/Transaction;->receipt:Ljava/lang/String;

    .line 1086
    const/4 v4, 0x0

    iput v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I

    .line 1088
    iget v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I
    :try_end_14
    .catch Ljava/lang/Exception; {:try_start_14 .. :try_end_14} :catch_2

    const/16 v14, 0xa

    if-eq v4, v14, :cond_23

    .line 1276
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v4, 0x7b

    or-int/lit8 v4, v4, 0x7b

    neg-int v4, v4

    neg-int v4, v4

    or-int v15, v14, v4

    const/16 v19, 0x1

    shl-int/lit8 v15, v15, 0x1

    xor-int/2addr v4, v14

    sub-int/2addr v15, v4

    rem-int/lit16 v4, v15, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_22

    .line 1089
    :try_start_15
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    const/16 v14, 0x3c

    iput v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    iget-object v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    goto :goto_1f

    :cond_22
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    const/16 v14, 0x11

    iput v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    iget-object v15, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    :goto_1f
    invoke-interface {v4, v14, v15}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V

    .line 1276
    nop

    .line 1089
    :cond_23
    move-object/from16 v23, v5

    goto/16 :goto_27

    :goto_20
    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getClose()Lcom/visa/vac/tc/emvconverter/model/Close;

    move-result-object v4

    if-eqz v4, :cond_2b

    .line 1093
    const/16 v4, 0x12

    iput v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1094
    const/4 v4, 0x0

    invoke-virtual {v1, v4}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1095
    invoke-virtual {v5, v10}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/model/EvntLst;

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/EvntLst;->getClose()Lcom/visa/vac/tc/emvconverter/model/Close;

    move-result-object v4

    .line 1096
    iget v14, v1, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_15} :catch_2

    const/16 v15, 0xa

    if-eq v14, v15, :cond_2a

    .line 1231
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v23, 0x2b

    and-int/lit8 v24, v15, -0x2c

    not-int v6, v15

    and-int v6, v23, v6

    or-int v6, v24, v6

    and-int/lit8 v23, v15, 0x2b

    const/16 v19, 0x1

    shl-int/lit8 v23, v23, 0x1

    add-int v6, v6, v23

    move-object/from16 v23, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v6, v6, 0x2

    if-nez v6, :cond_24

    .line 1096
    :cond_24
    const/16 v5, 0xb

    if-eq v14, v5, :cond_25

    .line 1199
    const/16 v5, 0x8

    goto :goto_21

    :cond_25
    const/16 v5, 0x18

    :goto_21
    packed-switch v5, :pswitch_data_d

    .line 1050
    const/16 v5, 0x5d

    xor-int/lit8 v6, v15, 0x5d

    and-int/lit8 v14, v15, 0x5d

    or-int/2addr v6, v14

    const/4 v14, 0x1

    shl-int/2addr v6, v14

    and-int/lit8 v19, v15, -0x5e

    not-int v15, v15

    and-int/2addr v5, v15

    or-int v5, v19, v5

    neg-int v5, v5

    xor-int v15, v6, v5

    and-int/2addr v5, v6

    shl-int/2addr v5, v14

    add-int/2addr v15, v5

    rem-int/lit16 v5, v15, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_26

    .line 1199
    const/16 v5, 0x43

    goto :goto_22

    :cond_26
    const/16 v5, 0x38

    :goto_22
    packed-switch v5, :pswitch_data_e

    .line 1099
    :try_start_16
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/Close;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;

    move-result-object v5

    goto :goto_23

    :pswitch_d
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/Close;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;

    move-result-object v5

    invoke-virtual {v5}, Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;->getEmv_ngk_dcm_Disconnect()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_2c

    goto :goto_25

    :goto_23
    invoke-virtual {v5}, Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;->getEmv_ngk_dcm_Disconnect()Ljava/lang/String;

    move-result-object v5
    :try_end_16
    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_16} :catch_2

    const/16 v6, 0x58

    const/4 v14, 0x0

    :try_start_17
    div-int/2addr v6, v14
    :try_end_17
    .catch Ljava/lang/Exception; {:try_start_17 .. :try_end_17} :catch_2
    .catchall {:try_start_17 .. :try_end_17} :catchall_5

    if-eqz v5, :cond_27

    .line 1199
    const/4 v5, 0x1

    goto :goto_24

    :cond_27
    const/4 v5, 0x0

    :goto_24
    packed-switch v5, :pswitch_data_f

    .line 1100
    :goto_25
    :try_start_18
    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/Close;->getParameterContainer()Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;

    move-result-object v4

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/model/Close$ParameterContainer;->getEmv_ngk_dcm_Disconnect()Ljava/lang/String;

    move-result-object v4

    const-string v5, "Disconnect"

    invoke-virtual {v4, v5}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4
    :try_end_18
    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_18} :catch_2

    if-eqz v4, :cond_28

    .line 1199
    const/16 v4, 0x2d

    goto :goto_26

    :cond_28
    const/16 v4, 0xe

    :goto_26
    packed-switch v4, :pswitch_data_10

    .line 1204
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x17

    xor-int/lit8 v4, v4, 0x17

    or-int/2addr v4, v5

    neg-int v4, v4

    neg-int v4, v4

    and-int v6, v5, v4

    or-int/2addr v4, v5

    add-int/2addr v6, v4

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_29

    .line 1101
    :try_start_19
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v5, "Remove card"

    iput-object v5, v4, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1102
    const/4 v4, 0x1

    iput v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I

    goto :goto_27

    .line 1101
    :cond_29
    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v5, "Remove card"

    iput-object v5, v4, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1102
    const/4 v4, 0x0

    iput v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I
    :try_end_19
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_19} :catch_2

    goto :goto_27

    .line 1050
    :catchall_5
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1096
    :cond_2a
    move-object/from16 v23, v5

    goto :goto_27

    .line 1089
    :cond_2b
    move-object/from16 v23, v5

    .line 1110
    :cond_2c
    :goto_27
    :pswitch_e
    if-eqz v9, :cond_72

    .line 1113
    :try_start_1a
    new-instance v4, Lcom/google/gson/JsonParser;

    invoke-direct {v4}, Lcom/google/gson/JsonParser;-><init>()V

    .line 1114
    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/google/gson/JsonParser;->parse(Ljava/lang/String;)Lcom/google/gson/JsonElement;

    move-result-object v4

    invoke-virtual {v4}, Lcom/google/gson/JsonElement;->getAsJsonObject()Lcom/google/gson/JsonObject;

    move-result-object v4

    .line 1115
    sget-object v5, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/google/gson/JsonObject;Landroid/util/ArrayMap;)V

    .line 1117
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4
    :try_end_1a
    .catch Ljava/lang/Exception; {:try_start_1a .. :try_end_1a} :catch_2

    const-string v5, "TRUE"

    if-eqz v4, :cond_33

    .line 1135
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v6, v4, 0x45

    const/16 v9, 0x45

    or-int/2addr v4, v9

    add-int/2addr v6, v4

    rem-int/lit16 v4, v6, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_2d

    .line 1199
    const/16 v4, 0x22

    goto :goto_28

    :cond_2d
    const/16 v4, 0x56

    :goto_28
    packed-switch v4, :pswitch_data_11

    .line 1118
    goto :goto_29

    :pswitch_f
    :try_start_1b
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    .line 1119
    instance-of v2, v2, Ljava/lang/String;
    :try_end_1b
    .catch Ljava/lang/Exception; {:try_start_1b .. :try_end_1b} :catch_2

    const/4 v2, 0x0

    :try_start_1c
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_1c
    .catch Ljava/lang/Exception; {:try_start_1c .. :try_end_1c} :catch_2
    .catchall {:try_start_1c .. :try_end_1c} :catchall_6

    .line 1135
    :catchall_6
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1118
    :goto_29
    :try_start_1d
    invoke-static {v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    .line 1119
    instance-of v6, v4, Ljava/lang/String;

    if-eqz v6, :cond_2e

    .line 1199
    const/4 v6, 0x0

    goto :goto_2a

    :cond_2e
    const/4 v6, 0x1

    :goto_2a
    packed-switch v6, :pswitch_data_12

    goto :goto_2b

    :pswitch_10
    const/16 v9, 0x8

    goto :goto_2c

    .line 1119
    :goto_2b
    move-object v6, v4

    check-cast v6, Ljava/lang/String;

    invoke-virtual {v6}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v6, v5}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v6
    :try_end_1d
    .catch Ljava/lang/Exception; {:try_start_1d .. :try_end_1d} :catch_2

    if-eqz v6, :cond_30

    .line 1252
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v6, v4, 0x8

    const/16 v9, 0x8

    or-int/2addr v4, v9

    add-int/2addr v6, v4

    xor-int/lit8 v4, v6, -0x1

    and-int/lit8 v6, v6, -0x1

    const/4 v14, 0x1

    shl-int/2addr v6, v14

    add-int/2addr v4, v6

    rem-int/lit16 v6, v4, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_2f

    .line 1120
    :cond_2f
    const/4 v4, 0x0

    :try_start_1e
    aget-byte v6, v7, v4

    and-int/lit8 v4, v6, -0x2

    not-int v14, v6

    const/4 v15, 0x1

    and-int/2addr v14, v15

    or-int/2addr v4, v14

    and-int/2addr v6, v15

    xor-int v14, v4, v6

    and-int/2addr v4, v6

    or-int/2addr v4, v14

    int-to-byte v4, v4

    const/4 v6, 0x0

    aput-byte v4, v7, v6

    goto :goto_2f

    .line 1119
    :cond_30
    const/16 v9, 0x8

    .line 1121
    :goto_2c
    instance-of v6, v4, Ljava/lang/Boolean;
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_1e .. :try_end_1e} :catch_2

    if-eqz v6, :cond_34

    .line 1135
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v6, 0x4b

    or-int/lit8 v6, v6, 0x4b

    add-int/2addr v14, v6

    rem-int/lit16 v6, v14, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_32

    :try_start_1f
    check-cast v4, Ljava/lang/Boolean;

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    if-nez v4, :cond_31

    .line 1199
    const/16 v4, 0x46

    goto :goto_2d

    :cond_31
    const/16 v4, 0x15

    :goto_2d
    packed-switch v4, :pswitch_data_13

    const/4 v6, 0x1

    goto :goto_2e

    .line 1121
    :cond_32
    check-cast v4, Ljava/lang/Boolean;

    invoke-virtual {v4}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v4

    const/4 v6, 0x1

    if-ne v4, v6, :cond_34

    .line 1122
    :goto_2e
    const/4 v4, 0x0

    aget-byte v14, v7, v4

    and-int/lit8 v4, v14, -0x2

    not-int v15, v14

    and-int/2addr v15, v6

    or-int/2addr v4, v15

    and-int/2addr v14, v6

    xor-int v6, v4, v14

    and-int/2addr v4, v14

    or-int/2addr v4, v6

    int-to-byte v4, v4

    const/4 v6, 0x0

    aput-byte v4, v7, v6

    goto :goto_2f

    .line 1117
    :cond_33
    const/16 v9, 0x8

    .line 1125
    :cond_34
    :goto_2f
    :pswitch_11
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4
    :try_end_1f
    .catch Ljava/lang/Exception; {:try_start_1f .. :try_end_1f} :catch_2

    const/16 v6, 0x19

    if-eqz v4, :cond_39

    .line 1199
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v14, v4, 0x3f

    or-int/lit8 v4, v4, 0x3f

    add-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_35

    .line 1125
    :cond_35
    :try_start_20
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    instance-of v4, v4, Ljava/lang/String;
    :try_end_20
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_20} :catch_2

    if-eqz v4, :cond_39

    .line 1262
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v14, v4, 0x1

    and-int/lit8 v15, v4, 0x1

    or-int/2addr v14, v15

    const/4 v15, 0x1

    shl-int/2addr v14, v15

    and-int/lit8 v19, v4, -0x2

    not-int v4, v4

    and-int/2addr v4, v15

    or-int v4, v19, v4

    neg-int v4, v4

    not-int v4, v4

    sub-int/2addr v14, v4

    sub-int/2addr v14, v15

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_36

    .line 1199
    const/16 v4, 0x40

    goto :goto_30

    :cond_36
    const/4 v4, 0x5

    :goto_30
    packed-switch v4, :pswitch_data_14

    .line 1126
    goto :goto_31

    :pswitch_12
    :try_start_21
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    .line 1127
    const-string v3, "ApplicationFirst"

    invoke-virtual {v2, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_21
    .catch Ljava/lang/Exception; {:try_start_21 .. :try_end_21} :catch_2

    const/4 v2, 0x0

    :try_start_22
    throw v2
    :try_end_22
    .catch Ljava/lang/Exception; {:try_start_22 .. :try_end_22} :catch_2
    .catchall {:try_start_22 .. :try_end_22} :catchall_7

    .line 1262
    :catchall_7
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1126
    :goto_31
    :try_start_23
    invoke-static {v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 1127
    const-string v14, "ApplicationFirst"

    invoke-virtual {v4, v14}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_37

    .line 1199
    const/16 v14, 0x5c

    goto :goto_32

    :cond_37
    const/16 v14, 0x13

    :goto_32
    packed-switch v14, :pswitch_data_15

    const/16 v21, 0x10

    goto :goto_33

    .line 1128
    :pswitch_13
    const/4 v4, 0x0

    aget-byte v14, v7, v4

    and-int/lit8 v4, v14, -0x11

    not-int v15, v14

    const/16 v21, 0x10

    and-int/lit8 v15, v15, 0x10

    or-int/2addr v4, v15

    and-int/lit8 v14, v14, 0x10

    xor-int v15, v4, v14

    and-int/2addr v4, v14

    or-int/2addr v4, v15

    int-to-byte v4, v4

    const/4 v14, 0x0

    aput-byte v4, v7, v14

    goto :goto_34

    .line 1129
    :goto_33
    const-string v14, "ServiceFirst"

    invoke-virtual {v4, v14}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v4
    :try_end_23
    .catch Ljava/lang/Exception; {:try_start_23 .. :try_end_23} :catch_2

    if-eqz v4, :cond_3a

    .line 1181
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v14, v4, 0x19

    or-int/2addr v4, v6

    add-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    if-nez v14, :cond_38

    .line 1130
    :cond_38
    const/4 v4, 0x0

    :try_start_24
    aget-byte v14, v7, v4

    xor-int/lit8 v15, v14, 0x20

    and-int/lit8 v14, v14, 0x20

    xor-int v18, v15, v14

    and-int/2addr v14, v15

    or-int v14, v18, v14

    int-to-byte v14, v14

    aput-byte v14, v7, v4

    goto :goto_34

    .line 1125
    :cond_39
    const/16 v21, 0x10

    .line 1134
    :cond_3a
    :goto_34
    invoke-interface {v12}, Ljava/util/List;->size()I

    move-result v4
    :try_end_24
    .catch Ljava/lang/Exception; {:try_start_24 .. :try_end_24} :catch_2

    if-lez v4, :cond_6e

    .line 1127
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v15, v4, 0x53

    and-int/lit8 v9, v4, 0x53

    or-int/2addr v15, v9

    const/16 v19, 0x1

    shl-int/lit8 v15, v15, 0x1

    not-int v9, v9

    or-int/lit8 v4, v4, 0x53

    and-int/2addr v4, v9

    sub-int/2addr v15, v4

    rem-int/lit16 v4, v15, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    const-string v4, "emv.tx.sm.PreProcessingList"

    if-eqz v15, :cond_3c

    .line 1135
    :try_start_25
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9
    :try_end_25
    .catch Ljava/lang/Exception; {:try_start_25 .. :try_end_25} :catch_2

    const/16 v15, 0xa

    const/16 v18, 0x0

    :try_start_26
    div-int/lit8 v15, v15, 0x0
    :try_end_26
    .catch Ljava/lang/Exception; {:try_start_26 .. :try_end_26} :catch_2
    .catchall {:try_start_26 .. :try_end_26} :catchall_8

    if-eqz v9, :cond_3b

    goto :goto_35

    :cond_3b
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    goto/16 :goto_6c

    .line 1127
    :catchall_8
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1134
    :cond_3c
    nop

    .line 1135
    :try_start_27
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    if-eqz v9, :cond_6d

    .line 1136
    :goto_35
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    instance-of v9, v9, Lcom/google/gson/JsonArray;

    if-eqz v9, :cond_6c

    .line 1138
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/google/gson/JsonArray;

    .line 1139
    new-instance v9, Lcom/google/gson/Gson;

    invoke-direct {v9}, Lcom/google/gson/Gson;-><init>()V

    invoke-virtual {v4}, Lcom/google/gson/JsonArray;->toString()Ljava/lang/String;

    move-result-object v4

    const-class v15, Ljava/util/ArrayList;

    invoke-virtual {v9, v4, v15}, Lcom/google/gson/Gson;->fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/ArrayList;
    :try_end_27
    .catch Ljava/lang/Exception; {:try_start_27 .. :try_end_27} :catch_1

    .line 1140
    if-eqz v4, :cond_3d

    .line 1199
    const/4 v9, 0x0

    goto :goto_36

    :cond_3d
    const/4 v9, 0x1

    :goto_36
    packed-switch v9, :pswitch_data_16

    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    goto/16 :goto_6b

    .line 1204
    :pswitch_14
    sget v9, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v15, v9, 0x44

    or-int/lit8 v9, v9, 0x44

    add-int/2addr v15, v9

    and-int/lit8 v9, v15, -0x1

    or-int/lit8 v15, v15, -0x1

    add-int/2addr v9, v15

    rem-int/lit16 v15, v9, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    if-eqz v9, :cond_6b

    .line 1140
    :try_start_28
    invoke-virtual {v4}, Ljava/util/AbstractCollection;->size()I

    move-result v9

    if-eqz v9, :cond_6a

    .line 1141
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V
    :try_end_28
    .catch Ljava/lang/Exception; {:try_start_28 .. :try_end_28} :catch_1

    .line 1142
    nop

    .line 1199
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v17, v15, 0x3

    xor-int/lit8 v15, v15, 0x3

    or-int v15, v15, v17

    add-int v15, v17, v15

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_3e

    const/4 v14, 0x3

    goto :goto_37

    :cond_3e
    move/from16 v14, v21

    :goto_37
    packed-switch v14, :pswitch_data_17

    .line 1142
    :pswitch_15
    const/4 v14, 0x0

    :goto_38
    :try_start_29
    invoke-virtual {v4}, Ljava/util/AbstractCollection;->size()I

    move-result v15
    :try_end_29
    .catch Ljava/lang/Exception; {:try_start_29 .. :try_end_29} :catch_1

    if-ge v14, v15, :cond_40

    .line 1143
    :try_start_2a
    new-instance v15, Lcom/google/gson/Gson;

    invoke-direct {v15}, Lcom/google/gson/Gson;-><init>()V

    new-instance v6, Lcom/google/gson/Gson;

    invoke-direct {v6}, Lcom/google/gson/Gson;-><init>()V

    move-object/from16 v25, v11

    invoke-virtual {v4, v14}, Ljava/util/AbstractList;->get(I)Ljava/lang/Object;

    move-result-object v11

    invoke-virtual {v6, v11}, Lcom/google/gson/Gson;->toJsonTree(Ljava/lang/Object;)Lcom/google/gson/JsonElement;

    move-result-object v6

    invoke-virtual {v6}, Lcom/google/gson/JsonElement;->toString()Ljava/lang/String;

    move-result-object v6

    const-class v11, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;

    invoke-virtual {v15, v6, v11}, Lcom/google/gson/Gson;->fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v6

    invoke-virtual {v9, v6}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z
    :try_end_2a
    .catch Ljava/lang/Exception; {:try_start_2a .. :try_end_2a} :catch_2

    .line 1142
    and-int/lit8 v6, v14, 0x2c

    not-int v11, v14

    and-int/lit8 v11, v11, -0x2d

    or-int/2addr v6, v11

    and-int/lit8 v11, v14, -0x2d

    const/4 v14, 0x1

    shl-int/2addr v11, v14

    neg-int v11, v11

    neg-int v11, v11

    or-int v15, v6, v11

    shl-int/2addr v15, v14

    xor-int/2addr v6, v11

    sub-int/2addr v15, v6

    add-int/lit8 v15, v15, 0x2f

    const/4 v6, 0x0

    sub-int/2addr v15, v6

    add-int/lit8 v6, v15, -0x1

    .line 1199
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v14, 0x19

    add-int/2addr v11, v14

    rem-int/lit16 v14, v11, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v11, v11, 0x2

    if-nez v11, :cond_3f

    .line 1276
    :cond_3f
    move v14, v6

    move-object/from16 v11, v25

    const/16 v6, 0x19

    goto :goto_38

    .line 1142
    :cond_40
    move-object/from16 v25, v11

    .line 1146
    :try_start_2b
    invoke-virtual {v9}, Ljava/util/AbstractCollection;->size()I

    move-result v4

    if-eqz v4, :cond_69

    .line 1147
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 1148
    sget-object v6, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;
    :try_end_2b
    .catch Ljava/lang/Exception; {:try_start_2b .. :try_end_2b} :catch_1

    if-nez v6, :cond_42

    .line 1149
    :try_start_2c
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    sput-object v6, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;
    :try_end_2c
    .catch Ljava/lang/Exception; {:try_start_2c .. :try_end_2c} :catch_2

    .line 1232
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x7e

    const/4 v11, 0x1

    sub-int/2addr v6, v11

    rem-int/lit16 v11, v6, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_41

    .line 1199
    const/4 v6, 0x0

    goto :goto_39

    :cond_41
    const/4 v6, 0x1

    :goto_39
    packed-switch v6, :pswitch_data_18

    .line 1276
    goto :goto_3a

    .line 1232
    :pswitch_16
    goto :goto_3a

    .line 1151
    :cond_42
    :try_start_2d
    invoke-interface {v6}, Ljava/util/List;->clear()V

    .line 1153
    :goto_3a
    const/4 v6, 0x1

    new-array v11, v6, [B

    .line 1155
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/4 v14, 0x0

    iput-boolean v14, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContactless:Z

    .line 1156
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v14, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContact:Z

    .line 1157
    invoke-virtual {v9}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .line 1276
    nop

    .line 1157
    :goto_3b
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_43

    .line 1199
    const/16 v9, 0x20

    goto :goto_3c

    :cond_43
    const/16 v9, 0x4f

    :goto_3c
    packed-switch v9, :pswitch_data_19

    .line 1157
    const/16 v15, 0x45

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9
    :try_end_2d
    .catch Ljava/lang/Exception; {:try_start_2d .. :try_end_2d} :catch_1

    goto/16 :goto_46

    .line 1229
    :pswitch_17
    :try_start_2e
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v5

    :goto_3d
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    move-result v6
    :try_end_2e
    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_2e} :catch_2

    if-eqz v6, :cond_49

    .line 1199
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v9, 0x29

    and-int/lit8 v11, v6, -0x2a

    not-int v12, v6

    and-int/2addr v12, v9

    or-int/2addr v11, v12

    and-int/2addr v6, v9

    const/4 v9, 0x1

    shl-int/2addr v6, v9

    xor-int v12, v11, v6

    and-int/2addr v6, v11

    shl-int/2addr v6, v9

    add-int/2addr v12, v6

    rem-int/lit16 v6, v12, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_44

    .line 1229
    :cond_44
    :try_start_2f
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;

    .line 1230
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_3e
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v11
    :try_end_2f
    .catch Ljava/lang/Exception; {:try_start_2f .. :try_end_2f} :catch_2

    if-eqz v11, :cond_48

    .line 1119
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v12, v11, 0x35

    and-int/lit8 v11, v11, 0x35

    const/4 v13, 0x1

    shl-int/2addr v11, v13

    add-int/2addr v12, v11

    rem-int/lit16 v11, v12, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_45

    .line 1199
    const/16 v11, 0x2c

    goto :goto_3f

    :cond_45
    const/16 v11, 0x27

    :goto_3f
    packed-switch v11, :pswitch_data_1a

    .line 1230
    :try_start_30
    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    goto :goto_40

    .line 1119
    :pswitch_18
    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;

    .line 1231
    iget-object v3, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->BuildConfig:Ljava/lang/String;

    iget-object v2, v2, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->BuildConfig:Ljava/lang/String;

    invoke-virtual {v3, v2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z
    :try_end_30
    .catch Ljava/lang/Exception; {:try_start_30 .. :try_end_30} :catch_2

    const/4 v2, 0x0

    :try_start_31
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_31
    .catch Ljava/lang/Exception; {:try_start_31 .. :try_end_31} :catch_2
    .catchall {:try_start_31 .. :try_end_31} :catchall_9

    .line 1119
    :catchall_9
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1230
    :goto_40
    :try_start_32
    check-cast v11, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;

    .line 1231
    iget-object v12, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->BuildConfig:Ljava/lang/String;

    iget-object v13, v11, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->BuildConfig:Ljava/lang/String;

    invoke-virtual {v12, v13}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v12
    :try_end_32
    .catch Ljava/lang/Exception; {:try_start_32 .. :try_end_32} :catch_2

    if-eqz v12, :cond_47

    .line 1102
    sget v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v13, v12, 0x45

    not-int v14, v13

    const/16 v15, 0x45

    or-int/2addr v12, v15

    and-int/2addr v12, v14

    const/4 v14, 0x1

    shl-int/2addr v13, v14

    add-int/2addr v12, v13

    rem-int/lit16 v13, v12, 0x80

    sput v13, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v12, v12, 0x2

    if-nez v12, :cond_46

    .line 1199
    const/16 v12, 0x5b

    goto :goto_41

    :cond_46
    const/16 v12, 0x4f

    :goto_41
    packed-switch v12, :pswitch_data_1b

    .line 1232
    :try_start_33
    iget-byte v12, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    goto :goto_42

    :pswitch_19
    iget-byte v12, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    iget-byte v11, v11, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    not-int v13, v11

    and-int/2addr v13, v12

    not-int v14, v12

    and-int/2addr v14, v11

    or-int/2addr v13, v14

    and-int/2addr v11, v12

    xor-int v12, v13, v11

    and-int/2addr v11, v13

    or-int/2addr v11, v12

    int-to-byte v11, v11

    iput-byte v11, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    goto :goto_43

    :goto_42
    iget-byte v11, v11, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    xor-int v13, v12, v11

    and-int/2addr v11, v12

    or-int/2addr v11, v13

    int-to-byte v11, v11

    iput-byte v11, v6, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B
    :try_end_33
    .catch Ljava/lang/Exception; {:try_start_33 .. :try_end_33} :catch_2

    .line 1181
    :goto_43
    sget v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v12, v11, 0x47

    and-int/lit8 v11, v11, 0x47

    or-int/2addr v11, v12

    const/4 v13, 0x1

    shl-int/2addr v11, v13

    neg-int v12, v12

    xor-int v14, v11, v12

    and-int/2addr v11, v12

    shl-int/2addr v11, v13

    add-int/2addr v14, v11

    rem-int/lit16 v11, v14, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v14, v14, 0x2

    goto :goto_44

    .line 1231
    :cond_47
    const/16 v15, 0x45

    .line 1232
    :goto_44
    goto/16 :goto_3e

    .line 1230
    :cond_48
    const/16 v15, 0x45

    .line 1232
    goto/16 :goto_3d

    .line 1236
    :cond_49
    :try_start_34
    new-instance v5, Ljava/lang/StringBuffer;

    invoke-direct {v5}, Ljava/lang/StringBuffer;-><init>()V

    .line 1237
    nop

    .line 1238
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4
    :try_end_34
    .catch Ljava/lang/Exception; {:try_start_34 .. :try_end_34} :catch_2

    .line 1232
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v9, v6, 0x2d

    and-int/lit8 v11, v6, 0x2d

    or-int/2addr v9, v11

    const/4 v11, 0x1

    shl-int/2addr v9, v11

    and-int/lit8 v12, v6, -0x2e

    not-int v6, v6

    const/16 v13, 0x2d

    and-int/2addr v6, v13

    or-int/2addr v6, v12

    neg-int v6, v6

    not-int v6, v6

    sub-int/2addr v9, v6

    sub-int/2addr v9, v11

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v9, v9, 0x2

    .line 1238
    const/4 v6, 0x0

    :goto_45
    :try_start_35
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_4a

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;

    .line 1239
    iget-byte v11, v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    not-int v12, v11

    and-int/2addr v12, v6

    not-int v13, v6

    and-int/2addr v13, v11

    or-int/2addr v12, v13

    and-int/2addr v6, v11

    xor-int v11, v12, v6

    and-int/2addr v6, v12

    or-int/2addr v6, v11

    int-to-byte v6, v6

    .line 1240
    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    iget-byte v12, v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->ContactlessConfiguration:B

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData(B)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-byte v12, v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->getInstance:B

    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData(B)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->$$a:Ljava/lang/String;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v9, v9, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;->BuildConfig:Ljava/lang/String;

    invoke-virtual {v11, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v5, v9}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_45

    .line 1242
    :cond_4a
    const-string v4, "SPLIT_TC_ELIGIBLE"

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData(B)Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1243
    const-string v4, "SPLIT_TC_AIDLIST"

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1244
    const-string v4, "SPLIT_TC_DATASET"

    invoke-static {v4, v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1246
    const-string v4, "SPLIT_TC_TIMEOUT_POLL"

    const-string v5, "KV.TIMEOUT"

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1247
    const-string v4, "LV.QUICK_CHIP_DONE"

    const-string v5, "False"

    invoke-static {v4, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_35
    .catch Ljava/lang/Exception; {:try_start_35 .. :try_end_35} :catch_2

    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    goto/16 :goto_6b

    .line 1157
    :goto_46
    :try_start_36
    check-cast v9, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;
    :try_end_36
    .catch Ljava/lang/Exception; {:try_start_36 .. :try_end_36} :catch_1

    .line 1158
    nop

    .line 1159
    if-eqz v9, :cond_4b

    .line 1199
    const/16 v14, 0x51

    goto :goto_47

    :cond_4b
    const/16 v14, 0x11

    :goto_47
    packed-switch v14, :pswitch_data_1c

    .line 1252
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v17, v14, 0x2d

    and-int/lit8 v15, v14, 0x2d

    or-int v17, v17, v15

    const/16 v19, 0x1

    shl-int/lit8 v17, v17, 0x1

    not-int v15, v15

    const/16 v20, 0x2d

    or-int/lit8 v14, v14, 0x2d

    and-int/2addr v14, v15

    neg-int v14, v14

    or-int v15, v17, v14

    shl-int/lit8 v15, v15, 0x1

    xor-int v14, v17, v14

    sub-int/2addr v15, v14

    rem-int/lit16 v14, v15, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_68

    goto :goto_48

    .line 1199
    :pswitch_1a
    move-object/from16 v31, v2

    move-object/from16 p1, v6

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    const/16 v20, 0x2d

    const/16 v21, 0x19

    goto/16 :goto_6a

    .line 1159
    :goto_48
    :try_start_37
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v14
    :try_end_37
    .catch Ljava/lang/Exception; {:try_start_37 .. :try_end_37} :catch_1

    if-eqz v14, :cond_4c

    .line 1199
    const/4 v14, 0x1

    goto :goto_49

    :cond_4c
    const/4 v14, 0x0

    :goto_49
    packed-switch v14, :pswitch_data_1d

    move-object/from16 v31, v2

    move-object/from16 p1, v6

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    const/16 v21, 0x19

    goto/16 :goto_6a

    .line 1099
    :pswitch_1b
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v14, v14, 0x48

    const/4 v15, 0x1

    sub-int/2addr v14, v15

    rem-int/lit16 v15, v14, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v14, v14, 0x2

    if-eqz v14, :cond_4d

    .line 1199
    const/16 v14, 0x24

    goto :goto_4a

    :cond_4d
    const/16 v14, 0x31

    :goto_4a
    packed-switch v14, :pswitch_data_1e

    .line 1160
    :try_start_38
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v14
    :try_end_38
    .catch Ljava/lang/Exception; {:try_start_38 .. :try_end_38} :catch_1

    goto :goto_4c

    :pswitch_1c
    :try_start_39
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v14

    invoke-interface {v12, v14}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v14
    :try_end_39
    .catch Ljava/lang/Exception; {:try_start_39 .. :try_end_39} :catch_2

    if-eqz v14, :cond_4e

    :goto_4b
    goto :goto_4d

    :cond_4e
    move-object/from16 v31, v2

    move-object/from16 p1, v6

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    const/16 v21, 0x19

    goto/16 :goto_6a

    :goto_4c
    :try_start_3a
    invoke-interface {v12, v14}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v14
    :try_end_3a
    .catch Ljava/lang/Exception; {:try_start_3a .. :try_end_3a} :catch_1

    const/16 v15, 0x19

    const/16 v17, 0x0

    :try_start_3b
    div-int/lit8 v15, v15, 0x0
    :try_end_3b
    .catch Ljava/lang/Exception; {:try_start_3b .. :try_end_3b} :catch_1
    .catchall {:try_start_3b .. :try_end_3b} :catchall_f

    if-eqz v14, :cond_67

    goto :goto_4b

    .line 1161
    :goto_4d
    :try_start_3c
    new-instance v14, Ljava/util/ArrayList;

    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V

    .line 1162
    sget-object v15, Lcom/visa/vac/tc/emvconverter/CAL;->getFinalOutcome:Landroid/util/ArrayMap;

    move-object/from16 p1, v6

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v15, v6}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6
    :try_end_3c
    .catch Ljava/lang/Exception; {:try_start_3c .. :try_end_3c} :catch_1

    if-eqz v6, :cond_4f

    .line 1199
    const/16 v6, 0x3c

    goto :goto_4e

    :cond_4f
    const/16 v6, 0x8

    :goto_4e
    packed-switch v6, :pswitch_data_1f

    goto :goto_50

    .line 1163
    :pswitch_1d
    :try_start_3d
    sget-object v6, Lcom/visa/vac/tc/emvconverter/CAL;->getFinalOutcome:Landroid/util/ArrayMap;

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v6, v14}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    move-object v14, v6

    check-cast v14, Ljava/util/List;
    :try_end_3d
    .catch Ljava/lang/Exception; {:try_start_3d .. :try_end_3d} :catch_2

    .line 1050
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v15, v6, 0x4f

    const/16 v17, 0x4f

    and-int/lit8 v6, v6, 0x4f

    const/16 v17, 0x1

    shl-int/lit8 v6, v6, 0x1

    add-int/2addr v15, v6

    rem-int/lit16 v6, v15, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_50

    .line 1199
    const/4 v6, 0x0

    goto :goto_4f

    :cond_50
    const/4 v6, 0x1

    :goto_4f
    packed-switch v6, :pswitch_data_20

    .line 1050
    goto :goto_50

    .line 1276
    :pswitch_1e
    nop

    .line 1166
    :goto_50
    :try_start_3e
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v6, v13}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v6
    :try_end_3e
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_3e} :catch_1

    if-eqz v6, :cond_52

    .line 1135
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v15, v6, 0x19

    const/16 v17, 0x1

    shl-int/lit8 v15, v15, 0x1

    and-int/lit8 v19, v6, -0x1a

    not-int v6, v6

    const/16 v21, 0x19

    and-int v6, v21, v6

    or-int v6, v19, v6

    neg-int v6, v6

    xor-int v26, v15, v6

    and-int/2addr v6, v15

    shl-int/lit8 v6, v6, 0x1

    add-int v6, v26, v6

    rem-int/lit16 v15, v6, 0x80

    sput v15, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_51

    .line 1167
    :cond_51
    :try_start_3f
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/4 v15, 0x1

    iput-boolean v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContactless:Z

    .line 1168
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v15, "Present card"

    iput-object v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1170
    const/16 v6, 0x40

    const/4 v15, 0x0

    aput-byte v6, v11, v15
    :try_end_3f
    .catch Ljava/lang/Exception; {:try_start_3f .. :try_end_3f} :catch_2

    goto :goto_54

    .line 1166
    :cond_52
    const/16 v21, 0x19

    .line 1171
    :try_start_40
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v6

    const-string v15, "Contact"

    invoke-virtual {v6, v15}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v6
    :try_end_40
    .catch Ljava/lang/Exception; {:try_start_40 .. :try_end_40} :catch_1

    if-eqz v6, :cond_53

    .line 1199
    const/4 v6, 0x0

    goto :goto_51

    :cond_53
    const/4 v6, 0x1

    :goto_51
    packed-switch v6, :pswitch_data_21

    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    move-object/from16 v1, p0

    move-object/from16 v6, p1

    goto/16 :goto_3b

    .line 1231
    :pswitch_1f
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v15, v6, 0x72

    or-int/lit8 v6, v6, 0x72

    add-int/2addr v15, v6

    const/4 v6, 0x0

    sub-int/2addr v15, v6

    const/4 v6, 0x1

    sub-int/2addr v15, v6

    rem-int/lit16 v6, v15, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-eqz v15, :cond_54

    .line 1199
    const/16 v6, 0xe

    goto :goto_52

    :cond_54
    const/16 v6, 0x33

    :goto_52
    packed-switch v6, :pswitch_data_22

    .line 1172
    :try_start_41
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;
    :try_end_41
    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_41} :catch_1

    goto :goto_53

    :pswitch_20
    :try_start_42
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/4 v15, 0x1

    iput-boolean v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContact:Z

    .line 1173
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v15, "Present card"

    iput-object v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1175
    const/16 v6, 0x9

    const/4 v15, 0x1

    aput-byte v6, v11, v15
    :try_end_42
    .catch Ljava/lang/Exception; {:try_start_42 .. :try_end_42} :catch_2

    goto :goto_54

    .line 1172
    :goto_53
    const/4 v15, 0x1

    :try_start_43
    iput-boolean v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContact:Z

    .line 1173
    iget-object v6, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const-string v15, "Present card"

    iput-object v15, v6, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionDisplay:Ljava/lang/String;

    .line 1175
    const/16 v6, -0x80

    const/4 v15, 0x0

    aput-byte v6, v11, v15

    .line 1179
    :goto_54
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getSvIDList()Ljava/util/ArrayList;

    move-result-object v6
    :try_end_43
    .catch Ljava/lang/Exception; {:try_start_43 .. :try_end_43} :catch_1

    .line 1180
    if-eqz v6, :cond_66

    .line 1089
    sget v15, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v17, v15, 0x75

    and-int/lit8 v15, v15, 0x75

    const/16 v19, 0x1

    shl-int/lit8 v15, v15, 0x1

    neg-int v15, v15

    neg-int v15, v15

    or-int v26, v17, v15

    shl-int/lit8 v26, v26, 0x1

    xor-int v15, v17, v15

    sub-int v15, v26, v15

    move-object/from16 v26, v12

    rem-int/lit16 v12, v15, 0x80

    sput v12, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v15, v15, 0x2

    if-nez v15, :cond_65

    .line 1181
    :try_start_44
    invoke-virtual {v6}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v6

    const/4 v12, 0x0

    :goto_55
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v15

    if-eqz v15, :cond_64

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;

    .line 1183
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getSvID()Ljava/lang/Object;

    move-result-object v17

    if-eqz v17, :cond_63

    .line 1184
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getSvID()Ljava/lang/Object;

    move-result-object v17

    move-object/from16 v27, v6

    move-object/from16 v6, v17

    check-cast v6, Ljava/lang/String;

    .line 1185
    move-object/from16 v28, v13

    new-instance v13, Landroid/util/ArrayMap;

    invoke-direct {v13}, Landroid/util/ArrayMap;-><init>()V

    .line 1186
    move-object/from16 v29, v7

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/Utils;->hexToByteArray(Ljava/lang/String;)[B

    move-result-object v7

    invoke-interface {v14, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 1187
    const-string v7, "KV.PARTIAL_MATCH"

    invoke-static {v7, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1188
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getSelectionIndicator()Ljava/lang/Object;

    move-result-object v7
    :try_end_44
    .catch Ljava/lang/Exception; {:try_start_44 .. :try_end_44} :catch_1

    if-eqz v7, :cond_56

    .line 1160
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v17, v7, 0x7a

    or-int/lit8 v7, v7, 0x7a

    add-int v17, v17, v7

    or-int/lit8 v7, v17, -0x1

    const/16 v19, 0x1

    shl-int/lit8 v7, v7, 0x1

    xor-int/lit8 v17, v17, -0x1

    sub-int v7, v7, v17

    move/from16 v30, v10

    rem-int/lit16 v10, v7, 0x80

    sput v10, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_55

    .line 1199
    const/4 v7, 0x0

    goto :goto_56

    :cond_55
    const/4 v7, 0x1

    :goto_56
    packed-switch v7, :pswitch_data_23

    .line 1188
    :try_start_45
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getSelectionIndicator()Ljava/lang/Object;

    move-result-object v7
    :try_end_45
    .catch Ljava/lang/Exception; {:try_start_45 .. :try_end_45} :catch_1

    goto :goto_57

    .line 1160
    :pswitch_21
    :try_start_46
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getSelectionIndicator()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/String;

    const-string v3, "Full"

    invoke-virtual {v2, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z
    :try_end_46
    .catch Ljava/lang/Exception; {:try_start_46 .. :try_end_46} :catch_2

    const/4 v2, 0x0

    :try_start_47
    throw v2
    :try_end_47
    .catch Ljava/lang/Exception; {:try_start_47 .. :try_end_47} :catch_2
    .catchall {:try_start_47 .. :try_end_47} :catchall_a

    :catchall_a
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1188
    :goto_57
    :try_start_48
    check-cast v7, Ljava/lang/String;

    const-string v10, "Full"

    invoke-virtual {v7, v10}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_57

    .line 1189
    const-string v7, "KV.PARTIAL_MATCH"

    const-string v10, "FALSE"

    invoke-static {v7, v10}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V
    :try_end_48
    .catch Ljava/lang/Exception; {:try_start_48 .. :try_end_48} :catch_1

    .line 1232
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v10, v7, 0x4b

    not-int v1, v10

    or-int/lit8 v7, v7, 0x4b

    and-int/2addr v1, v7

    const/4 v7, 0x1

    shl-int/2addr v10, v7

    neg-int v10, v10

    neg-int v10, v10

    xor-int v17, v1, v10

    and-int/2addr v1, v10

    shl-int/2addr v1, v7

    add-int v1, v17, v1

    rem-int/lit16 v7, v1, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    goto :goto_58

    .line 1188
    :cond_56
    move/from16 v30, v10

    .line 1191
    :cond_57
    :goto_58
    :try_start_49
    const-string v1, "KV.PARTIAL_MATCH"

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-virtual {v1}, Ljava/lang/String;->toUpperCase()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v1, v5}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_58

    .line 1199
    const/16 v1, 0x2f

    goto :goto_59

    :cond_58
    const/4 v1, 0x0

    :goto_59
    packed-switch v1, :pswitch_data_24

    .line 1194
    const/4 v7, 0x0

    aget-byte v1, v11, v7
    :try_end_49
    .catch Ljava/lang/Exception; {:try_start_49 .. :try_end_49} :catch_1

    goto :goto_5a

    .line 1252
    :pswitch_22
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v7, v1, -0x3a

    not-int v10, v1

    and-int/lit8 v10, v10, 0x39

    or-int/2addr v7, v10

    and-int/lit8 v1, v1, 0x39

    const/4 v10, 0x1

    shl-int/2addr v1, v10

    add-int/2addr v7, v1

    rem-int/lit16 v1, v7, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_59

    .line 1192
    :cond_59
    const/4 v1, 0x0

    :try_start_4a
    aget-byte v7, v11, v1

    and-int/lit8 v1, v7, -0x2

    not-int v10, v7

    const/16 v17, 0x1

    and-int/lit8 v10, v10, 0x1

    or-int/2addr v1, v10

    and-int/lit8 v7, v7, 0x1

    xor-int v10, v1, v7

    and-int/2addr v1, v7

    or-int/2addr v1, v10

    int-to-byte v1, v1

    const/4 v7, 0x0

    aput-byte v1, v11, v7

    goto :goto_5b

    .line 1194
    :goto_5a
    and-int/lit8 v1, v1, -0x2

    int-to-byte v1, v1

    aput-byte v1, v11, v7

    .line 1196
    :goto_5b
    const-string v1, "svIDCDO.SvID"

    invoke-virtual {v13, v1, v6}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1197
    const-string v1, "svIDCDO.CVMethodIDList"

    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getCVMethodIDList()Ljava/lang/Object;

    move-result-object v7

    invoke-virtual {v13, v1, v7}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1198
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceAvailable()Z

    move-result v1
    :try_end_4a
    .catch Ljava/lang/Exception; {:try_start_4a .. :try_end_4a} :catch_1

    if-eqz v1, :cond_5a

    .line 1199
    const/4 v1, 0x1

    goto :goto_5c

    :cond_5a
    const/4 v1, 0x0

    :goto_5c
    packed-switch v1, :pswitch_data_25

    .line 1023
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v1, v1, 0xa

    const/4 v7, 0x1

    sub-int/2addr v1, v7

    rem-int/lit16 v7, v1, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_62

    goto :goto_5d

    .line 1201
    :pswitch_23
    :try_start_4b
    const-string v1, "FALSE"

    invoke-virtual {v13, v3, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_5e

    .line 1199
    :goto_5d
    invoke-virtual {v13, v3, v5}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1203
    :goto_5e
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceOrder()Ljava/lang/String;

    move-result-object v1
    :try_end_4b
    .catch Ljava/lang/Exception; {:try_start_4b .. :try_end_4b} :catch_1

    if-eqz v1, :cond_5b

    .line 1199
    const/16 v1, 0x3c

    goto :goto_5f

    :cond_5b
    const/16 v1, 0x1c

    :goto_5f
    packed-switch v1, :pswitch_data_26

    :pswitch_24
    goto/16 :goto_67

    .line 1252
    :pswitch_25
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v1, v1, 0x14

    const/4 v7, 0x1

    sub-int/2addr v1, v7

    rem-int/lit16 v7, v1, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_5c

    .line 1199
    const/16 v1, 0x61

    goto :goto_60

    :cond_5c
    const/16 v1, 0xb

    :goto_60
    packed-switch v1, :pswitch_data_27

    .line 1203
    :try_start_4c
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceOrder()Ljava/lang/String;

    move-result-object v1

    goto :goto_62

    .line 1252
    :pswitch_26
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceOrder()Ljava/lang/String;

    move-result-object v1

    instance-of v1, v1, Ljava/lang/String;
    :try_end_4c
    .catch Ljava/lang/Exception; {:try_start_4c .. :try_end_4c} :catch_1

    const/4 v7, 0x1

    const/4 v10, 0x0

    :try_start_4d
    div-int/2addr v7, v10
    :try_end_4d
    .catch Ljava/lang/Exception; {:try_start_4d .. :try_end_4d} :catch_1
    .catchall {:try_start_4d .. :try_end_4d} :catchall_b

    if-eqz v1, :cond_5d

    .line 1199
    const/4 v1, 0x0

    goto :goto_61

    :cond_5d
    const/4 v1, 0x1

    :goto_61
    packed-switch v1, :pswitch_data_28

    goto :goto_64

    .line 1252
    :catchall_b
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1203
    :goto_62
    :try_start_4e
    instance-of v1, v1, Ljava/lang/String;
    :try_end_4e
    .catch Ljava/lang/Exception; {:try_start_4e .. :try_end_4e} :catch_1

    if-eqz v1, :cond_5e

    .line 1199
    const/16 v1, 0x2f

    goto :goto_63

    :cond_5e
    const/16 v1, 0x42

    :goto_63
    packed-switch v1, :pswitch_data_29

    .line 1160
    :goto_64
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v7, v1, 0x7d

    shl-int/lit8 v10, v7, 0x1

    and-int/lit8 v1, v1, 0x7d

    not-int v1, v1

    and-int/2addr v1, v7

    neg-int v1, v1

    or-int v7, v10, v1

    const/16 v17, 0x1

    shl-int/lit8 v7, v7, 0x1

    xor-int/2addr v1, v10

    sub-int/2addr v7, v1

    rem-int/lit16 v1, v7, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_5f

    .line 1199
    const/4 v1, 0x1

    goto :goto_65

    :cond_5f
    const/4 v1, 0x0

    :goto_65
    packed-switch v1, :pswitch_data_2a

    .line 1204
    goto :goto_66

    :pswitch_27
    :try_start_4f
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceOrder()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v2, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_4f
    .catch Ljava/lang/Exception; {:try_start_4f .. :try_end_4f} :catch_1

    const/16 v1, 0x27

    const/4 v7, 0x0

    :try_start_50
    div-int/2addr v1, v7
    :try_end_50
    .catch Ljava/lang/Exception; {:try_start_50 .. :try_end_50} :catch_1
    .catchall {:try_start_50 .. :try_end_50} :catchall_c

    goto :goto_67

    .line 1160
    :catchall_c
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1204
    :goto_66
    :try_start_51
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getCardholderChoiceOrder()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v2, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1207
    :goto_67
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    new-instance v7, Ljava/lang/StringBuilder;

    const-string v10, "Kernel"

    invoke-direct {v7, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, ":"

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 1208
    if-nez v1, :cond_60

    .line 1209
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    new-instance v7, Ljava/lang/StringBuilder;

    const-string v10, "Kernel"

    invoke-direct {v7, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, ":ANY"

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    .line 1276
    nop

    .line 1211
    :cond_60
    const-string v7, "FirstGenKernelID"

    invoke-virtual {v1}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v13, v7, v10}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1212
    const-string v7, "paymentsystem.tx."

    new-instance v10, Ljava/lang/StringBuilder;

    move-object/from16 v31, v2

    const-string v2, "paymentsystem.tx."

    invoke-direct {v10, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ".tag."

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v7, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1213
    invoke-virtual {v15}, Lcom/visa/vac/tc/emvconverter/model/SvIDCDO;->getPreProcessingDataContainer()Ljava/lang/Object;

    move-result-object v1

    .line 1214
    if-eqz v1, :cond_61

    .line 1215
    new-instance v2, Lcom/google/gson/Gson;

    invoke-direct {v2}, Lcom/google/gson/Gson;-><init>()V

    invoke-virtual {v2, v1}, Lcom/google/gson/Gson;->toJsonTree(Ljava/lang/Object;)Lcom/google/gson/JsonElement;

    move-result-object v1

    invoke-virtual {v1}, Lcom/google/gson/JsonElement;->getAsJsonObject()Lcom/google/gson/JsonObject;

    move-result-object v1

    .line 1216
    invoke-static {v1, v13}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/google/gson/JsonObject;Landroid/util/ArrayMap;)V

    .line 1218
    :cond_61
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->getKernelData:Landroid/util/ArrayMap;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v7, ":"

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2, v13}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1219
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->getTerminalData(B)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v8, v1, v13}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1220
    invoke-static {v11}, Lcom/visa/vac/tc/emvconverter/Utils;->getHexString([B)Ljava/lang/String;

    .line 1222
    new-instance v1, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;

    xor-int/lit8 v2, v12, 0x1

    and-int/lit8 v7, v12, 0x1

    const/4 v10, 0x1

    shl-int/2addr v7, v10

    add-int/2addr v2, v7

    int-to-byte v2, v2

    const/4 v7, 0x0

    aget-byte v10, v11, v7

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v7

    div-int/lit8 v7, v7, 0x2

    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v7

    invoke-direct {v1, v12, v10, v7, v6}, Lcom/visa/vac/tc/emvconverter/CAL$getInstance;-><init>(BBLjava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v1}, Ljava/util/AbstractCollection;->add(Ljava/lang/Object;)Z

    move v12, v2

    goto :goto_68

    .line 1199
    :cond_62
    invoke-virtual {v13, v3, v5}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_51
    .catch Ljava/lang/Exception; {:try_start_51 .. :try_end_51} :catch_1

    const/4 v1, 0x0

    :try_start_52
    invoke-super {v1}, Ljava/lang/Object;->hashCode()I

    throw v1
    :try_end_52
    .catch Ljava/lang/Exception; {:try_start_52 .. :try_end_52} :catch_0
    .catchall {:try_start_52 .. :try_end_52} :catchall_d

    .line 1023
    :catchall_d
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1183
    :cond_63
    move-object/from16 v31, v2

    move-object/from16 v27, v6

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v28, v13

    .line 1222
    :goto_68
    move-object/from16 v1, p0

    move-object/from16 v6, v27

    move-object/from16 v13, v28

    move-object/from16 v7, v29

    move/from16 v10, v30

    move-object/from16 v2, v31

    goto/16 :goto_55

    .line 1181
    :cond_64
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v28, v13

    goto :goto_69

    :cond_65
    :try_start_53
    invoke-virtual {v6}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;
    :try_end_53
    .catch Ljava/lang/Exception; {:try_start_53 .. :try_end_53} :catch_1

    const/4 v1, 0x0

    :try_start_54
    throw v1
    :try_end_54
    .catch Ljava/lang/Exception; {:try_start_54 .. :try_end_54} :catch_1
    .catchall {:try_start_54 .. :try_end_54} :catchall_e

    .line 1089
    :catchall_e
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1180
    :cond_66
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    .line 1226
    :goto_69
    :try_start_55
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->getFinalOutcome:Landroid/util/ArrayMap;

    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2, v14}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_55
    .catch Ljava/lang/Exception; {:try_start_55 .. :try_end_55} :catch_1

    goto :goto_6a

    .line 1160
    :cond_67
    move-object/from16 v31, v2

    move-object/from16 p1, v6

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v26, v12

    move-object/from16 v28, v13

    const/16 v21, 0x19

    goto :goto_6a

    .line 1099
    :catchall_f
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1226
    :goto_6a
    nop

    .line 1204
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v1, 0x57

    xor-int/lit8 v1, v1, 0x57

    or-int/2addr v1, v2

    add-int/2addr v2, v1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    move-object/from16 v1, p0

    move-object/from16 v6, p1

    move-object/from16 v12, v26

    move-object/from16 v13, v28

    move-object/from16 v7, v29

    move/from16 v10, v30

    move-object/from16 v2, v31

    goto/16 :goto_3b

    .line 1252
    :cond_68
    :try_start_56
    invoke-virtual {v9}, Lcom/visa/vac/tc/emvconverter/model/EmvTxSmPreProcessingList;->getInterfaceID()Ljava/lang/String;
    :try_end_56
    .catch Ljava/lang/Exception; {:try_start_56 .. :try_end_56} :catch_1

    const/4 v1, 0x0

    :try_start_57
    invoke-super {v1}, Ljava/lang/Object;->hashCode()I

    throw v1
    :try_end_57
    .catch Ljava/lang/Exception; {:try_start_57 .. :try_end_57} :catch_0
    .catchall {:try_start_57 .. :try_end_57} :catchall_10

    :catchall_10
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1270
    :catch_0
    move-exception v0

    move-object v2, v0

    move-object/from16 v1, p0

    goto/16 :goto_77

    .line 1146
    :cond_69
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    goto :goto_6b

    .line 1140
    :cond_6a
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    goto :goto_6b

    .line 1204
    :cond_6b
    :try_start_58
    invoke-virtual {v4}, Ljava/util/AbstractCollection;->size()I
    :try_end_58
    .catch Ljava/lang/Exception; {:try_start_58 .. :try_end_58} :catch_1

    const/4 v1, 0x0

    :try_start_59
    throw v1
    :try_end_59
    .catch Ljava/lang/Exception; {:try_start_59 .. :try_end_59} :catch_1
    .catchall {:try_start_59 .. :try_end_59} :catchall_11

    :catchall_11
    move-exception v0

    move-object v1, v0

    throw v1

    .line 1247
    :goto_6b
    move-object/from16 v1, p0

    goto/16 :goto_72

    .line 1136
    :cond_6c
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    goto :goto_6c

    .line 1135
    :cond_6d
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    goto :goto_6c

    .line 1270
    :catch_1
    move-exception v0

    move-object/from16 v1, p0

    goto/16 :goto_76

    .line 1134
    :cond_6e
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    .line 1247
    :goto_6c
    move-object/from16 v1, p0

    :try_start_5a
    iget v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I
    :try_end_5a
    .catch Ljava/lang/Exception; {:try_start_5a .. :try_end_5a} :catch_2

    const/16 v4, 0xa

    if-ne v2, v4, :cond_71

    .line 1175
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v3, v2, 0x4f

    const/16 v4, 0x4f

    or-int/2addr v2, v4

    neg-int v2, v2

    neg-int v2, v2

    and-int v4, v3, v2

    or-int/2addr v2, v3

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_6f

    .line 1199
    const/16 v2, 0x4c

    goto :goto_6d

    :cond_6f
    const/16 v2, 0x13

    :goto_6d
    packed-switch v2, :pswitch_data_2b

    .line 1251
    :try_start_5b
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    goto :goto_6e

    :pswitch_28
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    const/16 v3, 0x46

    iget-object v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    invoke-interface {v2, v3, v4}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V

    goto :goto_6f

    :goto_6e
    iget-object v3, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/16 v4, 0x12

    invoke-interface {v2, v4, v3}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V
    :try_end_5b
    .catch Ljava/lang/Exception; {:try_start_5b .. :try_end_5b} :catch_2

    .line 1252
    :goto_6f
    nop

    .line 1181
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/16 v3, 0x5d

    and-int/lit8 v4, v2, -0x5e

    not-int v5, v2

    and-int/2addr v5, v3

    or-int/2addr v4, v5

    and-int/2addr v2, v3

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    add-int/2addr v4, v2

    rem-int/lit16 v2, v4, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_70

    .line 1199
    const/16 v2, 0x16

    goto :goto_70

    :cond_70
    const/4 v2, 0x4

    :goto_70
    packed-switch v2, :pswitch_data_2c

    .line 1181
    goto :goto_71

    .line 1276
    :pswitch_29
    const/4 v2, 0x1

    return v2

    .line 1181
    :goto_71
    const/4 v2, 0x0

    :try_start_5c
    throw v2
    :try_end_5c
    .catchall {:try_start_5c .. :try_end_5c} :catchall_12

    :catchall_12
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1255
    :cond_71
    :goto_72
    :try_start_5d
    const-string v2, "SPLIT_TC_PDOL"

    invoke-static {}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1256
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    iget v4, v1, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    iget-object v5, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    invoke-interface {v2, v4, v5}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V

    .line 1276
    goto :goto_73

    .line 1110
    :cond_72
    move-object/from16 v31, v2

    move-object/from16 v29, v7

    move/from16 v30, v10

    move-object/from16 v25, v11

    .line 997
    :goto_73
    and-int/lit8 v2, v30, 0x2

    or-int/lit8 v4, v30, 0x2

    add-int/2addr v2, v4

    and-int/lit8 v4, v2, -0x1

    or-int/lit8 v2, v2, -0x1

    add-int v10, v4, v2

    move-object/from16 v5, v23

    move-object/from16 v11, v25

    move-object/from16 v7, v29

    move-object/from16 v2, v31

    const/4 v4, 0x0

    const/4 v6, 0x1

    goto/16 :goto_0

    :cond_73
    move-object/from16 v29, v7

    const/16 v4, 0xa

    .line 1259
    const-string v2, "SPLIT_TC_CARDHOLDER"

    move-object/from16 v3, v29

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1260
    iget v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I
    :try_end_5d
    .catch Ljava/lang/Exception; {:try_start_5d .. :try_end_5d} :catch_2

    if-nez v2, :cond_77

    .line 1232
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v3, v2, 0x3b

    and-int/lit8 v5, v2, 0x3b

    or-int/2addr v3, v5

    const/4 v5, 0x1

    shl-int/2addr v3, v5

    and-int/lit8 v5, v2, -0x3c

    not-int v2, v2

    and-int/lit8 v2, v2, 0x3b

    or-int/2addr v2, v5

    neg-int v2, v2

    and-int v5, v3, v2

    or-int/2addr v2, v3

    add-int/2addr v5, v2

    rem-int/lit16 v2, v5, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_75

    .line 1262
    :try_start_5e
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v2, v2, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;
    :try_end_5e
    .catch Ljava/lang/Exception; {:try_start_5e .. :try_end_5e} :catch_2

    const/16 v3, 0x3b

    const/4 v5, 0x0

    :try_start_5f
    div-int/2addr v3, v5
    :try_end_5f
    .catch Ljava/lang/Exception; {:try_start_5f .. :try_end_5f} :catch_2
    .catchall {:try_start_5f .. :try_end_5f} :catchall_13

    if-nez v2, :cond_74

    .line 1199
    const/16 v14, 0x47

    goto :goto_74

    :cond_74
    move v14, v4

    :goto_74
    packed-switch v14, :pswitch_data_2d

    goto :goto_75

    .line 1232
    :catchall_13
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1262
    :cond_75
    :try_start_60
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iget-object v2, v2, Lcom/visa/vac/tc/emvconverter/Transaction;->finalStatus:Ljava/lang/String;

    if-nez v2, :cond_76

    .line 1263
    :pswitch_2a
    const-string v2, "FINAL_STATUS"

    const-string v3, "Decline"

    invoke-static {v2, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1265
    :cond_76
    :goto_75
    iget-object v2, v1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    iget-object v3, v1, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    const/16 v4, 0x12

    invoke-interface {v2, v4, v3}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V
    :try_end_60
    .catch Ljava/lang/Exception; {:try_start_60 .. :try_end_60} :catch_2

    .line 1267
    :cond_77
    nop

    .line 1232
    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v2, v2, 0x52

    const/4 v3, 0x1

    sub-int/2addr v2, v3

    rem-int/lit16 v4, v2, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_78

    .line 1276
    return v3

    .line 1232
    :cond_78
    const/4 v2, 0x0

    :try_start_61
    throw v2
    :try_end_61
    .catchall {:try_start_61 .. :try_end_61} :catchall_14

    :catchall_14
    move-exception v0

    move-object v2, v0

    throw v2

    .line 1270
    :catch_2
    move-exception v0

    :goto_76
    move-object v2, v0

    .line 1271
    :goto_77
    invoke-virtual {v2}, Ljava/lang/Throwable;->printStackTrace()V

    .line 1272
    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 1276
    const/4 v2, 0x0

    return v2

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x4b
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x3a
        :pswitch_5
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1c
        :pswitch_7
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0xd
        :pswitch_4
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x1
        :pswitch_8
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x2a
        :pswitch_9
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1e
        :pswitch_c
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x18
        :pswitch_e
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x38
        :pswitch_d
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0xe
        :pswitch_e
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x22
        :pswitch_f
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x1
        :pswitch_10
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x15
        :pswitch_11
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x40
        :pswitch_12
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x5c
        :pswitch_13
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x0
        :pswitch_14
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0x3
        :pswitch_15
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x0
        :pswitch_16
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x4f
        :pswitch_17
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x2c
        :pswitch_18
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x5b
        :pswitch_19
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x11
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x1
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x31
        :pswitch_1c
    .end packed-switch

    :pswitch_data_1f
    .packed-switch 0x3c
        :pswitch_1d
    .end packed-switch

    :pswitch_data_20
    .packed-switch 0x1
        :pswitch_1e
    .end packed-switch

    :pswitch_data_21
    .packed-switch 0x0
        :pswitch_1f
    .end packed-switch

    :pswitch_data_22
    .packed-switch 0xe
        :pswitch_20
    .end packed-switch

    :pswitch_data_23
    .packed-switch 0x0
        :pswitch_21
    .end packed-switch

    :pswitch_data_24
    .packed-switch 0x2f
        :pswitch_22
    .end packed-switch

    :pswitch_data_25
    .packed-switch 0x0
        :pswitch_23
    .end packed-switch

    :pswitch_data_26
    .packed-switch 0x3c
        :pswitch_25
    .end packed-switch

    :pswitch_data_27
    .packed-switch 0x61
        :pswitch_26
    .end packed-switch

    :pswitch_data_28
    .packed-switch 0x1
        :pswitch_24
    .end packed-switch

    :pswitch_data_29
    .packed-switch 0x42
        :pswitch_24
    .end packed-switch

    :pswitch_data_2a
    .packed-switch 0x1
        :pswitch_27
    .end packed-switch

    :pswitch_data_2b
    .packed-switch 0x4c
        :pswitch_28
    .end packed-switch

    :pswitch_data_2c
    .packed-switch 0x4
        :pswitch_29
    .end packed-switch

    :pswitch_data_2d
    .packed-switch 0x47
        :pswitch_2a
    .end packed-switch
.end method

.method public parseKiCResponse(Ljava/lang/String;Ljava/lang/String;)Z
    .locals 3

    .line 984
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x54

    add-int/lit8 v0, v0, -0x1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    if-eqz v0, :cond_0

    .line 969
    const/16 v0, 0x46

    goto :goto_0

    :cond_0
    const/16 v0, 0x4a

    :goto_0
    const-string v1, ""

    const/4 v2, 0x0

    packed-switch v0, :pswitch_data_0

    .line 968
    iput-object p2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    .line 969
    invoke-virtual {p1, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    :goto_1
    goto :goto_2

    .line 968
    :pswitch_0
    iput-object p2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    .line 969
    invoke-virtual {p1, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/16 v1, 0x34

    :try_start_0
    div-int/2addr v1, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_1

    goto :goto_1

    .line 984
    :catchall_0
    move-exception p1

    throw p1

    .line 972
    :goto_2
    :try_start_1
    new-instance v0, Lcom/google/gson/Gson;

    invoke-direct {v0}, Lcom/google/gson/Gson;-><init>()V

    .line 973
    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 975
    const-class v1, Lcom/visa/vac/tc/emvconverter/model/PostRest;

    invoke-virtual {v0, p1, v1}, Lcom/google/gson/Gson;->fromJson(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/visa/vac/tc/emvconverter/model/PostRest;

    .line 977
    invoke-virtual {p0, p1, p2}, Lcom/visa/vac/tc/emvconverter/CAL;->parseKiCResponse(Lcom/visa/vac/tc/emvconverter/model/PostRest;Ljava/lang/String;)Z

    move-result p1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 984
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p2, p2, 0x17

    add-int/lit8 p2, p2, -0x1

    sub-int/2addr p2, v2

    add-int/lit8 p2, p2, -0x1

    rem-int/lit16 v0, p2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p2, p2, 0x2

    return p1

    .line 979
    :catch_0
    move-exception p1

    .line 980
    invoke-virtual {p0, p1}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 981
    invoke-virtual {p1}, Ljava/lang/Throwable;->printStackTrace()V

    .line 984
    :cond_1
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 p2, p1, 0x1d

    and-int/lit8 v0, p1, 0x1d

    or-int/2addr p2, v0

    shl-int/lit8 p2, p2, 0x1

    and-int/lit8 v0, p1, -0x1e

    not-int p1, p1

    and-int/lit8 p1, p1, 0x1d

    or-int/2addr p1, v0

    sub-int/2addr p2, p1

    rem-int/lit16 p1, p2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p2, p2, 0x2

    if-eqz p2, :cond_2

    .line 969
    const/16 p1, 0xc

    goto :goto_3

    :cond_2
    const/16 p1, 0x35

    :goto_3
    packed-switch p1, :pswitch_data_1

    .line 984
    goto :goto_4

    :pswitch_1
    return v2

    :goto_4
    const/4 p1, 0x0

    :try_start_2
    throw p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x46
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x35
        :pswitch_1
    .end packed-switch
.end method

.method public removeCandidate()V
    .locals 5

    .line 677
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x43

    xor-int/lit8 v0, v0, 0x43

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v1, v0

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    const/16 v0, 0x49

    if-nez v1, :cond_0

    .line 667
    const/16 v1, 0x28

    goto :goto_0

    :cond_0
    move v1, v0

    :goto_0
    const/4 v2, 0x0

    const-string v3, "CardNotFound"

    const-string v4, "emv.tx.cal.ErrorCode"

    packed-switch v1, :pswitch_data_0

    .line 666
    invoke-static {v4, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 667
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/AbstractCollection;->size()I

    move-result v1

    goto :goto_3

    .line 666
    :pswitch_0
    invoke-static {v4, v3}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 667
    sget-object v1, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/AbstractCollection;->size()I

    move-result v1

    if-lez v1, :cond_1

    const/4 v1, 0x7

    goto :goto_1

    :cond_1
    const/16 v1, 0x5e

    :goto_1
    packed-switch v1, :pswitch_data_1

    :goto_2
    goto :goto_5

    :goto_3
    const/16 v3, 0x5a

    :try_start_0
    div-int/2addr v3, v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-lez v1, :cond_2

    const/16 v1, 0x58

    goto :goto_4

    :cond_2
    const/16 v1, 0xc

    :goto_4
    packed-switch v1, :pswitch_data_2

    goto :goto_2

    .line 677
    :pswitch_1
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, v1, 0x49

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    not-int v0, v0

    sub-int/2addr v3, v0

    add-int/lit8 v3, v3, -0x1

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_3

    .line 668
    :cond_3
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$200:Ljava/util/ArrayList;

    invoke-virtual {v0, v2}, Ljava/util/AbstractList;->remove(I)Ljava/lang/Object;

    .line 669
    const-string v0, "emv.ngse.Priority"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 670
    const-string v0, "CEID"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 671
    const-string v0, "emv.card.SvID"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 672
    invoke-static {}, Lcom/visa/vac/tc/emvconverter/TagDataList;->BuildConfig()V

    .line 673
    const-string v0, "svIDCDO.SvIDGroup"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 674
    const-string v0, "emv.ngse.Label"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 675
    const-string v0, "emv.ngse.SvIDCDO.LegacyKernelID"

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a(Ljava/lang/String;)V

    .line 676
    sget-object v0, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->clear()V

    .line 677
    sget-object v0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    const-string v1, "emv.duplicate"

    invoke-static {v1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v1, v0, 0x48

    shl-int/lit8 v1, v1, 0x1

    xor-int/lit8 v0, v0, 0x48

    sub-int/2addr v1, v0

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_4

    :cond_4
    :goto_5
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x35

    xor-int/lit8 v0, v0, 0x35

    or-int/2addr v0, v1

    xor-int v2, v1, v0

    and-int/2addr v0, v1

    shl-int/lit8 v0, v0, 0x1

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    return-void

    :catchall_0
    move-exception v0

    throw v0

    :pswitch_data_0
    .packed-switch 0x49
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x7
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x58
        :pswitch_1
    .end packed-switch
.end method

.method public runScript(Lcom/visa/vac/tc/emvconverter/EmvReader;)Ljava/lang/String;
    .locals 9

    .line 1587
    nop

    .line 1557
    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    .line 1558
    new-instance p1, Ljava/lang/StringBuilder;

    const-string v0, "************ _____________******************* SE Script for "

    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object p1

    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 1560
    nop

    .line 1562
    const/16 p1, 0x5d

    const/4 v0, 0x0

    const/4 v1, 0x1

    :try_start_0
    iget-object v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2

    if-eqz v2, :cond_0

    .line 1587
    move v3, p1

    goto :goto_0

    :cond_0
    const/16 v3, 0x1a

    :goto_0
    packed-switch v3, :pswitch_data_0

    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v3, v3, 0x58

    sub-int/2addr v3, v1

    rem-int/lit16 v4, v3, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_1

    const/16 v3, 0x20

    goto :goto_1

    :cond_1
    const/16 v3, 0x8

    :goto_1
    packed-switch v3, :pswitch_data_1

    goto/16 :goto_5

    .line 1562
    :pswitch_0
    :try_start_1
    iget-object v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_2

    if-eqz v3, :cond_2

    .line 1587
    const/16 v3, 0x3a

    goto :goto_2

    :cond_2
    const/16 v3, 0x26

    :goto_2
    packed-switch v3, :pswitch_data_2

    goto/16 :goto_4

    :pswitch_1
    and-int/lit8 v3, v4, 0x49

    or-int/lit8 v4, v4, 0x49

    and-int v5, v3, v4

    or-int/2addr v3, v4

    add-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_3

    .line 1562
    :cond_3
    :try_start_2
    invoke-virtual {p0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    const/4 v3, 0x0

    if-nez v2, :cond_4

    .line 1587
    move v2, v1

    goto :goto_3

    :cond_4
    move v2, v3

    :goto_3
    packed-switch v2, :pswitch_data_3

    goto :goto_4

    .line 1565
    :pswitch_2
    iget-object v2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    invoke-virtual {p0, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->getTerminalData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/visa/vac/tc/emvconverter/ApduScript;
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_2

    .line 1566
    :try_start_3
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getOperation()Ljava/lang/String;

    move-result-object v4

    .line 1567
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v5

    const-string v6, "operation"

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    new-array v7, v1, [Ljava/lang/Class;

    const-class v8, Lcom/visa/vac/tc/emvconverter/ApduScript;

    aput-object v8, v7, v3

    invoke-virtual {v5, v6, v7}, Ljava/lang/Class;->getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;

    move-result-object v5

    .line 1568
    new-array v6, v1, [Ljava/lang/Object;

    aput-object v2, v6, v3

    invoke-virtual {v5, p0, v6}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Byte;

    invoke-virtual {v5}, Ljava/lang/Number;->byteValue()B

    move-result v5

    .line 1569
    const-string v6, "************ _____________******************* Done Operation: "

    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v6, v4}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_0

    .line 1587
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v6, v4, 0x37

    shl-int/2addr v6, v1

    and-int/lit8 v7, v4, -0x38

    not-int v4, v4

    and-int/lit8 v4, v4, 0x37

    or-int/2addr v4, v7

    neg-int v4, v4

    xor-int v7, v6, v4

    and-int/2addr v4, v6

    shl-int/2addr v4, v1

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v7, v7, 0x2

    if-nez v7, :cond_6

    move v3, v1

    goto :goto_8

    .line 1570
    :catch_0
    move-exception v3

    goto :goto_7

    .line 1563
    :goto_4
    :pswitch_3
    nop

    .line 1587
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, p1, 0x4b

    shl-int/lit8 v3, v2, 0x1

    and-int/lit8 p1, p1, 0x4b

    not-int p1, p1

    and-int/2addr p1, v2

    neg-int p1, p1

    or-int v2, v3, p1

    shl-int/lit8 v1, v2, 0x1

    xor-int/2addr p1, v3

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    return-object v0

    :goto_5
    :try_start_4
    invoke-super {v0}, Ljava/lang/Object;->hashCode()I

    throw v0
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_1
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    .line 1570
    :catch_1
    move-exception v2

    move-object v3, v2

    goto :goto_6

    :catch_2
    move-exception v3

    :goto_6
    move-object v2, v0

    .line 1571
    :goto_7
    invoke-virtual {p0, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 1572
    invoke-virtual {v3}, Ljava/lang/Throwable;->getCause()Ljava/lang/Throwable;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v3

    const-string v4, "TAG_LOST"

    invoke-virtual {v3, v4}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    .line 1573
    const-string v3, "CardTimeOut"

    invoke-virtual {p0, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 1587
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v4, v3, 0x37

    and-int/lit8 v3, v3, 0x37

    shl-int/2addr v3, v1

    xor-int v5, v4, v3

    and-int/2addr v3, v4

    shl-int/2addr v3, v1

    add-int/2addr v5, v3

    rem-int/lit16 v3, v5, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_5

    .line 1576
    :cond_5
    const/4 v5, -0x1

    .line 1587
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v4, v3, 0x1f

    and-int/lit8 v6, v3, 0x1f

    or-int/2addr v4, v6

    shl-int/2addr v4, v1

    not-int v6, v6

    or-int/lit8 v3, v3, 0x1f

    and-int/2addr v3, v6

    sub-int/2addr v4, v3

    rem-int/lit16 v3, v4, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_6

    .line 1580
    :cond_6
    :goto_8
    const/16 v3, 0x5a

    if-ne v5, v3, :cond_7

    .line 1587
    const/16 v3, 0x4a

    goto :goto_9

    :cond_7
    const/16 v3, 0x43

    :goto_9
    packed-switch v3, :pswitch_data_4

    .line 1582
    const/16 p1, -0x5b

    if-ne v5, p1, :cond_9

    goto :goto_a

    .line 1587
    :pswitch_4
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v3, 0x5d

    xor-int/2addr p1, v3

    or-int/2addr p1, v4

    or-int v3, v4, p1

    shl-int/2addr v3, v1

    xor-int/2addr p1, v4

    sub-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_8

    .line 1581
    :cond_8
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getPos_action()Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    .line 1587
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v2, p1, -0x2e

    not-int v3, p1

    and-int/lit8 v3, v3, 0x2d

    or-int/2addr v2, v3

    and-int/lit8 p1, p1, 0x2d

    shl-int/2addr p1, v1

    neg-int p1, p1

    neg-int p1, p1

    not-int p1, p1

    sub-int/2addr v2, p1

    sub-int/2addr v2, v1

    rem-int/lit16 p1, v2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_b

    goto :goto_d

    :goto_a
    const/16 p1, 0x23

    goto :goto_b

    :cond_9
    const/16 p1, 0xd

    :goto_b
    packed-switch p1, :pswitch_data_5

    .line 1585
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getException_action()Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    goto :goto_c

    .line 1587
    :pswitch_5
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v3, p1, -0x38

    not-int v4, p1

    and-int/lit8 v4, v4, 0x37

    or-int/2addr v3, v4

    and-int/lit8 p1, p1, 0x37

    shl-int/2addr p1, v1

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_a

    .line 1583
    :cond_a
    invoke-virtual {v2}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getNeg_action()Ljava/lang/String;

    move-result-object p1

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    .line 1587
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, p1, 0x6f

    shl-int/lit8 v1, v2, 0x1

    xor-int/lit8 p1, p1, 0x6f

    sub-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_b

    goto :goto_d

    :goto_c
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, p1, 0x31

    or-int/lit8 p1, p1, 0x31

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_b

    :cond_b
    :goto_d
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->$$a:Ljava/lang/String;

    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v2, v1, 0x21

    shl-int/lit8 v3, v2, 0x1

    and-int/lit8 v1, v1, 0x21

    not-int v1, v1

    and-int/2addr v1, v2

    neg-int v1, v1

    and-int v2, v3, v1

    or-int/2addr v1, v3

    add-int/2addr v2, v1

    rem-int/lit16 v1, v2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_c

    const/16 v1, 0x47

    goto :goto_e

    :cond_c
    const/16 v1, 0x16

    :goto_e
    packed-switch v1, :pswitch_data_6

    goto :goto_f

    :pswitch_6
    return-object p1

    :goto_f
    :try_start_5
    invoke-super {v0}, Ljava/lang/Object;->hashCode()I

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x1a
        :pswitch_3
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x8
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x3a
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x4a
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x23
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x16
        :pswitch_6
    .end packed-switch
.end method

.method public saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;Ljava/lang/String;)Landroid/util/ArrayMap;
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/visa/vac/tc/emvconverter/BERTLV;",
            "Ljava/lang/String;",
            ")",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 597
    nop

    .line 593
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x6f

    not-int v2, v1

    or-int/lit8 v0, v0, 0x6f

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    add-int/2addr v0, v1

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 586
    move v0, v2

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    const/4 v3, 0x0

    packed-switch v0, :pswitch_data_0

    .line 565
    nop

    .line 566
    iget-short v0, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    .line 573
    iget-object v4, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    array-length v4, v4

    if-nez v4, :cond_2

    goto :goto_2

    .line 565
    :pswitch_0
    nop

    .line 566
    iget-short v0, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    .line 573
    iget-object v4, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    array-length v4, v4

    const/16 v5, 0x22

    :try_start_0
    div-int/2addr v5, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v4, :cond_1

    .line 586
    const/16 v4, 0x1b

    goto :goto_1

    :cond_1
    const/16 v4, 0x62

    :goto_1
    packed-switch v4, :pswitch_data_1

    goto :goto_4

    .line 593
    :catchall_0
    move-exception p1

    throw p1

    .line 586
    :goto_2
    move v4, v2

    goto :goto_3

    :cond_2
    move v4, v1

    :goto_3
    packed-switch v4, :pswitch_data_2

    :goto_4
    goto :goto_6

    .line 575
    :pswitch_1
    iget-short p1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    invoke-static {p1, v3, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(S[BLjava/lang/String;)V

    .line 576
    sget-object p1, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance:Landroid/util/ArrayMap;

    .line 597
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p2, 0x4f

    xor-int/lit8 p2, p2, 0x4f

    or-int/2addr p2, v0

    add-int/2addr v0, p2

    rem-int/lit16 p2, v0, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_3

    .line 586
    move v2, v1

    goto :goto_5

    :cond_3
    nop

    :goto_5
    packed-switch v2, :pswitch_data_3

    .line 597
    return-object p1

    :pswitch_2
    :try_start_1
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    .line 579
    :goto_6
    sget-object v4, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "."

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 586
    move v4, v1

    goto :goto_7

    :cond_4
    move v4, v2

    :goto_7
    packed-switch v4, :pswitch_data_4

    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x4f

    not-int v6, v5

    or-int/lit8 v4, v4, 0x4f

    and-int/2addr v4, v6

    shl-int/2addr v5, v2

    add-int/2addr v4, v5

    rem-int/lit16 v5, v4, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_5

    .line 580
    :cond_5
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    move-result v4

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v5

    array-length v5, v5

    if-eq v4, v5, :cond_6

    .line 586
    move v4, v1

    goto :goto_8

    :cond_6
    move v4, v2

    :goto_8
    packed-switch v4, :pswitch_data_5

    goto :goto_b

    .line 597
    :pswitch_3
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, v4, 0x4d

    xor-int/lit8 v4, v4, 0x4d

    or-int/2addr v4, v5

    neg-int v4, v4

    neg-int v4, v4

    not-int v4, v4

    sub-int/2addr v5, v4

    sub-int/2addr v5, v2

    rem-int/lit16 v4, v5, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_7

    .line 586
    move v4, v2

    goto :goto_9

    :cond_7
    move v4, v1

    :goto_9
    const-string v5, "Response2 length doesn\'t match expected!!"

    packed-switch v4, :pswitch_data_6

    .line 581
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    goto :goto_a

    :pswitch_4
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 597
    goto :goto_b

    .line 581
    :goto_a
    :try_start_2
    throw v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 597
    :catchall_2
    move-exception p1

    throw p1

    .line 583
    :goto_b
    iget-short v4, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    iget-object v5, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    invoke-static {v4, v5, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getTerminalData(S[BLjava/lang/String;)V

    .line 581
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, p2, -0x70

    not-int v5, p2

    and-int/lit8 v5, v5, 0x6f

    or-int/2addr v4, v5

    and-int/lit8 p2, p2, 0x6f

    shl-int/2addr p2, v2

    and-int v5, v4, p2

    or-int/2addr p2, v4

    add-int/2addr v5, p2

    rem-int/lit16 p2, v5, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_8

    .line 597
    :cond_8
    nop

    .line 585
    :pswitch_5
    sget-object p2, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {p2, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_9

    .line 586
    move p2, v2

    goto :goto_c

    :cond_9
    move p2, v1

    :goto_c
    const/16 v4, 0x10

    packed-switch p2, :pswitch_data_7

    :goto_d
    goto/16 :goto_14

    .line 573
    :pswitch_6
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v5, p2, 0x23

    and-int/lit8 v6, p2, 0x23

    or-int/2addr v5, v6

    shl-int/2addr v5, v2

    not-int v6, v6

    or-int/lit8 p2, p2, 0x23

    and-int/2addr p2, v6

    neg-int p2, p2

    not-int p2, p2

    sub-int/2addr v5, p2

    sub-int/2addr v5, v2

    rem-int/lit16 p2, v5, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_a

    .line 586
    move p2, v4

    goto :goto_e

    :cond_a
    const/4 p2, 0x4

    :goto_e
    packed-switch p2, :pswitch_data_8

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    move-result p2

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v5

    array-length v5, v5

    const/16 v6, 0xd

    if-eq p2, v5, :cond_b

    goto :goto_f

    :pswitch_7
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object p1

    array-length p1, p1

    :try_start_3
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 573
    :catchall_3
    move-exception p1

    throw p1

    .line 586
    :goto_f
    move p2, v6

    goto :goto_10

    :cond_b
    const/16 p2, 0x58

    :goto_10
    packed-switch p2, :pswitch_data_9

    goto :goto_12

    .line 581
    :pswitch_8
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v5, p2, 0xb

    xor-int/lit8 p2, p2, 0xb

    or-int/2addr p2, v5

    neg-int p2, p2

    neg-int p2, p2

    and-int v7, v5, p2

    or-int/2addr p2, v5

    add-int/2addr v7, p2

    rem-int/lit16 p2, v7, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v7, v7, 0x2

    if-eqz v7, :cond_c

    .line 587
    :cond_c
    const-string p2, "Response1 length doesn\'t match expected!!"

    invoke-static {p2}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 581
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v5, 0x45

    and-int/lit8 v7, p2, -0x46

    not-int v8, p2

    and-int/2addr v8, v5

    or-int/2addr v7, v8

    and-int/2addr p2, v5

    shl-int/2addr p2, v2

    and-int v5, v7, p2

    or-int/2addr p2, v7

    add-int/2addr v5, p2

    rem-int/lit16 p2, v5, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_d

    .line 586
    const/16 v6, 0x16

    goto :goto_11

    :cond_d
    nop

    :goto_11
    packed-switch v6, :pswitch_data_a

    .line 581
    goto :goto_12

    .line 597
    :pswitch_9
    nop

    .line 589
    :goto_12
    iget-short p2, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    iget-object v5, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    invoke-static {p2, v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 586
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v5, p2, 0x19

    and-int/lit8 v6, p2, 0x19

    or-int/2addr v5, v6

    shl-int/2addr v5, v2

    and-int/lit8 v6, p2, -0x1a

    not-int p2, p2

    and-int/lit8 p2, p2, 0x19

    or-int/2addr p2, v6

    neg-int p2, p2

    and-int v6, v5, p2

    or-int/2addr p2, v5

    add-int/2addr v6, p2

    rem-int/lit16 p2, v6, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v6, v6, 0x2

    if-eqz v6, :cond_e

    move p2, v1

    goto :goto_13

    :cond_e
    const/16 p2, 0x53

    :goto_13
    packed-switch p2, :pswitch_data_b

    goto/16 :goto_d

    .line 597
    :pswitch_a
    nop

    .line 591
    :goto_14
    iget-byte p2, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData:B

    if-ne p2, v2, :cond_f

    .line 586
    const/16 p2, 0x1f

    goto :goto_15

    :cond_f
    const/16 p2, 0x1e

    :goto_15
    packed-switch p2, :pswitch_data_c

    :goto_16
    goto/16 :goto_1e

    .line 597
    :pswitch_b
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v5, p2, 0x33

    and-int/lit8 p2, p2, 0x33

    shl-int/2addr p2, v2

    add-int/2addr v5, p2

    rem-int/lit16 p2, v5, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_10

    .line 592
    :cond_10
    iget-object p1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessKernel:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    .line 581
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v5, 0x5

    and-int/lit8 v6, p2, -0x6

    not-int v7, p2

    and-int/2addr v7, v5

    or-int/2addr v6, v7

    and-int/2addr p2, v5

    shl-int/2addr p2, v2

    xor-int v5, v6, p2

    and-int/2addr p2, v6

    shl-int/2addr p2, v2

    add-int/2addr v5, p2

    rem-int/lit16 p2, v5, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v5, v5, 0x2

    if-nez v5, :cond_11

    .line 586
    goto :goto_17

    :cond_11
    const/16 v4, 0x27

    :goto_17
    packed-switch v4, :pswitch_data_d

    .line 597
    :pswitch_c
    goto :goto_19

    .line 581
    :goto_18
    :pswitch_d
    nop

    .line 592
    :goto_19
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_12

    .line 586
    move p2, v1

    goto :goto_1a

    :cond_12
    move p2, v2

    :goto_1a
    packed-switch p2, :pswitch_data_e

    goto :goto_16

    .line 581
    :pswitch_e
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v4, p2, 0x78

    or-int/lit8 p2, p2, 0x78

    add-int/2addr v4, p2

    xor-int/lit8 p2, v4, -0x1

    and-int/lit8 v4, v4, -0x1

    shl-int/2addr v4, v2

    add-int/2addr p2, v4

    rem-int/lit16 v4, p2, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_13

    .line 586
    move p2, v2

    goto :goto_1b

    :cond_13
    move p2, v1

    :goto_1b
    packed-switch p2, :pswitch_data_f

    .line 581
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 593
    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;Ljava/lang/String;)Landroid/util/ArrayMap;

    goto :goto_1d

    .line 592
    :pswitch_f
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 593
    invoke-virtual {p0, p2, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;Ljava/lang/String;)Landroid/util/ArrayMap;

    .line 581
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, p2, 0x2f

    or-int/lit8 p2, p2, 0x2f

    add-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_14

    .line 586
    const/16 p2, 0x59

    goto :goto_1c

    :cond_14
    const/16 p2, 0x5e

    :goto_1c
    packed-switch p2, :pswitch_data_10

    .line 581
    goto :goto_18

    .line 593
    :goto_1d
    :try_start_4
    invoke-super {v3}, Ljava/lang/Object;->hashCode()I

    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_4

    .line 581
    :catchall_4
    move-exception p1

    throw p1

    .line 597
    :goto_1e
    sget-object p1, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance:Landroid/util/ArrayMap;

    .line 581
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p2, 0xb

    or-int/lit8 p2, p2, 0xb

    and-int v4, v0, p2

    or-int/2addr p2, v0

    add-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_15

    .line 586
    move v2, v1

    goto :goto_1f

    :cond_15
    nop

    :goto_1f
    packed-switch v2, :pswitch_data_11

    .line 597
    return-object p1

    .line 581
    :pswitch_10
    :try_start_5
    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_5

    :catchall_5
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1b
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x1
        :pswitch_5
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x1
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x10
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0xd
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0xd
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x53
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x1f
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x10
        :pswitch_d
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_e
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x0
        :pswitch_f
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x5e
        :pswitch_c
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch
.end method

.method public saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/visa/vac/tc/emvconverter/BERTLV;",
            "S)",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;"
        }
    .end annotation

    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 560
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x75

    and-int/lit8 v0, v0, 0x75

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    neg-int v0, v0

    neg-int v0, v0

    xor-int v3, v1, v0

    and-int/2addr v0, v1

    shl-int/2addr v0, v2

    add-int/2addr v3, v0

    rem-int/lit16 v0, v3, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_0

    .line 543
    :cond_0
    nop

    .line 544
    iget-short v0, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    .line 546
    sget-object v1, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v1

    const/4 v3, 0x0

    if-eqz v1, :cond_1

    .line 556
    move v1, v2

    goto :goto_0

    :cond_1
    move v1, v3

    :goto_0
    packed-switch v1, :pswitch_data_0

    .line 560
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v4, v1, 0x7

    shl-int/2addr v4, v2

    xor-int/lit8 v1, v1, 0x7

    sub-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_2

    .line 548
    :cond_2
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    move-result v1

    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v4

    array-length v4, v4

    const/16 v5, 0x27

    if-ne v1, v4, :cond_3

    .line 556
    const/16 v1, 0x4b

    goto :goto_1

    :cond_3
    move v1, v5

    :goto_1
    packed-switch v1, :pswitch_data_1

    .line 560
    sget v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v4, v1, 0x27

    xor-int/2addr v1, v5

    or-int/2addr v1, v4

    add-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_4

    .line 549
    :cond_4
    invoke-virtual {p1}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    move-result v1

    iget-short v4, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->BuildConfig:S

    not-int v4, v4

    sub-int/2addr v1, v4

    sub-int/2addr v1, v2

    if-ne v1, p2, :cond_c

    .line 553
    iget-short p2, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessConfiguration:S

    iget-object v1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getInstance:[B

    invoke-static {p2, v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    .line 560
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p2, p2, 0x16

    sub-int/2addr p2, v2

    rem-int/lit16 v1, p2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_5

    .line 555
    :cond_5
    :pswitch_0
    iget-byte p2, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTerminalData:B

    if-ne p2, v2, :cond_6

    .line 556
    const/16 p2, 0x35

    goto :goto_2

    :cond_6
    const/16 p2, 0x31

    :goto_2
    packed-switch p2, :pswitch_data_2

    :goto_3
    goto/16 :goto_a

    .line 560
    :pswitch_1
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, p2, 0x73

    or-int/lit8 p2, p2, 0x73

    xor-int v4, v1, p2

    and-int/2addr p2, v1

    shl-int/2addr p2, v2

    add-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_7

    .line 556
    move p2, v3

    goto :goto_4

    :cond_7
    move p2, v2

    :goto_4
    iget-object p1, p1, Lcom/visa/vac/tc/emvconverter/BERTLV;->ContactlessKernel:Ljava/util/ArrayList;

    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object p1

    packed-switch p2, :pswitch_data_3

    goto :goto_5

    :pswitch_2
    const/16 p2, 0x51

    :try_start_0
    div-int/2addr p2, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_5

    .line 560
    :catchall_0
    move-exception p1

    throw p1

    :goto_5
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p2, p2, 0x1f

    rem-int/lit16 v1, p2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_8

    .line 556
    move p2, v3

    goto :goto_6

    :cond_8
    move p2, v2

    :goto_6
    packed-switch p2, :pswitch_data_4

    .line 560
    :goto_7
    :pswitch_3
    nop

    .line 556
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result p2

    if-eqz p2, :cond_9

    move p2, v2

    goto :goto_8

    :cond_9
    move p2, v3

    :goto_8
    packed-switch p2, :pswitch_data_5

    goto :goto_3

    .line 560
    :pswitch_4
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, p2, 0x79

    not-int v4, v1

    or-int/lit8 p2, p2, 0x79

    and-int/2addr p2, v4

    shl-int/2addr v1, v2

    or-int v4, p2, v1

    shl-int/2addr v4, v2

    xor-int/2addr p2, v1

    sub-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_a

    .line 556
    :cond_a
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/visa/vac/tc/emvconverter/BERTLV;

    .line 557
    invoke-virtual {p0, p2, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;Ljava/lang/String;)Landroid/util/ArrayMap;

    .line 560
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, p2, 0x59

    and-int/lit8 p2, p2, 0x59

    or-int/2addr p2, v1

    shl-int/2addr p2, v2

    neg-int v1, v1

    not-int v1, v1

    sub-int/2addr p2, v1

    sub-int/2addr p2, v2

    rem-int/lit16 v1, p2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_b

    .line 556
    move p2, v2

    goto :goto_9

    :cond_b
    move p2, v3

    :goto_9
    packed-switch p2, :pswitch_data_6

    .line 560
    goto :goto_7

    :goto_a
    sget-object p1, Lcom/visa/vac/tc/emvconverter/TagDataList;->getInstance:Landroid/util/ArrayMap;

    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v0, p2, 0x53

    xor-int/lit8 p2, p2, 0x53

    or-int/2addr p2, v0

    neg-int p2, p2

    neg-int p2, p2

    and-int v1, v0, p2

    or-int/2addr p2, v0

    add-int/2addr v1, p2

    rem-int/lit16 p2, v1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    return-object p1

    .line 550
    :cond_c
    :pswitch_5
    const-string p1, "Response0 length doesn\'t match expected!!"

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 551
    new-instance p1, Ljava/lang/Exception;

    const-string p2, "Tag\'s Length doesn\'t match Real Length"

    invoke-direct {p1, p2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x27
        :pswitch_5
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x35
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x1
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x1
        :pswitch_3
    .end packed-switch
.end method

.method public saveCardResponse(S[B)V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 538
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v1, v0, 0x53

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    xor-int/lit8 v0, v0, 0x53

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    .line 537
    :cond_0
    sget-object v0, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration:Landroid/util/ArrayMap;

    invoke-static {p1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 538
    const/16 v0, 0x58

    goto :goto_0

    :cond_1
    const/16 v0, 0x38

    :goto_0
    const/4 v1, 0x0

    packed-switch v0, :pswitch_data_0

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v0, v0, 0x48

    sub-int/2addr v0, v2

    rem-int/lit16 v3, v0, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_2

    const/16 v0, 0x11

    goto :goto_1

    :cond_2
    const/16 v0, 0x5b

    :goto_1
    invoke-static {p1, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->ContactlessConfiguration(S[B)V

    packed-switch v0, :pswitch_data_1

    goto :goto_4

    :pswitch_0
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 p2, p1, 0x63

    not-int v0, p2

    or-int/lit8 p1, p1, 0x63

    and-int/2addr p1, v0

    shl-int/2addr p2, v2

    not-int p2, p2

    sub-int/2addr p1, p2

    sub-int/2addr p1, v2

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_3

    :cond_3
    :pswitch_1
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 p1, p1, 0x51

    sub-int/2addr p1, v2

    xor-int/lit8 p2, p1, -0x1

    and-int/lit8 p1, p1, -0x1

    shl-int/2addr p1, v2

    add-int/2addr p2, p1

    rem-int/lit16 p1, p2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_4

    goto :goto_2

    :cond_4
    const/4 v2, 0x0

    :goto_2
    packed-switch v2, :pswitch_data_2

    goto :goto_3

    :pswitch_2
    return-void

    :goto_3
    :try_start_0
    invoke-super {v1}, Ljava/lang/Object;->hashCode()I

    throw v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :goto_4
    :try_start_1
    throw v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :catchall_1
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x38
        :pswitch_1
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x5b
        :pswitch_0
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch
.end method

.method public sendCALLogging(Ljava/lang/Exception;)V
    .locals 2

    .line 2954
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, v0, 0x2f

    and-int/lit8 v0, v0, 0x2f

    shl-int/lit8 v0, v0, 0x1

    not-int v0, v0

    sub-int/2addr v1, v0

    add-int/lit8 v1, v1, -0x1

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    const/16 v0, 0x33

    goto :goto_0

    :cond_0
    const/16 v0, 0x4d

    :goto_0
    packed-switch v0, :pswitch_data_0

    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    invoke-interface {v0, p1}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->pushLogging(Ljava/lang/Exception;)V

    goto :goto_1

    :pswitch_0
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    invoke-interface {v0, p1}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->pushLogging(Ljava/lang/Exception;)V

    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :goto_1
    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x33
        :pswitch_0
    .end packed-switch
.end method

.method public sendReadRecord(Lcom/visa/vac/tc/emvconverter/ApduScript;[B)B
    .locals 27
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/Exception;
        }
    .end annotation

    .line 526
    move-object/from16 v1, p0

    move-object/from16 v0, p2

    const-string v2, "\n\n\n"

    const-string v3, "\n\n\n\n "

    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v5, v4, 0x23

    const/4 v6, 0x1

    shl-int/2addr v5, v6

    and-int/lit8 v7, v4, -0x24

    not-int v8, v4

    const/16 v9, 0x23

    and-int/2addr v8, v9

    or-int/2addr v7, v8

    neg-int v7, v7

    or-int v8, v5, v7

    shl-int/2addr v8, v6

    xor-int/2addr v5, v7

    sub-int/2addr v8, v5

    rem-int/lit16 v5, v8, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v5, 0x2

    rem-int/2addr v8, v5

    if-eqz v8, :cond_0

    .line 433
    :cond_0
    nop

    .line 434
    nop

    .line 435
    const/4 v7, 0x0

    if-eqz v0, :cond_1

    .line 523
    move v8, v6

    goto :goto_0

    :cond_1
    move v8, v7

    :goto_0
    packed-switch v8, :pswitch_data_0

    const/16 v11, -0x5b

    goto/16 :goto_39

    .line 526
    :pswitch_0
    xor-int/lit8 v8, v4, 0x2d

    and-int/lit8 v4, v4, 0x2d

    shl-int/2addr v4, v6

    add-int/2addr v8, v4

    rem-int/lit16 v4, v8, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v8, v5

    if-eqz v8, :cond_2

    .line 523
    move v8, v6

    goto :goto_1

    :cond_2
    move v8, v7

    :goto_1
    packed-switch v8, :pswitch_data_1

    .line 436
    move v8, v7

    goto :goto_2

    :pswitch_1
    move v8, v6

    .line 526
    :goto_2
    const/16 v13, 0x77

    xor-int/lit8 v14, v4, 0x77

    and-int/lit8 v15, v4, 0x77

    or-int/2addr v14, v15

    shl-int/2addr v14, v6

    and-int/lit8 v15, v4, -0x78

    not-int v4, v4

    and-int/2addr v4, v13

    or-int/2addr v4, v15

    sub-int/2addr v14, v4

    rem-int/lit16 v4, v14, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v5

    if-nez v14, :cond_3

    .line 523
    move v4, v6

    goto :goto_3

    :cond_3
    move v4, v7

    :goto_3
    packed-switch v4, :pswitch_data_2

    .line 526
    :pswitch_2
    nop

    .line 444
    move v13, v6

    const/16 v4, -0x5b

    :goto_4
    const/16 v9, 0x2a

    const/16 v16, 0x2f

    :try_start_0
    array-length v10, v0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_3

    if-ge v8, v10, :cond_4

    .line 523
    const/16 v10, 0x40

    goto :goto_5

    :cond_4
    const/16 v10, 0x23

    :goto_5
    const/16 v17, -0x1

    packed-switch v10, :pswitch_data_3

    :goto_6
    move v7, v13

    goto/16 :goto_30

    .line 436
    :pswitch_3
    sget v10, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v18, v10, -0x66

    not-int v11, v10

    and-int/lit8 v11, v11, 0x65

    or-int v11, v18, v11

    and-int/lit8 v10, v10, 0x65

    shl-int/2addr v10, v6

    neg-int v10, v10

    neg-int v10, v10

    and-int v18, v11, v10

    or-int/2addr v10, v11

    add-int v10, v18, v10

    rem-int/lit16 v11, v10, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v10, v5

    if-eqz v10, :cond_5

    .line 445
    :cond_5
    :try_start_1
    aget-byte v10, v0, v8
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_3

    ushr-int/lit8 v15, v10, 0x3

    int-to-byte v15, v15

    and-int/lit8 v15, v15, 0x1f

    int-to-byte v15, v15

    .line 446
    if-lez v15, :cond_6

    .line 523
    move/from16 v19, v7

    goto :goto_7

    :cond_6
    move/from16 v19, v6

    :goto_7
    packed-switch v19, :pswitch_data_4

    move v5, v7

    goto/16 :goto_2e

    .line 526
    :pswitch_4
    and-int/lit8 v19, v11, -0x26

    not-int v12, v11

    const/16 v20, 0x25

    and-int v12, v20, v12

    or-int v12, v19, v12

    and-int/lit8 v19, v11, 0x25

    shl-int/lit8 v14, v19, 0x1

    not-int v14, v14

    sub-int/2addr v12, v14

    sub-int/2addr v12, v6

    rem-int/lit16 v14, v12, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v12, v5

    if-nez v12, :cond_7

    .line 523
    move v12, v6

    goto :goto_8

    :cond_7
    move v12, v7

    :goto_8
    packed-switch v12, :pswitch_data_5

    .line 526
    if-le v15, v9, :cond_9

    goto :goto_b

    .line 446
    :pswitch_5
    const/16 v12, 0x1e

    if-le v15, v12, :cond_8

    .line 523
    const/16 v12, 0x59

    goto :goto_9

    :cond_8
    const/16 v12, 0x58

    :goto_9
    packed-switch v12, :pswitch_data_6

    :goto_a
    goto :goto_d

    :pswitch_6
    move v5, v7

    goto/16 :goto_2e

    :goto_b
    const/16 v12, 0x28

    goto :goto_c

    :cond_9
    const/16 v12, 0x4e

    :goto_c
    packed-switch v12, :pswitch_data_7

    goto :goto_a

    .line 451
    :goto_d
    and-int/lit16 v10, v10, 0xf8

    and-int/lit8 v11, v10, 0x4

    not-int v12, v11

    or-int/lit8 v10, v10, 0x4

    and-int/2addr v10, v12

    xor-int v12, v10, v11

    and-int/2addr v10, v11

    or-int/2addr v10, v12

    int-to-byte v10, v10

    .line 453
    :try_start_2
    const-string v11, "LV.RCP_LIST"

    const-string v12, "%02X"

    new-array v14, v6, [Ljava/lang/Object;

    invoke-static {v10}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;

    move-result-object v10

    aput-object v10, v14, v7

    invoke-static {v12, v14}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v1, v11, v10}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 454
    and-int/lit8 v10, v8, 0x1

    or-int/lit8 v11, v8, 0x1

    add-int/2addr v10, v11

    aget-byte v10, v0, v10

    .line 456
    and-int/lit8 v12, v8, -0x3

    not-int v14, v8

    and-int/2addr v14, v5

    or-int/2addr v12, v14

    and-int/lit8 v14, v8, 0x2

    shl-int/2addr v14, v6

    or-int v19, v12, v14

    shl-int/lit8 v19, v19, 0x1

    xor-int/2addr v12, v14

    sub-int v19, v19, v12

    aget-byte v12, v0, v19

    .line 457
    invoke-static {v12}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v12

    const/16 v14, 0x10

    invoke-static {v12, v14}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I

    move-result v12
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_3

    .line 459
    if-eqz v10, :cond_a

    .line 523
    move v14, v7

    goto :goto_e

    :cond_a
    move v14, v6

    :goto_e
    packed-switch v14, :pswitch_data_8

    move v5, v7

    goto/16 :goto_2d

    .line 436
    :pswitch_7
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v19, v14, 0x7

    shl-int/lit8 v19, v19, 0x1

    xor-int/lit8 v14, v14, 0x7

    sub-int v14, v19, v14

    rem-int/lit16 v9, v14, 0x80

    sput v9, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/2addr v14, v5

    const/16 v21, 0x4d

    if-nez v14, :cond_b

    .line 523
    move/from16 v14, v21

    goto :goto_f

    :cond_b
    const/16 v14, 0x13

    :goto_f
    packed-switch v14, :pswitch_data_9

    .line 459
    if-ge v12, v10, :cond_d

    goto :goto_11

    .line 436
    :pswitch_8
    const/16 v14, 0x2f

    :try_start_3
    div-int/2addr v14, v7
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    if-ge v12, v10, :cond_c

    .line 523
    const/16 v14, 0x63

    goto :goto_10

    :cond_c
    move/from16 v14, v16

    :goto_10
    packed-switch v14, :pswitch_data_a

    goto :goto_13

    .line 436
    :catchall_0
    move-exception v0

    move-object v2, v0

    throw v2

    .line 523
    :goto_11
    move v14, v6

    goto :goto_12

    :cond_d
    move v14, v7

    :goto_12
    packed-switch v14, :pswitch_data_b

    :pswitch_9
    goto :goto_14

    :goto_13
    :pswitch_a
    move v5, v7

    goto/16 :goto_2d

    .line 464
    :goto_14
    nop

    .line 436
    xor-int/lit8 v14, v9, 0x73

    and-int/lit8 v22, v9, 0x73

    or-int v14, v14, v22

    shl-int/2addr v14, v6

    and-int/lit8 v22, v9, -0x74

    not-int v9, v9

    and-int/lit8 v9, v9, 0x73

    or-int v9, v22, v9

    neg-int v9, v9

    xor-int v22, v14, v9

    and-int/2addr v9, v14

    shl-int/2addr v9, v6

    add-int v9, v22, v9

    rem-int/lit16 v14, v9, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/2addr v9, v5

    if-eqz v9, :cond_e

    .line 523
    move v9, v7

    goto :goto_15

    :cond_e
    move v9, v6

    :goto_15
    packed-switch v9, :pswitch_data_c

    .line 526
    goto :goto_16

    .line 436
    :pswitch_b
    nop

    .line 464
    :goto_16
    move v9, v10

    :goto_17
    if-gt v10, v12, :cond_20

    .line 466
    :try_start_4
    const-string v14, "LV.RN_LIST"

    and-int/lit16 v11, v9, 0xff

    invoke-static {v11}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v1, v14, v11}, Lcom/visa/vac/tc/emvconverter/CAL;->setCalData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 467
    invoke-virtual/range {p1 .. p1}, Lcom/visa/vac/tc/emvconverter/ApduScript;->clone()Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v11

    .line 468
    new-instance v14, Lcom/visa/vac/tc/emvconverter/ApduCommand;
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_3

    :try_start_5
    invoke-virtual {v1, v11}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Lcom/visa/vac/tc/emvconverter/ApduScript;)Lcom/visa/vac/tc/emvconverter/ApduScript;

    move-result-object v7

    invoke-direct {v14, v7}, Lcom/visa/vac/tc/emvconverter/ApduCommand;-><init>(Lcom/visa/vac/tc/emvconverter/ApduScript;)V

    .line 469
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v23

    invoke-static/range {v23 .. v23}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 470
    iget-object v5, v1, Lcom/visa/vac/tc/emvconverter/CAL;->performTransaction:Lcom/visa/vac/tc/emvconverter/EmvReader;

    invoke-virtual {v14}, Lcom/visa/vac/tc/emvconverter/ApduCommand;->getCommand()[B

    move-result-object v7

    invoke-virtual {v5, v7}, Lcom/visa/vac/tc/emvconverter/EmvReader;->sendAndReceive([B)[B

    move-result-object v5

    .line 471
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/Utils;->getString([B)Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 472
    invoke-virtual {v1, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance([B)Ljava/lang/String;

    move-result-object v7

    .line 473
    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSW()[Ljava/lang/String;

    move-result-object v11
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_2

    .line 480
    if-eqz v7, :cond_f

    .line 523
    const/16 v14, 0x32

    goto :goto_18

    :cond_f
    const/16 v14, 0x42

    :goto_18
    const/16 v23, 0xd

    packed-switch v14, :pswitch_data_d

    :goto_19
    const/4 v5, 0x0

    goto/16 :goto_27

    .line 436
    :pswitch_c
    sget v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v24, v14, 0x18

    or-int/lit8 v14, v14, 0x18

    add-int v24, v24, v14

    add-int/lit8 v14, v24, -0x1

    rem-int/lit16 v6, v14, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v6, 0x2

    rem-int/2addr v14, v6

    if-nez v14, :cond_10

    .line 523
    const/16 v14, 0x41

    goto :goto_1a

    :cond_10
    const/16 v14, 0x23

    :goto_1a
    const/16 v25, 0x50

    packed-switch v14, :pswitch_data_e

    .line 480
    :try_start_6
    invoke-static {v11}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v11

    goto :goto_1c

    .line 436
    :pswitch_d
    invoke-static {v11}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v11

    invoke-interface {v11, v7}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v7
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_2

    const/16 v11, 0x48

    const/4 v14, 0x0

    :try_start_7
    div-int/2addr v11, v14
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    if-eqz v7, :cond_11

    .line 523
    const/4 v7, 0x0

    goto :goto_1b

    :cond_11
    const/4 v7, 0x1

    :goto_1b
    packed-switch v7, :pswitch_data_f

    goto :goto_1e

    :pswitch_e
    const/4 v5, 0x0

    goto/16 :goto_27

    .line 436
    :catchall_1
    move-exception v0

    move-object v2, v0

    throw v2

    .line 511
    :catch_0
    move-exception v0

    move v5, v14

    goto/16 :goto_31

    .line 480
    :goto_1c
    :try_start_8
    invoke-interface {v11, v7}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v7
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_2

    if-eqz v7, :cond_12

    .line 523
    const/16 v7, 0x9

    goto :goto_1d

    :cond_12
    move/from16 v7, v25

    :goto_1d
    packed-switch v7, :pswitch_data_10

    goto :goto_19

    .line 526
    :goto_1e
    :pswitch_f
    sget v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v7, v7, 0x5

    rem-int/lit16 v11, v7, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v11, 0x2

    rem-int/2addr v7, v11

    if-nez v7, :cond_13

    .line 480
    :cond_13
    const/4 v7, 0x0

    :try_start_9
    aget-byte v11, v5, v7
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_3

    const/16 v7, 0x70

    if-ne v11, v7, :cond_1e

    .line 482
    :try_start_a
    array-length v7, v5

    or-int/lit8 v11, v7, -0x2

    const/4 v14, 0x1

    shl-int/2addr v11, v14

    and-int/lit8 v24, v7, 0x1

    not-int v7, v7

    const/16 v22, -0x2

    and-int v7, v22, v7

    or-int v7, v24, v7

    neg-int v7, v7

    not-int v7, v7

    sub-int/2addr v11, v7

    sub-int/2addr v11, v14

    invoke-static {v5, v11}, Ljava/util/Arrays;->copyOf([BI)[B

    move-result-object v7

    .line 484
    new-instance v11, Lcom/visa/vac/tc/emvconverter/BERTLV;

    array-length v14, v7
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_2

    int-to-short v14, v14

    const/4 v6, 0x0

    :try_start_b
    invoke-direct {v11, v7, v6, v14}, Lcom/visa/vac/tc/emvconverter/BERTLV;-><init>([BSS)V
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_1

    .line 487
    :try_start_c
    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getLen()S

    move-result v6

    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v14

    array-length v14, v14
    :try_end_c
    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_2

    if-eq v6, v14, :cond_14

    .line 523
    const/4 v6, 0x0

    goto :goto_1f

    :cond_14
    const/4 v6, 0x1

    :goto_1f
    packed-switch v6, :pswitch_data_11

    goto :goto_21

    .line 526
    :pswitch_10
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v6, v6, 0x27

    rem-int/lit16 v14, v6, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v14, 0x2

    rem-int/2addr v6, v14

    if-eqz v6, :cond_15

    .line 488
    :cond_15
    :try_start_d
    const-string v6, "Response length doesn\'t match expected!!"

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_d
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_2

    .line 436
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v14, v6, 0x19

    and-int/lit8 v6, v6, 0x19

    const/16 v24, 0x1

    shl-int/lit8 v6, v6, 0x1

    neg-int v6, v6

    neg-int v6, v6

    xor-int v26, v14, v6

    and-int/2addr v6, v14

    shl-int/lit8 v6, v6, 0x1

    add-int v6, v26, v6

    rem-int/lit16 v14, v6, 0x80

    sput v14, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v14, 0x2

    rem-int/2addr v6, v14

    if-eqz v6, :cond_16

    .line 523
    const/4 v6, 0x1

    goto :goto_20

    :cond_16
    const/4 v6, 0x0

    :goto_20
    packed-switch v6, :pswitch_data_12

    .line 436
    goto :goto_21

    .line 526
    :pswitch_11
    nop

    .line 490
    :goto_21
    :try_start_e
    new-instance v6, Ljava/lang/StringBuilder;

    const-string v14, "Response Tag: "

    invoke-direct {v6, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getTag()S

    move-result v14

    invoke-static {v14}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v14

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 491
    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v6

    array-length v6, v6

    if-eqz v6, :cond_18

    .line 492
    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    .line 493
    new-instance v6, Ljava/lang/StringBuilder;

    const-string v14, "Response len: "

    invoke-direct {v6, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    const/4 v14, 0x1

    aget-byte v5, v5, v14

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/Utils;->byteHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V

    .line 494
    new-instance v5, Ljava/lang/StringBuilder;

    const-string v6, "tlvResp len : "

    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v11}, Lcom/visa/vac/tc/emvconverter/BERTLV;->getValue()[B

    move-result-object v6

    array-length v6, v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/CAL;->Logit(Ljava/lang/String;)V
    :try_end_e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_2

    .line 526
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    add-int/lit8 v5, v5, 0x2f

    rem-int/lit16 v6, v5, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v6, 0x2

    rem-int/2addr v5, v6

    if-nez v5, :cond_17

    .line 523
    goto :goto_22

    :cond_17
    const/16 v23, 0x41

    :goto_22
    packed-switch v23, :pswitch_data_13

    .line 526
    :pswitch_12
    nop

    .line 497
    :cond_18
    const/16 v5, 0x15

    if-ge v15, v5, :cond_19

    .line 523
    const/4 v5, 0x0

    goto :goto_23

    :cond_19
    const/4 v5, 0x1

    :goto_23
    packed-switch v5, :pswitch_data_14

    const/4 v7, -0x2

    goto :goto_25

    .line 436
    :pswitch_13
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v6, v5, 0x4d

    and-int/lit8 v14, v5, 0x4d

    or-int/2addr v6, v14

    const/4 v14, 0x1

    shl-int/2addr v6, v14

    and-int/lit8 v14, v5, -0x4e

    not-int v5, v5

    and-int v5, v21, v5

    or-int/2addr v5, v14

    sub-int/2addr v6, v5

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v5, 0x2

    rem-int/2addr v6, v5

    if-eqz v6, :cond_1a

    .line 498
    :cond_1a
    :try_start_f
    array-length v5, v7

    and-int/lit8 v6, v5, -0x2

    const/4 v7, -0x2

    or-int/2addr v5, v7

    add-int/2addr v6, v5

    int-to-short v5, v6

    invoke-virtual {v1, v11, v5}, Lcom/visa/vac/tc/emvconverter/CAL;->saveCardResponse(Lcom/visa/vac/tc/emvconverter/BERTLV;S)Landroid/util/ArrayMap;
    :try_end_f
    .catch Ljava/lang/Exception; {:try_start_f .. :try_end_f} :catch_2

    .line 526
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v6, v5, 0x16

    const/4 v11, 0x1

    shl-int/2addr v6, v11

    xor-int/lit8 v5, v5, 0x16

    sub-int/2addr v6, v5

    sub-int/2addr v6, v11

    rem-int/lit16 v5, v6, 0x80

    sput v5, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v5, 0x2

    rem-int/2addr v6, v5

    if-nez v6, :cond_1b

    .line 523
    const/4 v5, 0x1

    goto :goto_24

    :cond_1b
    const/4 v5, 0x0

    :goto_24
    packed-switch v5, :pswitch_data_15

    .line 526
    :pswitch_14
    nop

    .line 498
    :goto_25
    nop

    .line 526
    sget v5, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v6, v5, 0x14

    const/4 v11, 0x1

    shl-int/2addr v6, v11

    xor-int/lit8 v5, v5, 0x14

    sub-int/2addr v6, v5

    const/4 v5, 0x0

    sub-int/2addr v6, v5

    sub-int/2addr v6, v11

    rem-int/lit16 v11, v6, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v14, 0x2

    rem-int/2addr v6, v14

    if-nez v6, :cond_1c

    .line 523
    move/from16 v25, v20

    goto :goto_26

    :cond_1c
    nop

    :goto_26
    packed-switch v25, :pswitch_data_16

    .line 526
    :pswitch_15
    nop

    .line 464
    add-int/lit8 v10, v10, 0x3

    const/4 v6, 0x1

    sub-int/2addr v10, v6

    sub-int/2addr v10, v6

    and-int/lit8 v6, v9, 0x1

    xor-int/lit8 v9, v9, 0x1

    or-int/2addr v9, v6

    add-int/2addr v6, v9

    int-to-byte v9, v6

    .line 436
    add-int/lit8 v11, v11, 0x5d

    const/4 v6, 0x1

    sub-int/2addr v11, v6

    and-int/lit8 v6, v11, -0x1

    or-int/lit8 v11, v11, -0x1

    add-int/2addr v6, v11

    rem-int/lit16 v11, v6, 0x80

    sput v11, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v11, 0x2

    rem-int/2addr v6, v11

    if-eqz v6, :cond_1d

    .line 526
    :cond_1d
    move v7, v5

    const/4 v5, 0x2

    const/4 v6, 0x1

    goto/16 :goto_17

    .line 511
    :catch_1
    move-exception v0

    move v5, v6

    goto/16 :goto_31

    .line 480
    :cond_1e
    const/4 v5, 0x0

    .line 502
    :goto_27
    nop

    .line 503
    nop

    .line 523
    sget v4, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v6, v4, 0x3f

    and-int/lit8 v7, v4, 0x3f

    or-int/2addr v6, v7

    const/4 v9, 0x1

    shl-int/2addr v6, v9

    not-int v7, v7

    or-int/lit8 v4, v4, 0x3f

    and-int/2addr v4, v7

    neg-int v4, v4

    xor-int v7, v6, v4

    and-int/2addr v4, v6

    shl-int/2addr v4, v9

    add-int/2addr v7, v4

    rem-int/lit16 v4, v7, 0x80

    sput v4, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v4, 0x2

    rem-int/2addr v7, v4

    if-nez v7, :cond_1f

    goto :goto_28

    :cond_1f
    const/16 v23, 0x3b

    :goto_28
    packed-switch v23, :pswitch_data_17

    .line 507
    :pswitch_16
    move v13, v5

    move/from16 v4, v17

    goto :goto_29

    .line 511
    :catch_2
    move-exception v0

    const/4 v5, 0x0

    goto/16 :goto_31

    .line 464
    :cond_20
    move v5, v7

    .line 507
    :goto_29
    if-eqz v13, :cond_21

    .line 523
    const/16 v6, 0x49

    goto :goto_2a

    :cond_21
    const/16 v6, 0x5a

    :goto_2a
    packed-switch v6, :pswitch_data_18

    goto/16 :goto_6

    .line 436
    :pswitch_17
    sget v6, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v7, v6, 0x7f

    const/4 v9, 0x1

    sub-int/2addr v7, v9

    or-int/lit8 v10, v7, -0x1

    shl-int/2addr v10, v9

    xor-int/lit8 v7, v7, -0x1

    sub-int/2addr v10, v7

    rem-int/lit16 v7, v10, 0x80

    sput v7, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v7, 0x2

    rem-int/2addr v10, v7

    if-eqz v10, :cond_22

    .line 444
    :cond_22
    add-int/lit8 v8, v8, 0x71

    and-int/lit8 v7, v8, -0x1

    or-int/lit8 v8, v8, -0x1

    add-int/2addr v7, v8

    xor-int/lit8 v8, v7, -0x6c

    and-int/lit8 v9, v7, -0x6c

    or-int/2addr v8, v9

    const/4 v10, 0x1

    shl-int/2addr v8, v10

    not-int v9, v9

    or-int/lit8 v7, v7, -0x6c

    and-int/2addr v7, v9

    sub-int/2addr v8, v7

    .line 436
    and-int/lit8 v7, v6, 0x1d

    xor-int/lit8 v6, v6, 0x1d

    or-int/2addr v6, v7

    neg-int v6, v6

    neg-int v6, v6

    or-int v9, v7, v6

    const/4 v10, 0x1

    shl-int/2addr v9, v10

    xor-int/2addr v6, v7

    sub-int/2addr v9, v6

    rem-int/lit16 v6, v9, 0x80

    sput v6, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v6, 0x2

    rem-int/2addr v9, v6

    if-eqz v9, :cond_23

    .line 523
    const/16 v6, 0x57

    goto :goto_2b

    :cond_23
    const/16 v6, 0xe

    :goto_2b
    packed-switch v6, :pswitch_data_19

    .line 526
    goto :goto_2c

    .line 436
    :pswitch_18
    nop

    .line 444
    :goto_2c
    move v7, v5

    const/4 v5, 0x2

    const/4 v6, 0x1

    const/16 v9, 0x23

    goto/16 :goto_4

    .line 460
    :goto_2d
    nop

    .line 526
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x61

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    xor-int/lit8 v0, v0, 0x61

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-nez v2, :cond_24

    goto :goto_2f

    .line 447
    :goto_2e
    nop

    .line 436
    const/16 v0, 0x55

    or-int/lit8 v2, v11, 0x55

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    and-int/lit8 v3, v11, -0x56

    not-int v6, v11

    and-int/2addr v0, v6

    or-int/2addr v0, v3

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-nez v2, :cond_24

    .line 526
    :cond_24
    :goto_2f
    move v11, v4

    move v7, v5

    goto :goto_34

    .line 444
    :goto_30
    nop

    .line 523
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v2, v0, 0x6e

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    xor-int/lit8 v0, v0, 0x6e

    sub-int/2addr v2, v0

    or-int/lit8 v0, v2, -0x1

    shl-int/2addr v0, v3

    xor-int/lit8 v2, v2, -0x1

    sub-int/2addr v0, v2

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v0, v2

    if-nez v0, :cond_25

    .line 526
    :cond_25
    move v11, v4

    goto :goto_34

    .line 511
    :catch_3
    move-exception v0

    move v5, v7

    .line 513
    :goto_31
    invoke-virtual {v1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->sendCALLogging(Ljava/lang/Exception;)V

    .line 514
    nop

    .line 515
    invoke-virtual {v0}, Ljava/lang/Throwable;->getMessage()Ljava/lang/String;

    move-result-object v0

    const-string v2, "TAG_LOST"

    invoke-virtual {v0, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_2a

    .line 518
    nop

    .line 436
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 v2, v0, 0x6f

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    xor-int/lit8 v0, v0, 0x6f

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-eqz v2, :cond_26

    .line 523
    const/4 v0, 0x1

    goto :goto_32

    :cond_26
    move v0, v5

    :goto_32
    packed-switch v0, :pswitch_data_1a

    .line 526
    goto :goto_33

    .line 436
    :pswitch_19
    nop

    .line 521
    :goto_33
    move v7, v5

    const/16 v11, -0x5b

    :goto_34
    if-eqz v7, :cond_27

    .line 523
    const/16 v0, 0x62

    goto :goto_35

    :cond_27
    const/16 v0, 0x1c

    :goto_35
    packed-switch v0, :pswitch_data_1b

    .line 436
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v2, v0, 0x21

    and-int/lit8 v0, v0, 0x21

    or-int/2addr v0, v2

    const/4 v3, 0x1

    shl-int/2addr v0, v3

    neg-int v2, v2

    not-int v2, v2

    sub-int/2addr v0, v2

    sub-int/2addr v0, v3

    rem-int/lit16 v2, v0, 0x80

    sput v2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v2, 0x2

    rem-int/2addr v0, v2

    if-nez v0, :cond_28

    .line 523
    const/16 v9, 0x2a

    goto :goto_36

    :cond_28
    const/16 v9, 0x11

    :goto_36
    packed-switch v9, :pswitch_data_1c

    .line 522
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 523
    const/16 v11, 0x5a

    goto :goto_37

    .line 522
    :pswitch_1a
    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->BuildConfig(Ljava/lang/String;)V

    .line 523
    const/16 v0, 0x8

    move v11, v0

    .line 436
    :goto_37
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v2, v0, 0x15

    const/16 v3, 0x15

    xor-int/2addr v0, v3

    or-int/2addr v0, v2

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-nez v2, :cond_29

    .line 523
    const/16 v16, 0x30

    goto :goto_38

    :cond_29
    nop

    :goto_38
    packed-switch v16, :pswitch_data_1d

    .line 526
    goto :goto_39

    .line 436
    :pswitch_1b
    goto :goto_39

    .line 516
    :cond_2a
    new-instance v0, Ljava/lang/Exception;

    invoke-direct {v0, v2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V

    throw v0

    .line 526
    :goto_39
    :pswitch_1c
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v2, 0x31

    and-int/lit8 v3, v0, -0x32

    not-int v4, v0

    and-int/2addr v4, v2

    or-int/2addr v3, v4

    and-int/2addr v0, v2

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    or-int v4, v3, v0

    shl-int/lit8 v2, v4, 0x1

    xor-int/2addr v0, v3

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    const/4 v3, 0x2

    rem-int/2addr v2, v3

    if-nez v2, :cond_2b

    .line 523
    const/16 v10, 0x62

    goto :goto_3a

    :cond_2b
    const/16 v10, 0x12

    :goto_3a
    packed-switch v10, :pswitch_data_1e

    .line 526
    goto :goto_3b

    :pswitch_1d
    return v11

    :goto_3b
    const/4 v2, 0x0

    :try_start_10
    invoke-super {v2}, Ljava/lang/Object;->hashCode()I

    throw v2
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_2

    :catchall_2
    move-exception v0

    throw v0

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x1
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x40
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x0
        :pswitch_4
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x0
        :pswitch_5
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x59
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x28
        :pswitch_6
    .end packed-switch

    :pswitch_data_8
    .packed-switch 0x0
        :pswitch_7
    .end packed-switch

    :pswitch_data_9
    .packed-switch 0x4d
        :pswitch_8
    .end packed-switch

    :pswitch_data_a
    .packed-switch 0x2f
        :pswitch_9
    .end packed-switch

    :pswitch_data_b
    .packed-switch 0x1
        :pswitch_a
    .end packed-switch

    :pswitch_data_c
    .packed-switch 0x0
        :pswitch_b
    .end packed-switch

    :pswitch_data_d
    .packed-switch 0x32
        :pswitch_c
    .end packed-switch

    :pswitch_data_e
    .packed-switch 0x41
        :pswitch_d
    .end packed-switch

    :pswitch_data_f
    .packed-switch 0x1
        :pswitch_e
    .end packed-switch

    :pswitch_data_10
    .packed-switch 0x9
        :pswitch_f
    .end packed-switch

    :pswitch_data_11
    .packed-switch 0x0
        :pswitch_10
    .end packed-switch

    :pswitch_data_12
    .packed-switch 0x0
        :pswitch_11
    .end packed-switch

    :pswitch_data_13
    .packed-switch 0x41
        :pswitch_12
    .end packed-switch

    :pswitch_data_14
    .packed-switch 0x0
        :pswitch_13
    .end packed-switch

    :pswitch_data_15
    .packed-switch 0x0
        :pswitch_14
    .end packed-switch

    :pswitch_data_16
    .packed-switch 0x50
        :pswitch_15
    .end packed-switch

    :pswitch_data_17
    .packed-switch 0xd
        :pswitch_16
    .end packed-switch

    :pswitch_data_18
    .packed-switch 0x49
        :pswitch_17
    .end packed-switch

    :pswitch_data_19
    .packed-switch 0x57
        :pswitch_18
    .end packed-switch

    :pswitch_data_1a
    .packed-switch 0x1
        :pswitch_19
    .end packed-switch

    :pswitch_data_1b
    .packed-switch 0x1c
        :pswitch_1c
    .end packed-switch

    :pswitch_data_1c
    .packed-switch 0x2a
        :pswitch_1a
    .end packed-switch

    :pswitch_data_1d
    .packed-switch 0x30
        :pswitch_1b
    .end packed-switch

    :pswitch_data_1e
    .packed-switch 0x12
        :pswitch_1d
    .end packed-switch
.end method

.method public setCalData(Ljava/lang/String;Ljava/lang/Object;)V
    .locals 3

    .line 1321
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x2b

    rem-int/lit16 v1, v0, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_0

    move v0, v1

    goto :goto_0

    :cond_0
    move v0, v2

    :goto_0
    invoke-static {p1, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    packed-switch v0, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    const/16 p1, 0x9

    :try_start_0
    div-int/2addr p1, v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception p1

    throw p1

    :goto_1
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 p2, p1, 0x1a

    or-int/lit8 p1, p1, 0x1a

    add-int/2addr p2, p1

    or-int/lit8 p1, p2, -0x1

    shl-int/2addr p1, v2

    xor-int/lit8 p2, p2, -0x1

    sub-int/2addr p1, p2

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    return-void

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method public setCurrentTime()V
    .locals 3

    .line 203
    new-instance v0, Ljava/util/Date;

    invoke-direct {v0}, Ljava/util/Date;-><init>()V

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->NfcTransceiver:Ljava/util/Date;

    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x2f

    xor-int/lit8 v0, v0, 0x2f

    or-int/2addr v0, v1

    neg-int v0, v0

    neg-int v0, v0

    and-int v2, v1, v0

    or-int/2addr v0, v1

    add-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v2, v2, 0x2

    if-nez v2, :cond_0

    const/16 v0, 0x18

    goto :goto_0

    :cond_0
    const/16 v0, 0x57

    :goto_0
    packed-switch v0, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    return-void

    :goto_1
    const/4 v0, 0x0

    :try_start_0
    throw v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception v0

    throw v0

    :pswitch_data_0
    .packed-switch 0x57
        :pswitch_0
    .end packed-switch
.end method

.method public setLocalConfigMaps(Landroid/util/ArrayMap;)V
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 922
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, v0, 0x79

    not-int v2, v1

    or-int/lit8 v3, v0, 0x79

    and-int/2addr v2, v3

    shl-int/lit8 v1, v1, 0x1

    neg-int v1, v1

    neg-int v1, v1

    and-int v3, v2, v1

    or-int/2addr v1, v2

    add-int/2addr v3, v1

    rem-int/lit16 v1, v3, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_0

    :cond_0
    sput-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->setFinalOutcome:Landroid/util/ArrayMap;

    xor-int/lit8 p1, v0, 0xc

    and-int/lit8 v0, v0, 0xc

    shl-int/lit8 v0, v0, 0x1

    add-int/2addr p1, v0

    xor-int/lit8 v0, p1, -0x1

    and-int/lit8 p1, p1, -0x1

    shl-int/lit8 p1, p1, 0x1

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    return-void
.end method

.method public setSEMaps([Ljava/lang/Object;)V
    .locals 8

    .line 918
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, v0, 0x2d

    and-int/lit8 v0, v0, 0x2d

    const/4 v2, 0x1

    shl-int/2addr v0, v2

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v0, 0x0

    if-eqz v1, :cond_0

    .line 911
    move v1, v0

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    packed-switch v1, :pswitch_data_0

    .line 918
    :pswitch_0
    move v1, v0

    .line 911
    :cond_1
    :goto_1
    array-length v3, p1

    if-ge v1, v3, :cond_2

    .line 912
    aget-object v3, p1, v1

    check-cast v3, Landroid/util/ArrayMap;

    .line 914
    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/visa/vac/tc/emvconverter/ApduScript;

    .line 915
    sget-object v5, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getSvID()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ":"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v4}, Lcom/visa/vac/tc/emvconverter/ApduScript;->getInterfaceID()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v5, v4, v3}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 911
    or-int/lit8 v3, v1, 0x48

    shl-int/2addr v3, v2

    xor-int/lit8 v1, v1, 0x48

    sub-int/2addr v3, v1

    add-int/lit8 v3, v3, -0x46

    add-int/lit8 v1, v3, -0x1

    .line 918
    sget v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v4, v3, 0x29

    shl-int/2addr v4, v2

    xor-int/lit8 v3, v3, 0x29

    sub-int/2addr v4, v3

    rem-int/lit16 v3, v4, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_1

    goto :goto_1

    :cond_2
    sget-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    const-string v0, "ANY:ANY"

    invoke-virtual {p1, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/util/ArrayMap;

    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x6d

    xor-int/lit8 p1, p1, 0x6d

    or-int/2addr p1, v0

    neg-int p1, p1

    neg-int p1, p1

    xor-int v1, v0, p1

    and-int/2addr p1, v0

    shl-int/2addr p1, v2

    add-int/2addr v1, p1

    rem-int/lit16 p1, v1, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_3

    .line 911
    goto :goto_2

    :cond_3
    const/16 v2, 0xb

    :goto_2
    packed-switch v2, :pswitch_data_1

    .line 918
    return-void

    :pswitch_1
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x1
        :pswitch_1
    .end packed-switch
.end method

.method public setScriptDefaults(Landroid/util/ArrayMap;)V
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArrayMap<",
            "Ljava/lang/Object;",
            "Ljava/lang/Object;",
            ">;)V"
        }
    .end annotation

    .line 930
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v1, v0, 0x62

    const/4 v2, 0x1

    sub-int/2addr v1, v2

    rem-int/lit16 v3, v1, 0x80

    sput v3, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v3, 0x0

    if-eqz v1, :cond_0

    move v1, v3

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    sput-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessResult:Landroid/util/ArrayMap;

    packed-switch v1, :pswitch_data_0

    const/16 p1, 0x36

    :try_start_0
    div-int/2addr p1, v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :pswitch_0
    add-int/lit8 v0, v0, 0x20

    sub-int/2addr v0, v2

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v0, v0, 0x2

    return-void

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method public setTxnAmount(Lcom/visa/vac/tc/emvconverter/Transaction;Z)V
    .locals 10

    .line 1482
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    or-int/lit8 v1, v0, 0x3d

    const/4 v2, 0x1

    shl-int/2addr v1, v2

    xor-int/lit8 v0, v0, 0x3d

    sub-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v0, 0x0

    if-nez v1, :cond_0

    .line 1459
    move v1, v2

    goto :goto_0

    :cond_0
    move v1, v0

    :goto_0
    const/16 v3, 0x3c

    const-string v4, "DtTm"

    const-string v5, "DvcID"

    const-string v6, "LV.PRESENTCARD_MSG"

    packed-switch v1, :pswitch_data_0

    .line 1455
    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    .line 1456
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v7

    .line 1457
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    .line 1458
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->clearCardData(Z)V

    .line 1459
    if-eqz p2, :cond_2

    goto :goto_2

    .line 1455
    :pswitch_0
    invoke-static {v6}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    .line 1456
    invoke-static {v5}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v7

    .line 1457
    invoke-static {v4}, Lcom/visa/vac/tc/emvconverter/TagDataList;->getSecGenData(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    .line 1458
    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->clearCardData(Z)V

    .line 1459
    if-eqz p2, :cond_1

    const/16 v9, 0x50

    goto :goto_1

    :cond_1
    const/16 v9, 0x2c

    :goto_1
    packed-switch v9, :pswitch_data_1

    goto :goto_5

    :goto_2
    move v9, v0

    goto :goto_3

    :cond_2
    move v9, v2

    :goto_3
    packed-switch v9, :pswitch_data_2

    :goto_4
    :pswitch_1
    goto/16 :goto_c

    .line 1460
    :goto_5
    :pswitch_2
    invoke-direct {p0, p2}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Z)V

    .line 1461
    invoke-static {v5, v7}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1462
    iget-object p2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionId:Ljava/lang/String;

    const-string v5, "TxID"

    invoke-static {v5, p2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1463
    invoke-static {v4, v8}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1464
    invoke-static {v6, v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1467
    nop

    .line 1468
    iget-object p2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionSequenceCounter:Ljava/lang/String;

    if-eqz p2, :cond_3

    .line 1459
    move p2, v2

    goto :goto_6

    :cond_3
    move p2, v0

    :goto_6
    packed-switch p2, :pswitch_data_3

    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    const/16 v1, 0x7d

    xor-int/lit8 v4, p2, 0x7d

    and-int/lit8 v5, p2, 0x7d

    or-int/2addr v4, v5

    shl-int/2addr v4, v2

    and-int/lit8 v5, p2, -0x7e

    not-int p2, p2

    and-int/2addr p2, v1

    or-int/2addr p2, v5

    neg-int p2, p2

    not-int p2, p2

    sub-int/2addr v4, p2

    sub-int/2addr v4, v2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    if-nez v4, :cond_4

    goto :goto_7

    :pswitch_3
    move p2, v0

    goto :goto_b

    .line 1469
    :cond_4
    :goto_7
    iget-object p2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionSequenceCounter:Ljava/lang/String;

    invoke-static {p2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result p2

    .line 1470
    const v1, 0x5f5e0ff

    if-lt p2, v1, :cond_5

    .line 1459
    const/4 v1, 0x7

    goto :goto_8

    :cond_5
    const/16 v1, 0x9

    :goto_8
    packed-switch v1, :pswitch_data_4

    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    xor-int/lit8 v1, p2, 0x9

    and-int/lit8 v4, p2, 0x9

    or-int/2addr v1, v4

    shl-int/2addr v1, v2

    not-int v4, v4

    or-int/lit8 v5, p2, 0x9

    and-int/2addr v4, v5

    neg-int v4, v4

    xor-int v5, v1, v4

    and-int/2addr v1, v4

    shl-int/2addr v1, v2

    add-int/2addr v5, v1

    rem-int/lit16 v1, v5, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_6

    .line 1471
    :cond_6
    nop

    .line 1459
    const/16 v1, 0x59

    and-int/lit8 v4, p2, -0x5a

    not-int v5, p2

    and-int/2addr v5, v1

    or-int/2addr v4, v5

    and-int/2addr p2, v1

    shl-int/2addr p2, v2

    add-int/2addr v4, p2

    rem-int/lit16 p2, v4, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_7

    const/16 p2, 0x4a

    goto :goto_9

    :cond_7
    const/16 p2, 0x45

    :goto_9
    packed-switch p2, :pswitch_data_5

    goto :goto_a

    .line 1482
    :pswitch_4
    nop

    .line 1474
    :goto_a
    move p2, v0

    :goto_b
    :pswitch_5
    const/16 v1, -0x60bf

    invoke-static {v1}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object v1

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    xor-int/lit8 v5, p2, -0x3a

    and-int/lit8 p2, p2, -0x3a

    shl-int/2addr p2, v2

    add-int/2addr v5, p2

    sub-int/2addr v5, v0

    sub-int/2addr v5, v2

    and-int/lit8 p2, v5, 0x3c

    not-int v6, p2

    or-int/2addr v5, v3

    and-int/2addr v5, v6

    shl-int/2addr p2, v2

    add-int/2addr v5, p2

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object p2

    invoke-virtual {p2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object p2

    .line 6397
    invoke-virtual {v1}, Ljava/lang/Number;->shortValue()S

    move-result v1

    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v1

    sget-object v4, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v5, "emv.poi.TransactionID"

    invoke-static {v5, v1, p2, v4}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1459
    sget p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v1, p2, 0xf

    not-int v4, v1

    or-int/lit8 p2, p2, 0xf

    and-int/2addr p2, v4

    shl-int/2addr v1, v2

    not-int v1, v1

    sub-int/2addr p2, v1

    sub-int/2addr p2, v2

    rem-int/lit16 v1, p2, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p2, p2, 0x2

    if-nez p2, :cond_8

    move v0, v2

    :cond_8
    packed-switch v0, :pswitch_data_6

    goto/16 :goto_4

    .line 1482
    :pswitch_6
    nop

    .line 1478
    :goto_c
    const/16 p2, -0x60fe

    invoke-static {p2}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object p2

    iget-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->amount:Ljava/lang/String;

    .line 7397
    invoke-virtual {p2}, Ljava/lang/Number;->shortValue()S

    move-result p2

    invoke-static {p2}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p2

    sget-object v1, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v4, "emv.poi.Amount"

    invoke-static {v4, p2, v0, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1480
    const/16 p2, 0x9c

    invoke-static {p2}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object p2

    iget-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionType:Ljava/lang/String;

    .line 8397
    invoke-virtual {p2}, Ljava/lang/Number;->shortValue()S

    move-result p2

    invoke-static {p2}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object p2

    sget-object v1, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v4, "emv.poi.TransactionType"

    invoke-static {v4, p2, v0, v1}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1482
    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    .line 1459
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 p2, p1, 0x2b

    not-int v0, p2

    or-int/lit8 p1, p1, 0x2b

    and-int/2addr p1, v0

    shl-int/2addr p2, v2

    neg-int p2, p2

    neg-int p2, p2

    not-int p2, p2

    sub-int/2addr p1, p2

    sub-int/2addr p1, v2

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_9

    const/16 v3, 0xd

    :cond_9
    packed-switch v3, :pswitch_data_7

    goto :goto_d

    .line 1482
    :pswitch_7
    return-void

    .line 1459
    :goto_d
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x2c
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x0
        :pswitch_2
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x0
        :pswitch_3
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x9
        :pswitch_5
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x45
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x0
        :pswitch_6
    .end packed-switch

    :pswitch_data_7
    .packed-switch 0x3c
        :pswitch_7
    .end packed-switch
.end method

.method public setTxnInterface(I)V
    .locals 4

    .line 1325
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, v0, 0x51

    or-int/lit8 v0, v0, 0x51

    add-int/2addr v1, v0

    rem-int/lit16 v0, v1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v1, v1, 0x2

    const/4 v0, 0x1

    const/4 v2, 0x0

    if-eqz v1, :cond_0

    move v1, v0

    goto :goto_0

    :cond_0
    move v1, v2

    :goto_0
    packed-switch v1, :pswitch_data_0

    invoke-virtual {p0, p1, v2}, Lcom/visa/vac/tc/emvconverter/CAL;->setTxnInterface(IZ)V

    goto :goto_1

    :pswitch_0
    invoke-virtual {p0, p1, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->setTxnInterface(IZ)V

    :goto_1
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    and-int/lit8 v1, p1, 0x75

    xor-int/lit8 p1, p1, 0x75

    or-int/2addr p1, v1

    neg-int p1, p1

    neg-int p1, p1

    and-int v3, v1, p1

    or-int/2addr p1, v1

    add-int/2addr v3, p1

    rem-int/lit16 p1, v3, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_1

    move v0, v2

    :cond_1
    packed-switch v0, :pswitch_data_1

    return-void

    :pswitch_1
    const/4 p1, 0x0

    :try_start_0
    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
    .end packed-switch
.end method

.method public setTxnInterface(IZ)V
    .locals 6

    .line 1368
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 v1, v0, 0x4b

    and-int/lit8 v2, v0, 0x4b

    or-int/2addr v2, v1

    const/4 v3, 0x1

    shl-int/2addr v2, v3

    neg-int v1, v1

    or-int v4, v2, v1

    shl-int/2addr v4, v3

    xor-int/2addr v1, v2

    sub-int/2addr v4, v1

    rem-int/lit16 v1, v4, 0x80

    sput v1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v4, v4, 0x2

    const/4 v1, 0x0

    if-nez v4, :cond_0

    .line 1333
    move v2, v1

    goto :goto_0

    :cond_0
    move v2, v3

    :goto_0
    const-string v4, "emv.poi.POSEntryMode"

    const/4 v5, 0x0

    packed-switch v2, :pswitch_data_0

    .line 1330
    nop

    .line 1331
    nop

    .line 1333
    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    if-nez p1, :cond_2

    goto :goto_2

    .line 1330
    :pswitch_0
    nop

    .line 1331
    nop

    .line 1333
    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    if-ne p1, v3, :cond_1

    const/4 p1, 0x7

    goto :goto_1

    :cond_1
    const/16 p1, 0x4f

    :goto_1
    packed-switch p1, :pswitch_data_1

    goto :goto_4

    :goto_2
    const/16 p1, 0x36

    goto :goto_3

    :cond_2
    const/16 p1, 0x2c

    :goto_3
    packed-switch p1, :pswitch_data_2

    :goto_4
    goto :goto_5

    .line 1334
    :pswitch_1
    iput v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 1335
    const/16 p1, 0xc

    iput p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1336
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v3, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContactless:Z

    .line 1337
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v1, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContact:Z

    .line 1338
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v3, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->activeInterface:Z

    .line 1339
    iput-boolean v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminalData:Z

    .line 1340
    iput-boolean v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    .line 1341
    nop

    .line 1342
    const-string p1, "07"

    invoke-static {v4, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1333
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x58

    or-int/lit8 p1, p1, 0x58

    add-int/2addr v0, p1

    sub-int/2addr v0, v1

    sub-int/2addr v0, v3

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_3

    .line 1368
    :cond_3
    const-string p1, "Contactless"

    goto :goto_8

    .line 1343
    :goto_5
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    const/4 v2, 0x3

    if-ne p1, v2, :cond_4

    .line 1333
    const/16 p1, 0x34

    goto :goto_6

    :cond_4
    const/16 p1, 0x8

    :goto_6
    packed-switch p1, :pswitch_data_3

    move-object p1, v5

    goto :goto_8

    :pswitch_2
    xor-int/lit8 p1, v0, 0x1d

    and-int/lit8 v0, v0, 0x1d

    shl-int/2addr v0, v3

    add-int/2addr p1, v0

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_5

    .line 1344
    :cond_5
    iput v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->commandState:I

    .line 1345
    const/16 p1, 0xb

    iput p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1346
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v3, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContact:Z

    .line 1347
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v1, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->eligibleContactless:Z

    .line 1348
    iput-boolean v3, p0, Lcom/visa/vac/tc/emvconverter/CAL;->clear:Z

    .line 1349
    iput-boolean v1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminalData:Z

    .line 1350
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    iput-boolean v3, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->activeInterface:Z

    .line 1351
    nop

    .line 1352
    const-string p1, "05"

    invoke-static {v4, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1333
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 v0, p1, 0x69

    or-int/lit8 p1, p1, 0x69

    add-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_6

    const/16 p1, 0x35

    goto :goto_7

    :cond_6
    const/16 p1, 0x1c

    :goto_7
    packed-switch p1, :pswitch_data_4

    .line 1355
    :pswitch_3
    const-string p1, "Contact"

    :goto_8
    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    sget v2, Lcom/visa/vac/tc/emvconverter/CAL;->setData:I

    iput v2, v0, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionInterface:I

    .line 1356
    const-string v0, "emv.tx.cal.CDSInterfacedID"

    invoke-static {v0, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1357
    const-string v0, "emv.tx.cal.ActiveInterfaceID"

    invoke-static {v0, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1358
    const-string v0, "LV.ACTIVE_INTERFACE"

    invoke-static {v0, p1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1359
    const-string v0, "emv.poi.POID"

    const-string v2, "0"

    invoke-static {v0, v2}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1361
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    const-string v4, "ANY:"

    invoke-virtual {v4, v2}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    iput-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getTransactionType:Landroid/util/ArrayMap;

    .line 1362
    sget-object v2, Lcom/visa/vac/tc/emvconverter/CAL;->access$300:Landroid/util/ArrayMap;

    const-string v4, "ANY:ANY"

    invoke-virtual {v2, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V

    .line 1364
    sget-object v0, Lcom/visa/vac/tc/emvconverter/CAL;->getFinalOutcome:Landroid/util/ArrayMap;

    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Ljava/util/List;

    sput-object p1, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessConfiguration:Ljava/util/List;

    .line 1365
    const-string p1, "emv.mod.cal.SessionStatus"

    const-string v0, "Opened"

    invoke-static {p1, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1367
    if-eqz p2, :cond_7

    .line 1333
    const/16 p1, 0x48

    goto :goto_9

    :cond_7
    const/16 p1, 0x38

    :goto_9
    packed-switch p1, :pswitch_data_5

    goto :goto_a

    :pswitch_4
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    and-int/lit8 p2, p1, 0x65

    or-int/lit8 p1, p1, 0x65

    or-int v0, p2, p1

    shl-int/2addr v0, v3

    xor-int/2addr p1, p2

    sub-int/2addr v0, p1

    rem-int/lit16 p1, v0, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 v0, v0, 0x2

    if-nez v0, :cond_8

    .line 1368
    :cond_8
    iget-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->ContactlessKernel:Lcom/visa/vac/tc/emvconverter/CAL$CALListener;

    iget p2, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    iget-object v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    invoke-interface {p1, p2, v0}, Lcom/visa/vac/tc/emvconverter/CAL$CALListener;->updateStatus(ILcom/visa/vac/tc/emvconverter/Transaction;)V

    .line 1333
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    or-int/lit8 p2, p1, 0x2e

    shl-int/2addr p2, v3

    xor-int/lit8 p1, p1, 0x2e

    sub-int/2addr p2, p1

    sub-int/2addr p2, v1

    sub-int/2addr p2, v3

    rem-int/lit16 p1, p2, 0x80

    sput p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p2, p2, 0x2

    if-eqz p2, :cond_9

    .line 1368
    :cond_9
    nop

    :goto_a
    nop

    .line 1333
    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    xor-int/lit8 p2, p1, 0x4b

    and-int/lit8 p1, p1, 0x4b

    or-int/2addr p1, p2

    shl-int/2addr p1, v3

    sub-int/2addr p1, p2

    rem-int/lit16 p2, p1, 0x80

    sput p2, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    rem-int/lit8 p1, p1, 0x2

    if-nez p1, :cond_a

    const/16 p1, 0x20

    goto :goto_b

    :cond_a
    const/16 p1, 0x17

    :goto_b
    packed-switch p1, :pswitch_data_6

    .line 1368
    return-void

    .line 1333
    :pswitch_5
    :try_start_0
    throw v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0x7
        :pswitch_1
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x36
        :pswitch_1
    .end packed-switch

    :pswitch_data_3
    .packed-switch 0x34
        :pswitch_2
    .end packed-switch

    :pswitch_data_4
    .packed-switch 0x35
        :pswitch_3
    .end packed-switch

    :pswitch_data_5
    .packed-switch 0x48
        :pswitch_4
    .end packed-switch

    :pswitch_data_6
    .packed-switch 0x20
        :pswitch_5
    .end packed-switch
.end method

.method public startTxn(Lcom/visa/vac/tc/emvconverter/Transaction;)V
    .locals 5

    .line 1498
    sget v0, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 v0, v0, 0x1d

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    or-int/lit8 v2, v0, -0x1

    shl-int/2addr v2, v1

    xor-int/lit8 v0, v0, -0x1

    sub-int/2addr v2, v0

    rem-int/lit16 v0, v2, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_0

    .line 1486
    :cond_0
    invoke-static {v1}, Lcom/visa/vac/tc/emvconverter/TagDataList;->clearCardData(Z)V

    .line 1487
    const/4 v0, 0x0

    invoke-direct {p0, v0}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Z)V

    .line 1488
    const/4 v0, 0x7

    iput v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->calTxnState:I

    .line 1489
    const/16 v0, 0xa

    iput v0, p0, Lcom/visa/vac/tc/emvconverter/CAL;->getInstance:I

    .line 1492
    const/16 v0, -0x60fe

    invoke-static {v0}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object v0

    iget-object v2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->amount:Ljava/lang/String;

    .line 9397
    invoke-virtual {v0}, Ljava/lang/Number;->shortValue()S

    move-result v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v4, "emv.poi.Amount"

    invoke-static {v4, v0, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1494
    const/16 v0, 0x9c

    invoke-static {v0}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object v0

    iget-object v2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionType:Ljava/lang/String;

    .line 10397
    invoke-virtual {v0}, Ljava/lang/Number;->shortValue()S

    move-result v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v4, "emv.poi.TransactionType"

    invoke-static {v4, v0, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1496
    const/16 v0, -0x60bf

    invoke-static {v0}, Ljava/lang/Short;->valueOf(S)Ljava/lang/Short;

    move-result-object v0

    iget-object v2, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionSequenceCounter:Ljava/lang/String;

    .line 11397
    invoke-virtual {v0}, Ljava/lang/Number;->shortValue()S

    move-result v0

    invoke-static {v0}, Lcom/visa/vac/tc/emvconverter/Utils;->shortToString(S)Ljava/lang/String;

    move-result-object v0

    sget-object v3, Lcom/visa/vac/tc/emvconverter/TagDataList;->$$a:Landroid/util/ArrayMap;

    const-string v4, "emv.poi.TransactionID"

    invoke-static {v4, v0, v2, v3}, Lcom/visa/vac/tc/emvconverter/CAL;->$$a(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Landroid/util/ArrayMap;)V

    .line 1497
    iget-object v0, p1, Lcom/visa/vac/tc/emvconverter/Transaction;->transactionId:Ljava/lang/String;

    const-string v2, "TxID"

    invoke-static {v2, v0}, Lcom/visa/vac/tc/emvconverter/TagDataList;->storeSecGenData(Ljava/lang/String;Ljava/lang/Object;)V

    .line 1498
    iput-object p1, p0, Lcom/visa/vac/tc/emvconverter/CAL;->setTerminate:Lcom/visa/vac/tc/emvconverter/Transaction;

    sget p1, Lcom/visa/vac/tc/emvconverter/CAL;->transceive:I

    add-int/lit8 p1, p1, 0x52

    sub-int/2addr p1, v1

    rem-int/lit16 v0, p1, 0x80

    sput v0, Lcom/visa/vac/tc/emvconverter/CAL;->setLastSW:I

    rem-int/lit8 p1, p1, 0x2

    if-eqz p1, :cond_1

    const/16 p1, 0x2e

    goto :goto_0

    :cond_1
    const/16 p1, 0x3b

    :goto_0
    packed-switch p1, :pswitch_data_0

    goto :goto_1

    :pswitch_0
    return-void

    :goto_1
    const/4 p1, 0x0

    :try_start_0
    invoke-super {p1}, Ljava/lang/Object;->hashCode()I

    throw p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :catchall_0
    move-exception p1

    throw p1

    :pswitch_data_0
    .packed-switch 0x3b
        :pswitch_0
    .end packed-switch
.end method
