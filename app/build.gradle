apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'


def appPropertiesFile = rootProject.file("app-settings.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))
def appModeProd = appProperties["env.use.mode.production"]

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        netpos_signing_config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            enableV1Signing false
        }
    }
    compileSdkVersion 32
    buildToolsVersion "29.0.3"
    buildFeatures.dataBinding = true
    ndkVersion "21.3.6528147"
    defaultConfig {
        resValue "string", "app_name", "NetPOS Contactless"
        vectorDrawables.useSupportLibrary = true
        applicationId "com.woleapp.netpos.contactless"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 13
        versionName "1.0.13"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def environmentPath
        if (appModeProd == "true")
            environmentPath = appProperties["env.path.production"]
        else
            environmentPath = appProperties["env.path.staging"]
        buildConfigField "Boolean", "APPMODE_PROD", appModeProd
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.netpos_signing_config
            buildConfigField "String", "BUILD_VARIANT", "\"debug\""
            ndk {
                abiFilters "armeabi-v7a", "x86", "x86_64"
            }
            resValue "string", "app_name", "NetPOS Debug"
            applicationIdSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.netpos_signing_config
            buildConfigField "String", "BUILD_VARIANT", "\"release\""
            resValue "string", "app_name", "NetPOS Contactless"
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        nibssserverdebug {
            initWith debug
            buildConfigField "String", "BUILD_VARIANT", "\"nibssServerDebug\""
            resValue "string", "app_name", "Admin Debug"
            applicationIdSuffix ".debugserver"
        }
        releaseAdmin {
            initWith release
            buildConfigField "String", "BUILD_VARIANT", "\"releaseAdmin\""
            resValue "string", "app_name", "Admin NetPOS"
            applicationIdSuffix ".releaseAdmin"
        }
    }

    flavorDimensions "whiteLabel"
    productFlavors {
        netpos {
            dimension "whiteLabel"
        }
        firstbank {
            dimension "whiteLabel"
            applicationIdSuffix ".firstbank"
        }
        providus {
            dimension "whiteLabel"
            applicationIdSuffix ".providus"
        }
        wemabank {
            dimension "whiteLabel"
            applicationIdSuffix ".wemabank"
        }
        fcmb {
            dimension "whiteLabel"
            applicationIdSuffix ".fcmb"
        }
        easypay {
            dimension "whiteLabel"
            applicationIdSuffix ".easypay"
        }
        fcmbeasypay {
            dimension "whiteLabel"
            applicationIdSuffix ".fcmbeasypay"
        }
        zenith {
            dimension "whiteLabel"
            applicationIdSuffix ".zenith"
        }
        unitybank {
            dimension "whiteLabel"
            applicationIdSuffix ".unitybank"
        }
        polaris {
            dimension "whiteLabel"
            applicationIdSuffix ".polaris"
        }
    }
    variantFilter { variant ->
        def name_types = variant.flavors*.name
        def name = name_types.join()
        if (variant.buildType.name == "release" && name.contains("nibssserverdebug") || variant.buildType.name == "release" && name.contains("releaseAdmin")) {
            setIgnore(true)
        }
        if (variant.buildType.name == "debug" && name.contains("nibssserverdebug") || variant.buildType.name == "debug" && name.contains("releaseAdmin")) {
            setIgnore(true)
        }
    }


    sourceSets {
        netpos {
            java.srcDirs('src/default/java')
        }
        firstbank {
            java.srcDirs('src/default/java')
        }
        providus {
            java.srcDirs('src/default/java')
        }
    }


    compileOptions {
        coreLibraryDesugaringEnabled true
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    ndkVersion '21.3.6528147'
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }
}

dependencies {
    def lottieVersion = "5.2.0"

    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation("commons-codec:commons-codec:1.15")
    implementation("commons-lang:commons-lang:2.6")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.5'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    //rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

    //epms
    implementation 'net.sf.j8583:j8583:1.12.0'
    implementation 'com.github.netplus2:epmsLibrary:1.0.3'

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //android lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // OTP VIEWS
//    implementation "com.github.mukeshsolanki:android-otpview-pinview:2.1.2"
    implementation "io.github.chaosleung:pinview:$pin_view"

    // BarCode Scanner Library
    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")

    // Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    // For viewModel
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.5.1"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

    //easyprefs
    implementation 'com.pixplicity.easyprefs:EasyPrefs:1.10.0'

    //JWT
    implementation 'com.auth0:java-jwt:3.10.0'
    implementation 'com.auth0.android:jwtdecode:2.0.0'

    //viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    //MQTT
    implementation 'com.hivemq:hivemq-mqtt-client:1.2.1'
    implementation "com.hivemq:hivemq-mqtt-client-websocket:1.2.1"
    implementation 'net.sourceforge.streamsupport:android-retrostreams:1.7.2'
    implementation 'net.sourceforge.streamsupport:android-retrofuture:1.7.2'

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.google.zxing:core:3.4.1'

//    //Eclipse MQTT
//    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
//    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //paging
    implementation "androidx.paging:paging-runtime:2.1.2"

    //preference
    implementation("androidx.preference:preference-ktx:1.2.0")

    //lottie
    implementation 'com.airbnb.android:lottie:5.2.0'

    //scanner
    implementation project(':netposbarcodesdk')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    // Lootie
    implementation "com.airbnb.android:lottie:$lottieVersion"

    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.8'

    //pdf viewer
    implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'

    //workmanager
    def work_version = "2.5.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
//    implementation 'com.google.firebase:firebase-crashlytics'
//    implementation 'com.google.firebase:firebase-analytics'

}
